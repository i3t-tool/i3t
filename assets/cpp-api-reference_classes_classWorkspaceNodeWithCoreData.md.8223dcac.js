import{_ as e,o as t,c as a,Q as s}from"./chunks/framework.0f749972.js";const g=JSON.parse('{"title":"WorkspaceNodeWithCoreData","description":"","frontmatter":{"title":"WorkspaceNodeWithCoreData"},"headers":[],"relativePath":"cpp-api-reference/classes/classWorkspaceNodeWithCoreData.md","filePath":"cpp-api-reference/classes/classWorkspaceNodeWithCoreData.md"}'),o={name:"cpp-api-reference/classes/classWorkspaceNodeWithCoreData.md"},n=s(`<h1 id="workspacenodewithcoredata" tabindex="-1">WorkspaceNodeWithCoreData <a class="header-anchor" href="#workspacenodewithcoredata" aria-label="Permalink to &quot;WorkspaceNodeWithCoreData&quot;">​</a></h1><p><code>#include &quot;GUI/Elements/Nodes/WorkspaceElementsWithCoreData.h&quot;</code></p><p>Inherits from <a href="/cpp-api-reference/classes/classWorkspaceNode.html">WorkspaceNode</a>, <a href="/cpp-api-reference/classes/classIVisitable.html">IVisitable</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html">DIWNE::Node</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html">DIWNE::DiwneObject</a>, std::enable_shared_from_this&lt; DiwneObject &gt;</p><p>Inherited by <a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreDataWithPins.html">WorkspaceNodeWithCoreDataWithPins</a>, <a href="/cpp-api-reference/classes/classWorkspaceTransformation.html">WorkspaceTransformation</a></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-workspacenodewithcoredata">WorkspaceNodeWithCoreData</a></strong>(<a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html">DIWNE::Diwne</a> &amp; diwne, <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Core::Node</a> &gt; nodebase)</td></tr><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-~workspacenodewithcoredata">~WorkspaceNodeWithCoreData</a></strong>() override</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-drawdatalabel">drawDataLabel</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-drawmenuduplicate">drawMenuDuplicate</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-drawmenulevelofdetail">drawMenuLevelOfDetail</a></strong>() =0</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-drawmenuseteditable">drawMenuSetEditable</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-drawmenusetprecision">drawMenuSetPrecision</a></strong>()</td></tr><tr><td>float</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-getdataitemswidth">getDataItemsWidth</a></strong>()</td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1DataMap.html">Core::DataMap</a> const *</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-getdatamap">getDataMap</a></strong>()</td></tr><tr><td><a href="/cpp-api-reference/files/WorkspaceElements_8h.html#enum-floatpopupmode">FloatPopupMode</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-getfloatpopupmode">getFloatPopupMode</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-getislabelbeingedited">getIsLabelBeingEdited</a></strong>()</td></tr><tr><td><a href="/cpp-api-reference/files/WorkspaceElements_8h.html#enum-workspacelevelofdetail">WorkspaceLevelOfDetail</a></td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-getlevelofdetail">getLevelOfDetail</a></strong>()</td></tr><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Core::Node</a> &gt; const</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-getnodebase">getNodebase</a></strong>() const</td></tr><tr><td>int</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-getnumberofvisibledecimal">getNumberOfVisibleDecimal</a></strong>()</td></tr><tr><td>virtual int</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-maxlengthofdata">maxLengthOfData</a></strong>() =0</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-popupcontent">popupContent</a></strong>() override&lt;br&gt;Content of popup menu raise on this object.</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-processobjectdrag">processObjectDrag</a></strong>() override</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-processselect">processSelect</a></strong>() override</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-processunselect">processUnselect</a></strong>() override</td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1DataMap.html">Core::DataMap</a> const *</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-setdatamap">setDataMap</a></strong>(const <a href="/cpp-api-reference/classes/classCore_1_1DataMap.html">Core::DataMap</a> * mapToSet)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-setfloatpopupmode">setFloatPopupMode</a></strong>(<a href="/cpp-api-reference/files/WorkspaceElements_8h.html#enum-floatpopupmode">FloatPopupMode</a> mode)</td></tr><tr><td><a href="/cpp-api-reference/files/WorkspaceElements_8h.html#enum-workspacelevelofdetail">WorkspaceLevelOfDetail</a></td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-setlevelofdetail">setLevelOfDetail</a></strong>(<a href="/cpp-api-reference/files/WorkspaceElements_8h.html#enum-workspacelevelofdetail">WorkspaceLevelOfDetail</a> levelOfDetail)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-setnumberofvisibledecimal">setNumberOfVisibleDecimal</a></strong>(int value)</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-topcontent">topContent</a></strong>() override</td></tr><tr><td>virtual float</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#function-updatedataitemswidth">updateDataItemsWidth</a></strong>()</td></tr></tbody></table><h2 id="protected-attributes" tabindex="-1">Protected Attributes <a class="header-anchor" href="#protected-attributes" aria-label="Permalink to &quot;Protected Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>float</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#variable-m-dataitemswidth">m_dataItemsWidth</a></strong></td></tr><tr><td><a href="/cpp-api-reference/files/WorkspaceElements_8h.html#enum-floatpopupmode">FloatPopupMode</a></td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#variable-m-floatpopupmode">m_floatPopupMode</a></strong></td></tr><tr><td>float</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#variable-m-headerminwidth">m_headerMinWidth</a></strong> &lt;br&gt;Can be used to specify the minimum header width of the node.</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#variable-m-isfirstdraw">m_isFirstDraw</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#variable-m-islabelbeingedited">m_isLabelBeingEdited</a></strong></td></tr><tr><td><a href="/cpp-api-reference/files/WorkspaceElements_8h.html#enum-workspacelevelofdetail">WorkspaceLevelOfDetail</a></td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#variable-m-levelofdetail">m_levelOfDetail</a></strong></td></tr><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Core::Node</a> &gt; const</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#variable-m-nodebase">m_nodebase</a></strong> &lt;br&gt;reference to <a href="./.html">Core</a></td></tr><tr><td>int</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html#variable-m-numberofvisibledecimal">m_numberOfVisibleDecimal</a></strong> &lt;br&gt;number of decimal places used while display floats in the workspace</td></tr></tbody></table><h2 id="additional-inherited-members" tabindex="-1">Additional inherited members <a class="header-anchor" href="#additional-inherited-members" aria-label="Permalink to &quot;Additional inherited members&quot;">​</a></h2><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/classWorkspaceNode.html">WorkspaceNode</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#function-workspacenode">WorkspaceNode</a></strong>(<a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html">DIWNE::Diwne</a> &amp; diwne, <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#typedef-id">DIWNE::ID</a> id, std::string const topLabel =&quot;Header&quot;, std::string const middleLabel =&quot;Content&quot;)</td></tr><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#function-~workspacenode">~WorkspaceNode</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#function-beforecontent">beforeContent</a></strong>() override</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#function-bottomcontent">bottomContent</a></strong>() override</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#function-bypassfocusforinteractionaction">bypassFocusForInteractionAction</a></strong>() override</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#function-deleteaction">deleteAction</a></strong>() override</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#function-drawmenudelete">drawMenuDelete</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#function-getduplicatenode">getDuplicateNode</a></strong>() const</td></tr><tr><td>std::string</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#function-getmiddlelabel">getMiddleLabel</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#function-getremovefromworkspace">getRemoveFromWorkspace</a></strong>() const</td></tr><tr><td>std::string</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#function-gettoplabel">getTopLabel</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#function-leftcontent">leftContent</a></strong>() override</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#function-middlecontent">middleContent</a></strong>() override</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#function-rightcontent">rightContent</a></strong>() override</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#function-setduplicatenode">setDuplicateNode</a></strong>(bool value)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#function-setmiddlelabel">setMiddleLabel</a></strong>(std::string label)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#function-setremovefromworkspace">setRemoveFromWorkspace</a></strong>(bool value)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#function-settoplabel">setTopLabel</a></strong>(std::string label)</td></tr></tbody></table><p><strong>Public Attributes inherited from <a href="/cpp-api-reference/classes/classWorkspaceNode.html">WorkspaceNode</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#variable-m-duplicatenode">m_duplicateNode</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#variable-m-removefromworkspacewindow">m_removeFromWorkspaceWindow</a></strong></td></tr></tbody></table><p><strong>Protected Attributes inherited from <a href="/cpp-api-reference/classes/classWorkspaceNode.html">WorkspaceNode</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>std::string</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#variable-m-middlelabel">m_middleLabel</a></strong></td></tr><tr><td>std::string</td><td><strong><a href="/cpp-api-reference/classes/classWorkspaceNode.html#variable-m-toplabel">m_topLabel</a></strong></td></tr></tbody></table><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/classIVisitable.html">IVisitable</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classIVisitable.html#function-accept">accept</a></strong>(<a href="/cpp-api-reference/classes/classNodeVisitor.html">NodeVisitor</a> &amp; visitor) =0</td></tr></tbody></table><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html">DIWNE::Node</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-node">Node</a></strong>(<a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html">DIWNE::Diwne</a> &amp; diwne, <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#typedef-id">DIWNE::ID</a> id, std::string const labelDiwne =&quot;DiwneNode&quot;)&lt;br&gt;Default constructor.</td></tr><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-~node">~Node</a></strong>()&lt;br&gt;Default destructor.</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-afterenddiwne">afterEndDiwne</a></strong>() override</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-allowdrawing">allowDrawing</a></strong>() override&lt;br&gt;Decision maker whether object should be drawn (not outside of window for example)</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-beforebegindiwne">beforeBeginDiwne</a></strong>() override</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-begin">begin</a></strong>() override</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-bottomcontent">bottomContent</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-bottomcontentdiwne">bottomContentDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-content">content</a></strong>() override</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-deleteaction">deleteAction</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-deleteactiondiwne">deleteActionDiwne</a></strong>()</td></tr><tr><td>template &lt;typename T &amp;gt; &lt;br&gt;bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-drawnodediwne">drawNodeDiwne</a></strong>(<a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#enum-drawmodenodeposition">DrawModeNodePosition</a> nodePosMode =DrawModeNodePosition::OnItsPosition, <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#enum-drawmode">DrawMode</a> drawMode =DrawMode::Interacting)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-end">end</a></strong>() override</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#enum-diwneaction">DIWNE::DiwneAction</a></td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-getdragactiontype">getDragActionType</a></strong>() const</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#enum-diwneaction">DIWNE::DiwneAction</a></td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-getholdactiontype">getHoldActionType</a></strong>() const</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#typedef-id">DIWNE::ID</a> const</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-getid">getId</a></strong>() const</td></tr><tr><td>ImVec2</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-getnodepositiondiwne">getNodePositionDiwne</a></strong>() const</td></tr><tr><td>ImRect</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-getnoderectdiwne">getNodeRectDiwne</a></strong>() const</td></tr><tr><td>ImVec2</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-getnoderectsizediwne">getNodeRectSizeDiwne</a></strong>() const</td></tr><tr><td>virtual ImRect</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-getrectdiwne">getRectDiwne</a></strong>() const</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-getrender">getRender</a></strong>() const</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#enum-diwneaction">DIWNE::DiwneAction</a></td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-gettouchactiontype">getTouchActionType</a></strong>() const</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-leftcontent">leftContent</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-leftcontentdiwne">leftContentDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-middlecontent">middleContent</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-middlecontentdiwne">middleContentDiwne</a></strong>()</td></tr><tr><td><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html">Node</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-operator=">operator=</a></strong>(const <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html">Node</a> &amp; other)&lt;br&gt;Assignment operator.</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-processdrag">processDrag</a></strong>() override</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-rightcontent">rightContent</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-rightcontentdiwne">rightContentDiwne</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-setnodepositiondiwne">setNodePositionDiwne</a></strong>(ImVec2 const &amp; position)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-setrender">setRender</a></strong>(bool render)</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-setselected">setSelected</a></strong>(const bool selected) override</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-topcontentdiwne">topContentDiwne</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-translatenodepositiondiwne">translateNodePositionDiwne</a></strong>(ImVec2 const amount)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-updatesizes">updateSizes</a></strong>() override</td></tr></tbody></table><p><strong>Public Attributes inherited from <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html">DIWNE::Node</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#variable-m-drawanyway">m_drawAnyway</a></strong></td></tr></tbody></table><p><strong>Protected Attributes inherited from <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html">DIWNE::Node</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>ImRect</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#variable-m-bottomrectdiwne">m_bottomRectDiwne</a></strong></td></tr><tr><td>float</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#variable-m-centerdummyspace">m_centerDummySpace</a></strong> &lt;br&gt;Rectangle of parts of node in diwne.</td></tr><tr><td>ImRect</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#variable-m-leftrectdiwne">m_leftRectDiwne</a></strong></td></tr><tr><td>ImRect</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#variable-m-middlerectdiwne">m_middleRectDiwne</a></strong></td></tr><tr><td>ImVec2</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#variable-m-nodepositiondiwne">m_nodePositionDiwne</a></strong></td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#enum-drawmodenodeposition">DrawModeNodePosition</a></td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#variable-m-nodeposmode">m_nodePosMode</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#variable-m-render">m_render</a></strong> &lt;br&gt;used to hide nodes in tutorial scenes (action &quot;toggleNodeWorkspaceVisibility&quot;)</td></tr><tr><td>ImRect</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#variable-m-rightrectdiwne">m_rightRectDiwne</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#variable-m-todelete">m_toDelete</a></strong> &lt;br&gt;Set to true after node delete action.</td></tr><tr><td>ImRect</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#variable-m-toprectdiwne">m_topRectDiwne</a></strong></td></tr></tbody></table><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html">DIWNE::DiwneObject</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-diwneobject">DiwneObject</a></strong>(<a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html">DIWNE::Diwne</a> &amp; diwne, <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#typedef-id">DIWNE::ID</a> id, std::string const labelDiwne)&lt;br&gt;Constructor.</td></tr><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-~diwneobject">~DiwneObject</a></strong>() =default</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-aftercontent">afterContent</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-aftercontentdiwne">afterContentDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-afterend">afterEnd</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-afterenddiwne">afterEndDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowdrawing">allowDrawing</a></strong>()&lt;br&gt;Decision maker whether object should be drawn (not outside of window for example)</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowinteraction">allowInteraction</a></strong>()&lt;br&gt;Decision maker whether object can interact (not include content elements)</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowprocessdrag">allowProcessDrag</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowprocessfocused">allowProcessFocused</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowprocessfocusedforinteraction">allowProcessFocusedForInteraction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowprocesshold">allowProcessHold</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowprocessraisepopup">allowProcessRaisePopup</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowprocessselect">allowProcessSelect</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowprocessunhold">allowProcessUnhold</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowprocessunselect">allowProcessUnselect</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-beforebegin">beforeBegin</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-beforebegindiwne">beforeBeginDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-beforecontent">beforeContent</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-beforecontentdiwne">beforeContentDiwne</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-begin">begin</a></strong>() =0</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-bypassdragaction">bypassDragAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-bypassfocusaction">bypassFocusAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-bypassfocusforinteractionaction">bypassFocusForInteractionAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-bypassholdaction">bypassHoldAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-bypassraisepopupaction">bypassRaisePopupAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-bypassselectaction">bypassSelectAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-bypasstouchaction">bypassTouchAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-bypassunholdaction">bypassUnholdAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-bypassunselectaction">bypassUnselectAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-content">content</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-contentdiwne">contentDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-drawdiwne">drawDiwne</a></strong>(<a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#enum-drawmode">DrawMode</a> drawMode =DrawMode::Interacting)&lt;br&gt;Main function for drawing object and deal with interactions.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-end">end</a></strong>() =0</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-finalize">finalize</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-finalizediwne">finalizeDiwne</a></strong>()</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#enum-diwneaction">DIWNE::DiwneAction</a></td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-getdragactiontype">getDragActionType</a></strong>() const =0</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#enum-diwneaction">DIWNE::DiwneAction</a></td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-getholdactiontype">getHoldActionType</a></strong>() const =0</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#typedef-id">DIWNE::ID</a> const</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-getiddiwne">getIdDiwne</a></strong>() const</td></tr><tr><td>virtual ImRect</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-getrectdiwne">getRectDiwne</a></strong>() const =0</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-getselectable">getSelectable</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-getselected">getSelected</a></strong>() const&lt;br&gt;Getter of selection state.</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#enum-diwneaction">DIWNE::DiwneAction</a></td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-gettouchactiontype">getTouchActionType</a></strong>() const =0</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-initialize">initialize</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-initializediwne">initializeDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-interactionbegininlastdraw">interactionBeginInLastDraw</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-interactionendinlastdraw">interactionEndInLastDraw</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processdrag">processDrag</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processfocused">processFocused</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processfocusedforinteraction">processFocusedForInteraction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processhold">processHold</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processinteractions">processInteractions</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processinteractionsalways">processInteractionsAlways</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processinteractionsdiwne">processInteractionsDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processobjectfocused">processObjectFocused</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processobjectfocusedforinteraction">processObjectFocusedForInteraction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processobjecthold">processObjectHold</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processobjectselect">processObjectSelect</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processobjectunhold">processObjectUnhold</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processobjectunselect">processObjectUnselect</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processraisepopupdiwne">processRaisePopupDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processshowpopupdiwne">processShowPopupDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processunhold">processUnhold</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-setselectable">setSelectable</a></strong>(bool const selectable)</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-setselected">setSelected</a></strong>(bool const selected)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-showtooltiplabel">showTooltipLabel</a></strong>(std::string const &amp; label, ImColor const &amp;&amp; color)&lt;br&gt;Show a colored text for example for immediate hints.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-updatesizes">updateSizes</a></strong>()</td></tr></tbody></table><p><strong>Public Attributes inherited from <a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html">DIWNE::DiwneObject</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td><a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html">DIWNE::Diwne</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-diwne">diwne</a></strong></td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#enum-drawmode">DrawMode</a></td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-drawmode">m_drawMode</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-focused">m_focused</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-focusedforinteraction">m_focusedForInteraction</a></strong></td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#typedef-id">DIWNE::ID</a> const</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-iddiwne">m_idDiwne</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-inner-interaction-happen">m_inner_interaction_happen</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-inner-interaction-happen-previous-draw">m_inner_interaction_happen_previous_draw</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-isactive">m_isActive</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-isdragged">m_isDragged</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-isheld">m_isHeld</a></strong></td></tr><tr><td>std::string const</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-labeldiwne">m_labelDiwne</a></strong></td></tr><tr><td>std::string const</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-popupiddiwne">m_popupIDDiwne</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-selectable">m_selectable</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-selected">m_selected</a></strong></td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-workspacenodewithcoredata" tabindex="-1">function WorkspaceNodeWithCoreData <a class="header-anchor" href="#function-workspacenodewithcoredata" aria-label="Permalink to &quot;function WorkspaceNodeWithCoreData&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">WorkspaceNodeWithCoreData</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::Diwne </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> diwne,</span></span>
<span class="line"><span style="color:#E1E4E8;">    Ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::Node </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> nodebase</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">WorkspaceNodeWithCoreData</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::Diwne </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> diwne,</span></span>
<span class="line"><span style="color:#24292E;">    Ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::Node </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> nodebase</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-workspacenodewithcoredata-1" tabindex="-1">function ~WorkspaceNodeWithCoreData <a class="header-anchor" href="#function-workspacenodewithcoredata-1" aria-label="Permalink to &quot;function ~WorkspaceNodeWithCoreData&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">~</span><span style="color:#B392F0;">WorkspaceNodeWithCoreData</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">~</span><span style="color:#6F42C1;">WorkspaceNodeWithCoreData</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><h3 id="function-drawdatalabel" tabindex="-1">function drawDataLabel <a class="header-anchor" href="#function-drawdatalabel" aria-label="Permalink to &quot;function drawDataLabel&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">drawDataLabel</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">drawDataLabel</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-drawmenuduplicate" tabindex="-1">function drawMenuDuplicate <a class="header-anchor" href="#function-drawmenuduplicate" aria-label="Permalink to &quot;function drawMenuDuplicate&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">drawMenuDuplicate</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">drawMenuDuplicate</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-drawmenulevelofdetail" tabindex="-1">function drawMenuLevelOfDetail <a class="header-anchor" href="#function-drawmenulevelofdetail" aria-label="Permalink to &quot;function drawMenuLevelOfDetail&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">drawMenuLevelOfDetail</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">drawMenuLevelOfDetail</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspaceModel.html#function-drawmenulevelofdetail">WorkspaceModel::drawMenuLevelOfDetail</a>, <a href="/cpp-api-reference/classes/classWorkspaceOperator.html#function-drawmenulevelofdetail">WorkspaceOperator::drawMenuLevelOfDetail</a>, <a href="/cpp-api-reference/classes/classWorkspaceOperator.html#function-drawmenulevelofdetail">WorkspaceOperator::drawMenuLevelOfDetail</a>, <a href="/cpp-api-reference/classes/classWorkspaceScreen.html#function-drawmenulevelofdetail">WorkspaceScreen::drawMenuLevelOfDetail</a>, <a href="/cpp-api-reference/classes/classWorkspaceSequence.html#function-drawmenulevelofdetail">WorkspaceSequence::drawMenuLevelOfDetail</a>, <a href="/cpp-api-reference/classes/classWorkspaceTransformation__s.html#function-drawmenulevelofdetail">WorkspaceTransformation_s::drawMenuLevelOfDetail</a>, <a href="/cpp-api-reference/classes/classWorkspaceCamera.html#function-drawmenulevelofdetail">WorkspaceCamera::drawMenuLevelOfDetail</a>, <a href="/cpp-api-reference/classes/classWorkspaceCycle.html#function-drawmenulevelofdetail">WorkspaceCycle::drawMenuLevelOfDetail</a>, <a href="/cpp-api-reference/classes/classWorkspaceTransformation.html#function-drawmenulevelofdetail">WorkspaceTransformation::drawMenuLevelOfDetail</a></p><h3 id="function-drawmenuseteditable" tabindex="-1">function drawMenuSetEditable <a class="header-anchor" href="#function-drawmenuseteditable" aria-label="Permalink to &quot;function drawMenuSetEditable&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">drawMenuSetEditable</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">drawMenuSetEditable</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-drawmenusetprecision" tabindex="-1">function drawMenuSetPrecision <a class="header-anchor" href="#function-drawmenusetprecision" aria-label="Permalink to &quot;function drawMenuSetPrecision&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">drawMenuSetPrecision</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">drawMenuSetPrecision</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-getdataitemswidth" tabindex="-1">function getDataItemsWidth <a class="header-anchor" href="#function-getdataitemswidth" aria-label="Permalink to &quot;function getDataItemsWidth&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDataItemsWidth</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDataItemsWidth</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-getdatamap" tabindex="-1">function getDataMap <a class="header-anchor" href="#function-getdatamap" aria-label="Permalink to &quot;function getDataMap&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::DataMap </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDataMap</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::DataMap </span><span style="color:#D73A49;">const</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDataMap</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-getfloatpopupmode" tabindex="-1">function getFloatPopupMode <a class="header-anchor" href="#function-getfloatpopupmode" aria-label="Permalink to &quot;function getFloatPopupMode&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FloatPopupMode</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getFloatPopupMode</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FloatPopupMode</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getFloatPopupMode</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-getislabelbeingedited" tabindex="-1">function getIsLabelBeingEdited <a class="header-anchor" href="#function-getislabelbeingedited" aria-label="Permalink to &quot;function getIsLabelBeingEdited&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getIsLabelBeingEdited</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getIsLabelBeingEdited</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-getlevelofdetail" tabindex="-1">function getLevelOfDetail <a class="header-anchor" href="#function-getlevelofdetail" aria-label="Permalink to &quot;function getLevelOfDetail&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">WorkspaceLevelOfDetail</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getLevelOfDetail</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">WorkspaceLevelOfDetail</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getLevelOfDetail</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-getnodebase" tabindex="-1">function getNodebase <a class="header-anchor" href="#function-getnodebase" aria-label="Permalink to &quot;function getNodebase&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::Node </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getNodebase</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::Node </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getNodebase</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-getnumberofvisibledecimal" tabindex="-1">function getNumberOfVisibleDecimal <a class="header-anchor" href="#function-getnumberofvisibledecimal" aria-label="Permalink to &quot;function getNumberOfVisibleDecimal&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getNumberOfVisibleDecimal</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getNumberOfVisibleDecimal</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-maxlengthofdata" tabindex="-1">function maxLengthOfData <a class="header-anchor" href="#function-maxlengthofdata" aria-label="Permalink to &quot;function maxLengthOfData&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">maxLengthOfData</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">maxLengthOfData</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspaceModel.html#function-maxlengthofdata">WorkspaceModel::maxLengthOfData</a>, <a href="/cpp-api-reference/classes/classWorkspaceOperator.html#function-maxlengthofdata">WorkspaceOperator::maxLengthOfData</a>, <a href="/cpp-api-reference/classes/classWorkspaceOperator.html#function-maxlengthofdata">WorkspaceOperator::maxLengthOfData</a>, <a href="/cpp-api-reference/classes/classWorkspaceScreen.html#function-maxlengthofdata">WorkspaceScreen::maxLengthOfData</a>, <a href="/cpp-api-reference/classes/classWorkspaceSequence.html#function-maxlengthofdata">WorkspaceSequence::maxLengthOfData</a>, <a href="/cpp-api-reference/classes/classWorkspaceTransformation__s.html#function-maxlengthofdata">WorkspaceTransformation_s::maxLengthOfData</a>, <a href="/cpp-api-reference/classes/classWorkspaceCamera.html#function-maxlengthofdata">WorkspaceCamera::maxLengthOfData</a>, <a href="/cpp-api-reference/classes/classWorkspaceCycle.html#function-maxlengthofdata">WorkspaceCycle::maxLengthOfData</a>, <a href="/cpp-api-reference/classes/classWorkspaceTransformation.html#function-maxlengthofdata">WorkspaceTransformation::maxLengthOfData</a></p><h3 id="function-popupcontent" tabindex="-1">function popupContent <a class="header-anchor" href="#function-popupcontent" aria-label="Permalink to &quot;function popupContent&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">popupContent</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">popupContent</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><p>Content of popup menu raise on this object.</p><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classWorkspaceNode.html#function-popupcontent">WorkspaceNode::popupContent</a></p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspaceModel.html#function-popupcontent">WorkspaceModel::popupContent</a>, <a href="/cpp-api-reference/classes/classWorkspaceSequence.html#function-popupcontent">WorkspaceSequence::popupContent</a>, <a href="/cpp-api-reference/classes/classWorkspaceScreen.html#function-popupcontent">WorkspaceScreen::popupContent</a>, <a href="/cpp-api-reference/classes/classWorkspaceTransformation.html#function-popupcontent">WorkspaceTransformation::popupContent</a></p><h3 id="function-processobjectdrag" tabindex="-1">function processObjectDrag <a class="header-anchor" href="#function-processobjectdrag" aria-label="Permalink to &quot;function processObjectDrag&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processObjectDrag</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processObjectDrag</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processobjectdrag">DIWNE::DiwneObject::processObjectDrag</a></p><h3 id="function-processselect" tabindex="-1">function processSelect <a class="header-anchor" href="#function-processselect" aria-label="Permalink to &quot;function processSelect&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processSelect</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processSelect</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-processselect">DIWNE::Node::processSelect</a></p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspaceModel.html#function-processselect">WorkspaceModel::processSelect</a></p><h3 id="function-processunselect" tabindex="-1">function processUnselect <a class="header-anchor" href="#function-processunselect" aria-label="Permalink to &quot;function processUnselect&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processUnselect</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processUnselect</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-processunselect">DIWNE::Node::processUnselect</a></p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspaceModel.html#function-processunselect">WorkspaceModel::processUnselect</a></p><h3 id="function-setdatamap" tabindex="-1">function setDataMap <a class="header-anchor" href="#function-setdatamap" aria-label="Permalink to &quot;function setDataMap&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::DataMap </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setDataMap</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::DataMap </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> mapToSet</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::DataMap </span><span style="color:#D73A49;">const</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setDataMap</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::DataMap </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> mapToSet</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-setfloatpopupmode" tabindex="-1">function setFloatPopupMode <a class="header-anchor" href="#function-setfloatpopupmode" aria-label="Permalink to &quot;function setFloatPopupMode&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setFloatPopupMode</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">FloatPopupMode</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">mode</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setFloatPopupMode</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">FloatPopupMode</span><span style="color:#24292E;"> </span><span style="color:#E36209;">mode</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-setlevelofdetail" tabindex="-1">function setLevelOfDetail <a class="header-anchor" href="#function-setlevelofdetail" aria-label="Permalink to &quot;function setLevelOfDetail&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">WorkspaceLevelOfDetail</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setLevelOfDetail</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">WorkspaceLevelOfDetail</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">levelOfDetail</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">WorkspaceLevelOfDetail</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setLevelOfDetail</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">WorkspaceLevelOfDetail</span><span style="color:#24292E;"> </span><span style="color:#E36209;">levelOfDetail</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-setnumberofvisibledecimal" tabindex="-1">function setNumberOfVisibleDecimal <a class="header-anchor" href="#function-setnumberofvisibledecimal" aria-label="Permalink to &quot;function setNumberOfVisibleDecimal&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setNumberOfVisibleDecimal</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">value</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setNumberOfVisibleDecimal</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">value</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspaceSequence.html#function-setnumberofvisibledecimal">WorkspaceSequence::setNumberOfVisibleDecimal</a></p><h3 id="function-topcontent" tabindex="-1">function topContent <a class="header-anchor" href="#function-topcontent" aria-label="Permalink to &quot;function topContent&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">topContent</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">topContent</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classWorkspaceNode.html#function-topcontent">WorkspaceNode::topContent</a></p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspaceModel.html#function-topcontent">WorkspaceModel::topContent</a>, <a href="/cpp-api-reference/classes/classWorkspaceOperator.html#function-topcontent">WorkspaceOperator::topContent</a>, <a href="/cpp-api-reference/classes/classWorkspaceOperator.html#function-topcontent">WorkspaceOperator::topContent</a>, <a href="/cpp-api-reference/classes/classWorkspaceScreen.html#function-topcontent">WorkspaceScreen::topContent</a>, <a href="/cpp-api-reference/classes/classWorkspaceSequence.html#function-topcontent">WorkspaceSequence::topContent</a>, <a href="/cpp-api-reference/classes/classWorkspaceTransformation.html#function-topcontent">WorkspaceTransformation::topContent</a></p><h3 id="function-updatedataitemswidth" tabindex="-1">function updateDataItemsWidth <a class="header-anchor" href="#function-updatedataitemswidth" aria-label="Permalink to &quot;function updateDataItemsWidth&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateDataItemsWidth</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateDataItemsWidth</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspaceCamera.html#function-updatedataitemswidth">WorkspaceCamera::updateDataItemsWidth</a></p><h2 id="protected-attributes-documentation" tabindex="-1">Protected Attributes Documentation <a class="header-anchor" href="#protected-attributes-documentation" aria-label="Permalink to &quot;Protected Attributes Documentation&quot;">​</a></h2><h3 id="variable-m-dataitemswidth" tabindex="-1">variable m_dataItemsWidth <a class="header-anchor" href="#variable-m-dataitemswidth" aria-label="Permalink to &quot;variable m_dataItemsWidth&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> m_dataItemsWidth;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">float</span><span style="color:#24292E;"> m_dataItemsWidth;</span></span></code></pre></div><h3 id="variable-m-floatpopupmode" tabindex="-1">variable m_floatPopupMode <a class="header-anchor" href="#variable-m-floatpopupmode" aria-label="Permalink to &quot;variable m_floatPopupMode&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">FloatPopupMode m_floatPopupMode;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">FloatPopupMode m_floatPopupMode;</span></span></code></pre></div><h3 id="variable-m-headerminwidth" tabindex="-1">variable m_headerMinWidth <a class="header-anchor" href="#variable-m-headerminwidth" aria-label="Permalink to &quot;variable m_headerMinWidth&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> m_headerMinWidth {</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">float</span><span style="color:#24292E;"> m_headerMinWidth {</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">};</span></span></code></pre></div><p>Can be used to specify the minimum header width of the node.</p><h3 id="variable-m-isfirstdraw" tabindex="-1">variable m_isFirstDraw <a class="header-anchor" href="#variable-m-isfirstdraw" aria-label="Permalink to &quot;variable m_isFirstDraw&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_isFirstDraw </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_isFirstDraw </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-m-islabelbeingedited" tabindex="-1">variable m_isLabelBeingEdited <a class="header-anchor" href="#variable-m-islabelbeingedited" aria-label="Permalink to &quot;variable m_isLabelBeingEdited&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_isLabelBeingEdited </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_isLabelBeingEdited </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-m-levelofdetail" tabindex="-1">variable m_levelOfDetail <a class="header-anchor" href="#variable-m-levelofdetail" aria-label="Permalink to &quot;variable m_levelOfDetail&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">WorkspaceLevelOfDetail m_levelOfDetail;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">WorkspaceLevelOfDetail m_levelOfDetail;</span></span></code></pre></div><h3 id="variable-m-nodebase" tabindex="-1">variable m_nodebase <a class="header-anchor" href="#variable-m-nodebase" aria-label="Permalink to &quot;variable m_nodebase&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::Node </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> m_nodebase;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::Node </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> m_nodebase;</span></span></code></pre></div><p>reference to <a href="./.html">Core</a></p><p><a href="/cpp-api-reference/classes/classWorkspaceNodeWithCoreData.html">WorkspaceNodeWithCoreData</a> is owner</p><h3 id="variable-m-numberofvisibledecimal" tabindex="-1">variable m_numberOfVisibleDecimal <a class="header-anchor" href="#variable-m-numberofvisibledecimal" aria-label="Permalink to &quot;variable m_numberOfVisibleDecimal&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> m_numberOfVisibleDecimal;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> m_numberOfVisibleDecimal;</span></span></code></pre></div><p>number of decimal places used while display floats in the workspace</p><hr><p>Updated on 2024-03-16 at 19:15:00 +0000</p>`,115),r=[n];function l(c,p,i,d,h,f){return t(),a("div",null,r)}const m=e(o,[["render",l]]);export{g as __pageData,m as default};
