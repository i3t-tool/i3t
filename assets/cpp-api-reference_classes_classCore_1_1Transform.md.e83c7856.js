import{_ as s,o as e,c as a,Q as n}from"./chunks/framework.0f749972.js";const m=JSON.parse('{"title":"Core::Transform","description":"","frontmatter":{"title":"Core::Transform"},"headers":[],"relativePath":"cpp-api-reference/classes/classCore_1_1Transform.md","filePath":"cpp-api-reference/classes/classCore_1_1Transform.md"}'),t={name:"cpp-api-reference/classes/classCore_1_1Transform.md"},l=n(`<h1 id="core-transform" tabindex="-1">Core::Transform <a class="header-anchor" href="#core-transform" aria-label="Permalink to &quot;Core::Transform&quot;">​</a></h1><p><code>#include &quot;Core/Nodes/Transform.h&quot;</code></p><p>Inherits from <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Core::Node</a>, std::enable_shared_from_this&lt; Node &gt;</p><p>Inherited by <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl.html">Core::TransformImpl&lt; T &gt;</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1AxisAngle_01_4.html">Core::TransformImpl&lt; ETransformType::AxisAngle &gt;</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1EulerX_01_4.html">Core::TransformImpl&lt; ETransformType::EulerX &gt;</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1EulerY_01_4.html">Core::TransformImpl&lt; ETransformType::EulerY &gt;</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1EulerZ_01_4.html">Core::TransformImpl&lt; ETransformType::EulerZ &gt;</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Free_01_4.html">Core::TransformImpl&lt; ETransformType::Free &gt;</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Frustum_01_4.html">Core::TransformImpl&lt; ETransformType::Frustum &gt;</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1LookAt_01_4.html">Core::TransformImpl&lt; ETransformType::LookAt &gt;</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Ortho_01_4.html">Core::TransformImpl&lt; ETransformType::Ortho &gt;</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Perspective_01_4.html">Core::TransformImpl&lt; ETransformType::Perspective &gt;</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Quat_01_4.html">Core::TransformImpl&lt; ETransformType::Quat &gt;</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Scale_01_4.html">Core::TransformImpl&lt; ETransformType::Scale &gt;</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Translation_01_4.html">Core::TransformImpl&lt; ETransformType::Translation &gt;</a></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-transform">Transform</a></strong>(const <a href="/cpp-api-reference/classes/structCore_1_1TransformOperation.html">TransformOperation</a> &amp; transformType)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-createdefaults">createDefaults</a></strong>()&lt;br&gt;Prepare storage for second level parameters (std::map with values)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-disablesynergies">disableSynergies</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-enablesynergies">enableSynergies</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-free">free</a></strong>()</td></tr><tr><td>int</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-getcurrentindex">getCurrentIndex</a></strong>() const</td></tr><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-getcurrentsequence">getCurrentSequence</a></strong>()</td></tr><tr><td><a href="/cpp-api-reference/classes/structCore_1_1TransformOperation.html#using-valuemap">TransformOperation::ValueMap</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-getdefaulttypes">getDefaultTypes</a></strong>() const</td></tr><tr><td>const <a href="/cpp-api-reference/classes/classCore_1_1Data.html">Data</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-getdefaultvalue">getDefaultValue</a></strong>(const std::string &amp; name) const&lt;br&gt;Get the value which the transform can hold (current value stored in the transformation).</td></tr><tr><td>DefaultValues &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-getdefaultvalues">getDefaultValues</a></strong>()</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-evaluestate">EValueState</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-getvaluestate">getValueState</a></strong>(glm::ivec2 coords) const</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-hasmenusynergies">hasMenuSynergies</a></strong>() const</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-hassavedvalue">hasSavedValue</a></strong>() const</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-hassynergies">hasSynergies</a></strong>() const</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-initdefaults">initDefaults</a></strong>()&lt;br&gt;Init the (non-zero) second level parameters (from LOD::SetValues) via their initDefaults and update the internal transformation matrix).</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-isinsequence">isInSequence</a></strong>() const</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-islocked">isLocked</a></strong>() const</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-isvalid">isValid</a></strong>() const =0&lt;br&gt;Checks the validity of the stored <a href="/cpp-api-reference/classes/classCore_1_1Transform.html">Transform</a> matrix (used by <a href="/cpp-api-reference/namespaces/namespaceGUI.html">GUI</a> to show the corrupted flag).</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-lock">lock</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-notifysequence">notifySequence</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-nullsequence">nullSequence</a></strong>()</td></tr><tr><td><a href="/cpp-api-reference/classes/structCore_1_1TransformOperation.html">TransformOperation</a> *</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-properties">properties</a></strong>() const</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-reloadvalue">reloadValue</a></strong>()&lt;br&gt;Restore saved values if they exist.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-resetmatrixfromdefaults">resetMatrixFromDefaults</a></strong>() =0&lt;br&gt;Reset the transform matrix visible in LOD::Full (internalValue) to match the defaultValues (from LOD::SetValues).</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-savevalue">saveValue</a></strong>()&lt;br&gt;Save current values of the transformation for future reloading.</td></tr><tr><td>template &lt;typename T &amp;gt; &lt;br&gt;<a href="/cpp-api-reference/classes/structCore_1_1SetValueResult.html">SetValueResult</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-setdefaultvalue">setDefaultValue</a></strong>(const std::string &amp; name, T &amp;&amp; val)&lt;br&gt;Setting of one second level parameter defining the transformation (in LOD::SetValues).</td></tr><tr><td>template &lt;typename T &amp;gt; &lt;br&gt;void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-setdefaultvaluenoupdate">setDefaultValueNoUpdate</a></strong>(const std::string &amp; name, T &amp;&amp; val)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-setdefaultvalues">setDefaultValues</a></strong>(const DefaultValues &amp; values)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-setsequence">setSequence</a></strong>(<a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> * s, int index)</td></tr><tr><td>virtual <a href="/cpp-api-reference/classes/structCore_1_1SetValueResult.html">SetValueResult</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-setvalue">setValue</a></strong>(const glm::mat4 &amp; mat) override&lt;br&gt;Lock non-editable values.</td></tr><tr><td>virtual <a href="/cpp-api-reference/classes/structCore_1_1SetValueResult.html">SetValueResult</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-setvalue">setValue</a></strong>(float val, glm::ivec2 coords) override</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-unlock">unlock</a></strong>()</td></tr></tbody></table><h2 id="protected-functions" tabindex="-1">Protected Functions <a class="header-anchor" href="#protected-functions" aria-label="Permalink to &quot;Protected Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-cansetvalue">canSetValue</a></strong>(const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-valuemask">ValueMask</a> &amp; mask, glm::ivec2 coords, float value)</td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1Data.html">Data</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-getdefaultvaluemut">getDefaultValueMut</a></strong>(const std::string &amp; name)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-setdefaultvaluewithsynergies">setDefaultValueWithSynergies</a></strong>(const std::string &amp; name, <a href="/cpp-api-reference/classes/classCore_1_1Data.html">Core::Data</a> &amp;&amp; val)&lt;br&gt;Function for setting values in the Set Defaults LOD.</td></tr></tbody></table><h2 id="protected-attributes" tabindex="-1">Protected Attributes <a class="header-anchor" href="#protected-attributes" aria-label="Permalink to &quot;Protected Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>DefaultValues</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#variable-m-defaultvalues">m_defaultValues</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#variable-m-hasmenusynergies">m_hasMenuSynergies</a></strong> &lt;br&gt;True for transformations, that support synergies, such as scale, eulerAngleXYZ, ortho, frustum, and quaternion ONLY.</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#variable-m-hassynergies">m_hasSynergies</a></strong> &lt;br&gt;applicable for: uniform scale, eulerAngleXYZ, ortho, frustum, and quat and quaternion.</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#variable-m-islocked">m_isLocked</a></strong> &lt;br&gt;Edit of the matrix is limited to editable values - defined in <a href="./.html">Operations.h</a> g_transforms.</td></tr></tbody></table><h2 id="friends" tabindex="-1">Friends <a class="header-anchor" href="#friends" aria-label="Permalink to &quot;Friends&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#friend-graphmanager">GraphManager</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#friend-matrixtracker">MatrixTracker</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html#friend-sequence">Sequence</a></strong></td></tr></tbody></table><h2 id="additional-inherited-members" tabindex="-1">Additional inherited members <a class="header-anchor" href="#additional-inherited-members" aria-label="Permalink to &quot;Additional inherited members&quot;">​</a></h2><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Core::Node</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-adddeletecallback">addDeleteCallback</a></strong>(std::function&lt; void(<a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> <em>)&gt; callback)&lt;br&gt; The callback parameters: Node</em> = node that has been deleted</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addplugcallback">addPlugCallback</a></strong>(std::function&lt; void(<a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> *, <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> *, size_t, size_t)&gt; callback)&lt;br&gt;Registers a callback that gets called when the node&#39;s output pins get plugged in.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addunplugcallback">addUnplugCallback</a></strong>(std::function&lt; void(<a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> *, <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> *, size_t, size_t)&gt; callback)&lt;br&gt;Registers a callback that gets called when the node&#39;s input pins get unplugged.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback</a></strong>(std::function&lt; void(<a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> *)&gt; callback)&lt;br&gt;Registers a callback that gets called on any <a href="./.html">updateValues()</a> call.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-appendchildnode">appendChildNode</a></strong>(<a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> &gt; node)</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-areallinputsplugged">areAllInputsPlugged</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-areallinputsunplugged">areAllInputsUnplugged</a></strong>() const</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-areinputsplugged">areInputsPlugged</a></strong>(int numInputs)</td></tr><tr><td>template &lt;typename T &amp;gt; &lt;br&gt;<a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; T &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-as">as</a></strong>()</td></tr><tr><td>const <a href="/cpp-api-reference/classes/classCore_1_1Data.html">Data</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-data">data</a></strong>(size_t index =0) const&lt;br&gt;Get <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> contents, read only.</td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1Data.html">Data</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-datamut">dataMut</a></strong>(size_t index)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-finalize">finalize</a></strong>()&lt;br&gt;Prepares node for its destruction, after that the destructor can be called.</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceCore.html#typedef-id">ID</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getid">getId</a></strong>() const</td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1Pin.html">Pin</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getinput">getInput</a></strong>(size_t i)</td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classCore_1_1Pin.html">Pin</a> &gt; &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getinputpins">getInputPins</a></strong>()</td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1Data.html">Data</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getinternaldata">getInternalData</a></strong>(size_t index =0)&lt;br&gt;Get data storage for read and write purposes.</td></tr><tr><td>const char *</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getlabel">getLabel</a></strong>() const</td></tr><tr><td>const <a href="/cpp-api-reference/classes/structCore_1_1Operation.html">Operation</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getoperation">getOperation</a></strong>() const</td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1Pin.html">Pin</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getoutput">getOutput</a></strong>(size_t i)</td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classCore_1_1Pin.html">Pin</a> &gt; &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getoutputpins">getOutputPins</a></strong>()</td></tr><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getowner">getOwner</a></strong>() const&lt;br&gt;Get direct owner of this node.</td></tr><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getptr">getPtr</a></strong>()&lt;br&gt;Get reference to this node instance.</td></tr><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getrootowner">getRootOwner</a></strong>()&lt;br&gt;Get the topmost owner of this node.</td></tr><tr><td>std::string</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getsignature">getSignature</a></strong>()&lt;br&gt;&quot;{node type} #{node ID}&quot;</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-evaluestate">EValueState</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getstate">getState</a></strong>(size_t pinIndex =0)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-init">init</a></strong>()&lt;br&gt;Initialize node id, inputs, and outputs according to the preset node type.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-notifyowner">notifyOwner</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-oninit">onInit</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-operator!=">operator!=</a></strong>(const <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> &amp; other) const</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-operator==">operator==</a></strong>(const <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> &amp; other) const</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-enodeplugresult">ENodePlugResult</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-plug">plug</a></strong>(const <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> &gt; &amp; childNode, unsigned fromIndex, unsigned toIndex)&lt;br&gt;Connect this (parent) node output to the <code>childNode</code> input.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-pulse">pulse</a></strong>(size_t index)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal</a></strong>(int inputIndex)&lt;br&gt;Implements the operator reaction to the change of its <em>inputIndex</em> input.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-spreadsignal">spreadSignal</a></strong>()&lt;br&gt;Spread signal to all outputs.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-spreadsignal">spreadSignal</a></strong>(size_t outIndex)&lt;br&gt;Spread signal to the selected output <em>outIndex</em> only.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">updateValues</a></strong>(int inputIndex =0)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr></tbody></table><p><strong>Protected Functions inherited from <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Core::Node</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-node">Node</a></strong>(const <a href="/cpp-api-reference/classes/structCore_1_1Operation.html">Operation</a> &amp; operation)&lt;br&gt;<a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> is never constructed directory.</td></tr><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-~node">~Node</a></strong>()</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-enodeplugresult">ENodePlugResult</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-isplugcorrect">isPlugCorrect</a></strong>(const <a href="/cpp-api-reference/classes/classCore_1_1Pin.html">Pin</a> &amp; input, const <a href="/cpp-api-reference/classes/classCore_1_1Pin.html">Pin</a> &amp; output)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-onunpluginput">onUnplugInput</a></strong>(size_t index)</td></tr><tr><td>template &lt;typename T &amp;gt; &lt;br&gt;void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-setinternalvalue">setInternalValue</a></strong>(const T &amp; value, size_t index =0)&lt;br&gt;Sets the node value without validation.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-setinternalvalue">setInternalValue</a></strong>(float value, glm::ivec2 coordinates, size_t index =0)</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-shouldpulse">shouldPulse</a></strong>(size_t inputIndex, size_t updatedInputIndex)&lt;br&gt;Tests if the <code>updatedInputIndex</code> should be pulsed.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-triggerdeletecallback">triggerDeleteCallback</a></strong>(<a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> * node)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-triggerplugcallback">triggerPlugCallback</a></strong>(<a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> * fromNode, <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> * toNode, size_t fromIndex, size_t toIndex)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-triggerunplugcallback">triggerUnplugCallback</a></strong>(<a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> * fromNode, <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> * toNode, size_t fromIndex, size_t toIndex)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-triggerupdatecallback">triggerUpdateCallback</a></strong>(<a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> * node)</td></tr></tbody></table><p><strong>Public Attributes inherited from <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Core::Node</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>std::vector&lt; <a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-evaluestate">EValueState</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#variable-m-operatorstate">m_OperatorState</a></strong></td></tr></tbody></table><p><strong>Protected Attributes inherited from <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Core::Node</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> * &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#variable-m-children">m_children</a></strong> &lt;br&gt;Nested nodes.</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceCore.html#typedef-id">ID</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#variable-m-id">m_id</a></strong></td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classCore_1_1Pin.html">Pin</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#variable-m-inputs">m_inputs</a></strong> &lt;br&gt;Inputs of the box: Input tabs with glyphs.</td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classCore_1_1Data.html">Data</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#variable-m-internaldata">m_internalData</a></strong> &lt;br&gt;Results of operations.</td></tr><tr><td><a href="/cpp-api-reference/classes/structCore_1_1Operation.html">Operation</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#variable-m-operation">m_operation</a></strong> &lt;br&gt;<a href="./.html">Operator</a> node properties.</td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classCore_1_1Pin.html">Pin</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#variable-m-outputs">m_outputs</a></strong> &lt;br&gt;Outputs of the box: output tabs with glyphs.</td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> *</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#variable-m-owner">m_owner</a></strong> &lt;br&gt;Owner of the node, used in complex type of nodes, such as sequence or camera.</td></tr></tbody></table><p><strong>Friends inherited from <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Core::Node</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#friend-pin">Pin</a></strong></td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-transform" tabindex="-1">function Transform <a class="header-anchor" href="#function-transform" aria-label="Permalink to &quot;function Transform&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">explicit</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Transform</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> TransformOperation </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> transformType</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">explicit</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Transform</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> TransformOperation </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> transformType</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-createdefaults" tabindex="-1">function createDefaults <a class="header-anchor" href="#function-createdefaults" aria-label="Permalink to &quot;function createDefaults&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createDefaults</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createDefaults</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Prepare storage for second level parameters (std::map with values)</p><h3 id="function-disablesynergies" tabindex="-1">function disableSynergies <a class="header-anchor" href="#function-disablesynergies" aria-label="Permalink to &quot;function disableSynergies&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">disableSynergies</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">disableSynergies</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-enablesynergies" tabindex="-1">function enableSynergies <a class="header-anchor" href="#function-enablesynergies" aria-label="Permalink to &quot;function enableSynergies&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">enableSynergies</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">enableSynergies</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-free" tabindex="-1">function free <a class="header-anchor" href="#function-free" aria-label="Permalink to &quot;function free&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">free</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">free</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-getcurrentindex" tabindex="-1">function getCurrentIndex <a class="header-anchor" href="#function-getcurrentindex" aria-label="Permalink to &quot;function getCurrentIndex&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getCurrentIndex</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getCurrentIndex</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-getcurrentsequence" tabindex="-1">function getCurrentSequence <a class="header-anchor" href="#function-getcurrentsequence" aria-label="Permalink to &quot;function getCurrentSequence&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">getCurrentSequence</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">getCurrentSequence</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-getdefaulttypes" tabindex="-1">function getDefaultTypes <a class="header-anchor" href="#function-getdefaulttypes" aria-label="Permalink to &quot;function getDefaultTypes&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">TransformOperation</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">ValueMap</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDefaultTypes</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">TransformOperation</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">ValueMap</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDefaultTypes</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><p><strong>Return</strong>: A map of valueName and value pairs.</p><h3 id="function-getdefaultvalue" tabindex="-1">function getDefaultValue <a class="header-anchor" href="#function-getdefaultvalue" aria-label="Permalink to &quot;function getDefaultValue&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Data</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDefaultValue</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">name</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Data</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDefaultValue</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">name</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">const</span></span></code></pre></div><p>Get the value which the transform can hold (current value stored in the transformation).</p><p><strong>Todo</strong>: rename to getCurrentValue?</p><p><strong>Precondition</strong>: Default value with <code>name</code> exists.</p><p>It is not the initial value!</p><h3 id="function-getdefaultvalues" tabindex="-1">function getDefaultValues <a class="header-anchor" href="#function-getdefaultvalues" aria-label="Permalink to &quot;function getDefaultValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">DefaultValues</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDefaultValues</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">DefaultValues</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDefaultValues</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-getvaluestate" tabindex="-1">function getValueState <a class="header-anchor" href="#function-getvaluestate" aria-label="Permalink to &quot;function getValueState&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">EValueState</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getValueState</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">ivec2</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">coords</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">EValueState</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getValueState</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">ivec2</span><span style="color:#24292E;"> </span><span style="color:#E36209;">coords</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-hasmenusynergies" tabindex="-1">function hasMenuSynergies <a class="header-anchor" href="#function-hasmenusynergies" aria-label="Permalink to &quot;function hasMenuSynergies&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hasMenuSynergies</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hasMenuSynergies</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-hassavedvalue" tabindex="-1">function hasSavedValue <a class="header-anchor" href="#function-hassavedvalue" aria-label="Permalink to &quot;function hasSavedValue&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hasSavedValue</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hasSavedValue</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-hassynergies" tabindex="-1">function hasSynergies <a class="header-anchor" href="#function-hassynergies" aria-label="Permalink to &quot;function hasSynergies&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hasSynergies</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hasSynergies</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-initdefaults" tabindex="-1">function initDefaults <a class="header-anchor" href="#function-initdefaults" aria-label="Permalink to &quot;function initDefaults&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">initDefaults</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">initDefaults</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Init the (non-zero) second level parameters (from LOD::SetValues) via their initDefaults and update the internal transformation matrix).</p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Scale_01_4.html#function-initdefaults">Core::TransformImpl&lt; ETransformType::Scale &gt;::initDefaults</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1EulerX_01_4.html#function-initdefaults">Core::TransformImpl&lt; ETransformType::EulerX &gt;::initDefaults</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1EulerY_01_4.html#function-initdefaults">Core::TransformImpl&lt; ETransformType::EulerY &gt;::initDefaults</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1EulerZ_01_4.html#function-initdefaults">Core::TransformImpl&lt; ETransformType::EulerZ &gt;::initDefaults</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Translation_01_4.html#function-initdefaults">Core::TransformImpl&lt; ETransformType::Translation &gt;::initDefaults</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1AxisAngle_01_4.html#function-initdefaults">Core::TransformImpl&lt; ETransformType::AxisAngle &gt;::initDefaults</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Quat_01_4.html#function-initdefaults">Core::TransformImpl&lt; ETransformType::Quat &gt;::initDefaults</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Ortho_01_4.html#function-initdefaults">Core::TransformImpl&lt; ETransformType::Ortho &gt;::initDefaults</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Perspective_01_4.html#function-initdefaults">Core::TransformImpl&lt; ETransformType::Perspective &gt;::initDefaults</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Frustum_01_4.html#function-initdefaults">Core::TransformImpl&lt; ETransformType::Frustum &gt;::initDefaults</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1LookAt_01_4.html#function-initdefaults">Core::TransformImpl&lt; ETransformType::LookAt &gt;::initDefaults</a></p><p>It is overriden in all transforms with their default values. This version is for nodes without the default value (now only the Free node)</p><ul><li>It resets the matrix to identity.</li><li>this is done in free-&gt;<a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-resetmatrixfromdefaults">resetMatrixFromDefaults()</a></li></ul><h3 id="function-isinsequence" tabindex="-1">function isInSequence <a class="header-anchor" href="#function-isinsequence" aria-label="Permalink to &quot;function isInSequence&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isInSequence</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isInSequence</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-islocked" tabindex="-1">function isLocked <a class="header-anchor" href="#function-islocked" aria-label="Permalink to &quot;function isLocked&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isLocked</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isLocked</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-isvalid" tabindex="-1">function isValid <a class="header-anchor" href="#function-isvalid" aria-label="Permalink to &quot;function isValid&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isValid</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isValid</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p>Checks the validity of the stored <a href="/cpp-api-reference/classes/classCore_1_1Transform.html">Transform</a> matrix (used by <a href="/cpp-api-reference/namespaces/namespaceGUI.html">GUI</a> to show the corrupted flag).</p><p><strong>Return</strong>: true if the stored matrix represents a correct transform</p><p><strong>Todo</strong>: isValid checks matrix AND parameters from the SetValues LOD (Default values)</p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Free_01_4.html#function-isvalid">Core::TransformImpl&lt; ETransformType::Free &gt;::isValid</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Scale_01_4.html#function-isvalid">Core::TransformImpl&lt; ETransformType::Scale &gt;::isValid</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1EulerX_01_4.html#function-isvalid">Core::TransformImpl&lt; ETransformType::EulerX &gt;::isValid</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1EulerY_01_4.html#function-isvalid">Core::TransformImpl&lt; ETransformType::EulerY &gt;::isValid</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1EulerZ_01_4.html#function-isvalid">Core::TransformImpl&lt; ETransformType::EulerZ &gt;::isValid</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Translation_01_4.html#function-isvalid">Core::TransformImpl&lt; ETransformType::Translation &gt;::isValid</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1AxisAngle_01_4.html#function-isvalid">Core::TransformImpl&lt; ETransformType::AxisAngle &gt;::isValid</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Quat_01_4.html#function-isvalid">Core::TransformImpl&lt; ETransformType::Quat &gt;::isValid</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Ortho_01_4.html#function-isvalid">Core::TransformImpl&lt; ETransformType::Ortho &gt;::isValid</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Perspective_01_4.html#function-isvalid">Core::TransformImpl&lt; ETransformType::Perspective &gt;::isValid</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Frustum_01_4.html#function-isvalid">Core::TransformImpl&lt; ETransformType::Frustum &gt;::isValid</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1LookAt_01_4.html#function-isvalid">Core::TransformImpl&lt; ETransformType::LookAt &gt;::isValid</a></p><h3 id="function-lock" tabindex="-1">function lock <a class="header-anchor" href="#function-lock" aria-label="Permalink to &quot;function lock&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lock</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lock</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-notifysequence" tabindex="-1">function notifySequence <a class="header-anchor" href="#function-notifysequence" aria-label="Permalink to &quot;function notifySequence&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">notifySequence</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">notifySequence</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-nullsequence" tabindex="-1">function nullSequence <a class="header-anchor" href="#function-nullsequence" aria-label="Permalink to &quot;function nullSequence&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">nullSequence</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">nullSequence</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Todo</strong>: MH these should not be public.</p><h3 id="function-properties" tabindex="-1">function properties <a class="header-anchor" href="#function-properties" aria-label="Permalink to &quot;function properties&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">TransformOperation</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">properties</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">TransformOperation</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">properties</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-reloadvalue" tabindex="-1">function reloadValue <a class="header-anchor" href="#function-reloadvalue" aria-label="Permalink to &quot;function reloadValue&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">reloadValue</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">reloadValue</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Restore saved values if they exist.</p><h3 id="function-resetmatrixfromdefaults" tabindex="-1">function resetMatrixFromDefaults <a class="header-anchor" href="#function-resetmatrixfromdefaults" aria-label="Permalink to &quot;function resetMatrixFromDefaults&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resetMatrixFromDefaults</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resetMatrixFromDefaults</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p>Reset the transform matrix visible in LOD::Full (internalValue) to match the defaultValues (from LOD::SetValues).</p><p><strong>Todo</strong>: For synergies, it has to be resolved. Most probably, it should leave the synergies unchanged.</p><ul><li>for Scale When setting X value in non-uniform scale -&gt; this switch to uniform scale (due to enable synergies)</li></ul><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Free_01_4.html#function-resetmatrixfromdefaults">Core::TransformImpl&lt; ETransformType::Free &gt;::resetMatrixFromDefaults</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Scale_01_4.html#function-resetmatrixfromdefaults">Core::TransformImpl&lt; ETransformType::Scale &gt;::resetMatrixFromDefaults</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1EulerX_01_4.html#function-resetmatrixfromdefaults">Core::TransformImpl&lt; ETransformType::EulerX &gt;::resetMatrixFromDefaults</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1EulerY_01_4.html#function-resetmatrixfromdefaults">Core::TransformImpl&lt; ETransformType::EulerY &gt;::resetMatrixFromDefaults</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1EulerZ_01_4.html#function-resetmatrixfromdefaults">Core::TransformImpl&lt; ETransformType::EulerZ &gt;::resetMatrixFromDefaults</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Translation_01_4.html#function-resetmatrixfromdefaults">Core::TransformImpl&lt; ETransformType::Translation &gt;::resetMatrixFromDefaults</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1AxisAngle_01_4.html#function-resetmatrixfromdefaults">Core::TransformImpl&lt; ETransformType::AxisAngle &gt;::resetMatrixFromDefaults</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Quat_01_4.html#function-resetmatrixfromdefaults">Core::TransformImpl&lt; ETransformType::Quat &gt;::resetMatrixFromDefaults</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Ortho_01_4.html#function-resetmatrixfromdefaults">Core::TransformImpl&lt; ETransformType::Ortho &gt;::resetMatrixFromDefaults</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Perspective_01_4.html#function-resetmatrixfromdefaults">Core::TransformImpl&lt; ETransformType::Perspective &gt;::resetMatrixFromDefaults</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Frustum_01_4.html#function-resetmatrixfromdefaults">Core::TransformImpl&lt; ETransformType::Frustum &gt;::resetMatrixFromDefaults</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1LookAt_01_4.html#function-resetmatrixfromdefaults">Core::TransformImpl&lt; ETransformType::LookAt &gt;::resetMatrixFromDefaults</a></p><p>Specialized functions are created for each <a href="/cpp-api-reference/classes/classCore_1_1Transform.html">Transform</a> type. For transforms with no default values (now only Free), resets the matrix directly.</p><p>The opposite setup - from matrix to Defaults - is done in the <a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-setvalue">setValue()</a> functions. It should also lock the matrix.</p><h3 id="function-savevalue" tabindex="-1">function saveValue <a class="header-anchor" href="#function-savevalue" aria-label="Permalink to &quot;function saveValue&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">saveValue</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">saveValue</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Save current values of the transformation for future reloading.</p><h3 id="function-setdefaultvalue" tabindex="-1">function setDefaultValue <a class="header-anchor" href="#function-setdefaultvalue" aria-label="Permalink to &quot;function setDefaultValue&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">template</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">typename</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> &gt;</span></span>
<span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SetValueResult</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setDefaultValue</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">val</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">template</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">typename</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> &gt;</span></span>
<span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SetValueResult</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setDefaultValue</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">name</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">val</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Setting of one second level parameter defining the transformation (in LOD::SetValues).</p><p><strong>Parameters</strong>:</p><ul><li><strong>name</strong> Name of the parameter (such as Center)</li><li><strong>val</strong> New value</li></ul><p><strong>Template Parameters</strong>:</p><ul><li><strong>T</strong> Type of the stored value <em>val</em></li></ul><p>You can find transform names, types, and their default values, in the file Core/Nodes/Operation.h. The initial values are hard-wired in <a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-initdefaults">initDefaults()</a> of TransformImpl&lt;ETransformType...&gt; in <a href="/cpp-api-reference/files/TransformImpl_8h#file-transformimpl.h">TransformImpl.h</a></p><h3 id="function-setdefaultvaluenoupdate" tabindex="-1">function setDefaultValueNoUpdate <a class="header-anchor" href="#function-setdefaultvaluenoupdate" aria-label="Permalink to &quot;function setDefaultValueNoUpdate&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">template</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">typename</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> &gt;</span></span>
<span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setDefaultValueNoUpdate</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">val</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">template</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">typename</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> &gt;</span></span>
<span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setDefaultValueNoUpdate</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">name</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">val</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-setdefaultvalues" tabindex="-1">function setDefaultValues <a class="header-anchor" href="#function-setdefaultvalues" aria-label="Permalink to &quot;function setDefaultValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setDefaultValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DefaultValues</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">values</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setDefaultValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DefaultValues</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">values</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-setsequence" tabindex="-1">function setSequence <a class="header-anchor" href="#function-setsequence" aria-label="Permalink to &quot;function setSequence&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setSequence</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">s</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">index</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setSequence</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">s</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">index</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-setvalue" tabindex="-1">function setValue <a class="header-anchor" href="#function-setvalue" aria-label="Permalink to &quot;function setValue&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SetValueResult</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setValue</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">mat4</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">mat</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SetValueResult</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setValue</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">mat4</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">mat</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">override</span></span></code></pre></div><p>Lock non-editable values.</p><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-setvalue">Core::Node::setValue</a></p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1AxisAngle_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::AxisAngle &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Quat_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::Quat &gt;::setValue</a></p><p>And enable synergies, if exist, i.e., <a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-hassynergies">hasSynergies()</a> == true</p><h3 id="function-setvalue-1" tabindex="-1">function setValue <a class="header-anchor" href="#function-setvalue-1" aria-label="Permalink to &quot;function setValue&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SetValueResult</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setValue</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">val</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">ivec2</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">coords</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SetValueResult</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setValue</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">val</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">ivec2</span><span style="color:#24292E;"> </span><span style="color:#E36209;">coords</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">override</span></span></code></pre></div><p><strong>Parameters</strong>:</p><ul><li><strong>val</strong> new value</li><li><strong>coords</strong> in the column major order: coords.x is the column index and coords.y is the row index.</li></ul><p><strong>Return</strong>:</p><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-setvalue">Core::Node::setValue</a></p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Free_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::Free &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Scale_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::Scale &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1EulerX_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::EulerX &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1EulerY_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::EulerY &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1EulerZ_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::EulerZ &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Translation_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::Translation &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Ortho_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::Ortho &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Perspective_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::Perspective &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Frustum_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::Frustum &gt;::setValue</a></p><h3 id="function-unlock" tabindex="-1">function unlock <a class="header-anchor" href="#function-unlock" aria-label="Permalink to &quot;function unlock&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">unlock</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">unlock</span><span style="color:#24292E;">()</span></span></code></pre></div><h2 id="protected-functions-documentation" tabindex="-1">Protected Functions Documentation <a class="header-anchor" href="#protected-functions-documentation" aria-label="Permalink to &quot;Protected Functions Documentation&quot;">​</a></h2><h3 id="function-cansetvalue" tabindex="-1">function canSetValue <a class="header-anchor" href="#function-cansetvalue" aria-label="Permalink to &quot;function canSetValue&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">canSetValue</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ValueMask</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">mask</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">ivec2</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">coords</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">value</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">canSetValue</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ValueMask</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">mask</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">ivec2</span><span style="color:#24292E;"> </span><span style="color:#E36209;">coords</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">value</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-getdefaultvaluemut" tabindex="-1">function getDefaultValueMut <a class="header-anchor" href="#function-getdefaultvaluemut" aria-label="Permalink to &quot;function getDefaultValueMut&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Data</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDefaultValueMut</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">name</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Data</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDefaultValueMut</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">name</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p><strong>Precondition</strong>: Default value with <code>name</code> exists.</p><h3 id="function-setdefaultvaluewithsynergies" tabindex="-1">function setDefaultValueWithSynergies <a class="header-anchor" href="#function-setdefaultvaluewithsynergies" aria-label="Permalink to &quot;function setDefaultValueWithSynergies&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setDefaultValueWithSynergies</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Data</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">val</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setDefaultValueWithSynergies</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">name</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">Data</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">val</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Function for setting values in the Set Defaults LOD.</p><p><strong>Parameters</strong>:</p><ul><li><strong>name</strong> changed data field</li><li><strong>val</strong> newValue as <a href="/cpp-api-reference/classes/classCore_1_1Data.html">Core::Data(newValue)</a>!!! (as we cannot have virtual template functions)</li></ul><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Quat_01_4.html#function-setdefaultvaluewithsynergies">Core::TransformImpl&lt; ETransformType::Quat &gt;::setDefaultValueWithSynergies</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Ortho_01_4.html#function-setdefaultvaluewithsynergies">Core::TransformImpl&lt; ETransformType::Ortho &gt;::setDefaultValueWithSynergies</a>, <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Frustum_01_4.html#function-setdefaultvaluewithsynergies">Core::TransformImpl&lt; ETransformType::Frustum &gt;::setDefaultValueWithSynergies</a></p><p>Performs default data correction based on synergies Do not use - use <a href="/cpp-api-reference/classes/classCore_1_1Transform.html#function-setdefaultvalue">setDefaultValue()</a> instead!!!</p><h2 id="protected-attributes-documentation" tabindex="-1">Protected Attributes Documentation <a class="header-anchor" href="#protected-attributes-documentation" aria-label="Permalink to &quot;Protected Attributes Documentation&quot;">​</a></h2><h3 id="variable-m-defaultvalues" tabindex="-1">variable m_defaultValues <a class="header-anchor" href="#variable-m-defaultvalues" aria-label="Permalink to &quot;variable m_defaultValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">DefaultValues m_defaultValues;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">DefaultValues m_defaultValues;</span></span></code></pre></div><h3 id="variable-m-hasmenusynergies" tabindex="-1">variable m_hasMenuSynergies <a class="header-anchor" href="#variable-m-hasmenusynergies" aria-label="Permalink to &quot;variable m_hasMenuSynergies&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_hasMenuSynergies </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_hasMenuSynergies </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span></code></pre></div><p>True for transformations, that support synergies, such as scale, eulerAngleXYZ, ortho, frustum, and quaternion ONLY.</p><p>Synergies variants | Transformation | hasMenuSynergies | show in Full LOD | show in SetValues | synergies force | | ------------—|---------------—|---------------—|----------------—|--------------—| | Free | no | no | no | | | Translate | no | no | no | | | AxisAngle rot | no | no | no | | | LookAt | no | no | no | | | Perspective | no | no | no | | | Ortho | yes | no | yes | | | Frustum | yes | no | yes | | | Quat | yes | no | yes | unitQuaternion | | Scale | yes | yes | yes | uniform scale | | EulerX,Y,Z | yes | yes | no | cos and sins |</p><h3 id="variable-m-hassynergies" tabindex="-1">variable m_hasSynergies <a class="header-anchor" href="#variable-m-hassynergies" aria-label="Permalink to &quot;variable m_hasSynergies&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_hasSynergies </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_hasSynergies </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span></code></pre></div><p>applicable for: uniform scale, eulerAngleXYZ, ortho, frustum, and quat and quaternion.</p><p>All other undefined (false)</p><h3 id="variable-m-islocked" tabindex="-1">variable m_isLocked <a class="header-anchor" href="#variable-m-islocked" aria-label="Permalink to &quot;variable m_isLocked&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_isLocked </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_isLocked </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span></code></pre></div><p>Edit of the matrix is limited to editable values - defined in <a href="./.html">Operations.h</a> g_transforms.</p><h2 id="friends-1" tabindex="-1">Friends <a class="header-anchor" href="#friends-1" aria-label="Permalink to &quot;Friends&quot;">​</a></h2><h3 id="friend-graphmanager" tabindex="-1">friend GraphManager <a class="header-anchor" href="#friend-graphmanager" aria-label="Permalink to &quot;friend GraphManager&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">friend</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GraphManager</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">GraphManager</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">friend</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GraphManager</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">GraphManager</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre></div><h3 id="friend-matrixtracker" tabindex="-1">friend MatrixTracker <a class="header-anchor" href="#friend-matrixtracker" aria-label="Permalink to &quot;friend MatrixTracker&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">friend</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MatrixTracker</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">MatrixTracker</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">friend</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MatrixTracker</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">MatrixTracker</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre></div><h3 id="friend-sequence" tabindex="-1">friend Sequence <a class="header-anchor" href="#friend-sequence" aria-label="Permalink to &quot;friend Sequence&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">friend</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Sequence</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Sequence</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">friend</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Sequence</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Sequence</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre></div><hr><p>Updated on 2025-01-23 at 08:58:55 +0000</p>`,162),o=[l];function r(p,c,i,d,f,u){return e(),a("div",null,o)}const y=s(t,[["render",r]]);export{m as __pageData,y as default};
