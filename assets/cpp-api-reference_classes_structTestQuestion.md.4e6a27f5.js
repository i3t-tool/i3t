import{_ as t,o as s,c as e,Q as a}from"./chunks/framework.0f749972.js";const m=JSON.parse('{"title":"TestQuestion","description":"","frontmatter":{"title":"TestQuestion"},"headers":[],"relativePath":"cpp-api-reference/classes/structTestQuestion.md","filePath":"cpp-api-reference/classes/structTestQuestion.md"}'),n={name:"cpp-api-reference/classes/structTestQuestion.md"},o=a(`<h1 id="testquestion" tabindex="-1">TestQuestion <a class="header-anchor" href="#testquestion" aria-label="Permalink to &quot;TestQuestion&quot;">​</a></h1><p><code>#include &quot;Tutorial/Tutorial.h&quot;</code></p><p>Inherits from <a href="/cpp-api-reference/classes/structTutorialElement.html">TutorialElement</a></p><p>Inherited by <a href="/cpp-api-reference/classes/structChoiceTask.html">ChoiceTask</a>, <a href="/cpp-api-reference/classes/structInputTask.html">InputTask</a>, <a href="/cpp-api-reference/classes/structMultiChoiceTask.html">MultiChoiceTask</a></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/structTestQuestion.html#function-testquestion">TestQuestion</a></strong>(std::string question)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/structTestQuestion.html#function-onsubmit">onSubmit</a></strong>() =0&lt;br&gt;Set m_isCorrect based on the answer.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/structTestQuestion.html#function-submit">submit</a></strong>()</td></tr></tbody></table><h2 id="public-attributes" tabindex="-1">Public Attributes <a class="header-anchor" href="#public-attributes" aria-label="Permalink to &quot;Public Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/structTestQuestion.html#variable-m-iscorrect">m_isCorrect</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/structTestQuestion.html#variable-m-issubmitted">m_isSubmitted</a></strong></td></tr></tbody></table><h2 id="additional-inherited-members" tabindex="-1">Additional inherited members <a class="header-anchor" href="#additional-inherited-members" aria-label="Permalink to &quot;Additional inherited members&quot;">​</a></h2><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/structTutorialElement.html">TutorialElement</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/structTutorialElement.html#function-tutorialelement">TutorialElement</a></strong>()</td></tr><tr><td></td><td><strong><a href="/cpp-api-reference/classes/structTutorialElement.html#function-tutorialelement">TutorialElement</a></strong>(std::string content)</td></tr><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/structTutorialElement.html#function-~tutorialelement">~TutorialElement</a></strong>() =default</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/structTutorialElement.html#function-acceptrenderer">acceptRenderer</a></strong>(<a href="/cpp-api-reference/classes/classITutorialRenderer.html">ITutorialRenderer</a> * tutorialRenderer) =0</td></tr></tbody></table><p><strong>Public Attributes inherited from <a href="/cpp-api-reference/classes/structTutorialElement.html">TutorialElement</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>std::string</td><td><strong><a href="/cpp-api-reference/classes/structTutorialElement.html#variable-m-content">m_content</a></strong></td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-testquestion" tabindex="-1">function TestQuestion <a class="header-anchor" href="#function-testquestion" aria-label="Permalink to &quot;function TestQuestion&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">explicit</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TestQuestion</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string question</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">explicit</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TestQuestion</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string question</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-onsubmit" tabindex="-1">function onSubmit <a class="header-anchor" href="#function-onsubmit" aria-label="Permalink to &quot;function onSubmit&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onSubmit</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onSubmit</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p>Set m_isCorrect based on the answer.</p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/structChoiceTask.html#function-onsubmit">ChoiceTask::onSubmit</a>, <a href="/cpp-api-reference/classes/structMultiChoiceTask.html#function-onsubmit">MultiChoiceTask::onSubmit</a>, <a href="/cpp-api-reference/classes/structInputTask.html#function-onsubmit">InputTask::onSubmit</a></p><h3 id="function-submit" tabindex="-1">function submit <a class="header-anchor" href="#function-submit" aria-label="Permalink to &quot;function submit&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">submit</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">submit</span><span style="color:#24292E;">()</span></span></code></pre></div><h2 id="public-attributes-documentation" tabindex="-1">Public Attributes Documentation <a class="header-anchor" href="#public-attributes-documentation" aria-label="Permalink to &quot;Public Attributes Documentation&quot;">​</a></h2><h3 id="variable-m-iscorrect" tabindex="-1">variable m_isCorrect <a class="header-anchor" href="#variable-m-iscorrect" aria-label="Permalink to &quot;variable m_isCorrect&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_isCorrect </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_isCorrect </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-m-issubmitted" tabindex="-1">variable m_isSubmitted <a class="header-anchor" href="#variable-m-issubmitted" aria-label="Permalink to &quot;variable m_isSubmitted&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_isSubmitted </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_isSubmitted </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span></code></pre></div><hr><p>Updated on 2025-01-23 at 08:58:54 +0000</p>`,29),l=[o];function r(i,c,p,u,d,h){return s(),e("div",null,l)}const f=t(n,[["render",r]]);export{m as __pageData,f as default};
