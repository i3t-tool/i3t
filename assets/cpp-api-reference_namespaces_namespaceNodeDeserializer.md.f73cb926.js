import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.0f749972.js";const h=JSON.parse('{"title":"NodeDeserializer","description":"","frontmatter":{"title":"NodeDeserializer"},"headers":[],"relativePath":"cpp-api-reference/namespaces/namespaceNodeDeserializer.md","filePath":"cpp-api-reference/namespaces/namespaceNodeDeserializer.md"}'),p={name:"cpp-api-reference/namespaces/namespaceNodeDeserializer.md"},o=e(`<h1 id="nodedeserializer" tabindex="-1">NodeDeserializer <a class="header-anchor" href="#nodedeserializer" aria-label="Permalink to &quot;NodeDeserializer&quot;">​</a></h1><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>void</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceNodeDeserializer.html#function-assigncommon">assignCommon</a></strong>(const rapidjson::Value &amp; value, <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/files/NodeVisitor_8h.html#using-guinode">GuiNode</a> &gt; node)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceNodeDeserializer.html#function-assignsequence">assignSequence</a></strong>(const rapidjson::Value &amp; value, <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/files/NodeVisitor_8h.html#using-guisequence">GuiSequence</a> &gt; sequence)</td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/files/NodeVisitor_8h.html#using-guinode">GuiNode</a> &gt; &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceNodeDeserializer.html#function-createfrom">createFrom</a></strong>(const <a href="/cpp-api-reference/files/Stateful_8h.html#using-memento">Memento</a> &amp; memento)</td></tr><tr><td>std::optional&lt; <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/files/NodeVisitor_8h.html#using-guioperator">GuiOperator</a> &gt; &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceNodeDeserializer.html#function-createoperator">createOperator</a></strong>(const rapidjson::Value &amp; value)</td></tr><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/files/NodeVisitor_8h.html#using-guisequence">GuiSequence</a> &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceNodeDeserializer.html#function-createsequence">createSequence</a></strong>(const rapidjson::Value &amp; value)</td></tr><tr><td>std::optional&lt; <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/files/NodeVisitor_8h.html#using-guitransform">GuiTransform</a> &gt; &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceNodeDeserializer.html#function-createtransform">createTransform</a></strong>(const rapidjson::Value &amp; value)</td></tr></tbody></table><h2 id="functions-documentation" tabindex="-1">Functions Documentation <a class="header-anchor" href="#functions-documentation" aria-label="Permalink to &quot;Functions Documentation&quot;">​</a></h2><h3 id="function-assigncommon" tabindex="-1">function assignCommon <a class="header-anchor" href="#function-assigncommon" aria-label="Permalink to &quot;function assignCommon&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">assignCommon</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">rapidjson</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Value</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">GuiNode</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#FFAB70;">node</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">assignCommon</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">rapidjson</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">Value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">value</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">GuiNode</span><span style="color:#24292E;"> &gt; </span><span style="color:#E36209;">node</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-assignsequence" tabindex="-1">function assignSequence <a class="header-anchor" href="#function-assignsequence" aria-label="Permalink to &quot;function assignSequence&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">assignSequence</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">rapidjson</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Value</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">GuiSequence</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#FFAB70;">sequence</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">assignSequence</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">rapidjson</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">Value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">value</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">GuiSequence</span><span style="color:#24292E;"> &gt; </span><span style="color:#E36209;">sequence</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-createfrom" tabindex="-1">function createFrom <a class="header-anchor" href="#function-createfrom" aria-label="Permalink to &quot;function createFrom&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vector</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">GuiNode</span><span style="color:#E1E4E8;"> &gt; &gt; </span><span style="color:#B392F0;">createFrom</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Memento</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">memento</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vector</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">GuiNode</span><span style="color:#24292E;"> &gt; &gt; </span><span style="color:#6F42C1;">createFrom</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Memento</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">memento</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p><strong>Precondition</strong>: <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html">DIWNE</a> and <a href="/cpp-api-reference/classes/classWorkspaceWindow.html">WorkspaceWindow</a> are initialized.</p><p>TodoAssign script after the node is connected with the other nodes.</p><h3 id="function-createoperator" tabindex="-1">function createOperator <a class="header-anchor" href="#function-createoperator" aria-label="Permalink to &quot;function createOperator&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">optional</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">GuiOperator</span><span style="color:#E1E4E8;"> &gt; &gt; </span><span style="color:#B392F0;">createOperator</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">rapidjson</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Value</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">value</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">optional</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">GuiOperator</span><span style="color:#24292E;"> &gt; &gt; </span><span style="color:#6F42C1;">createOperator</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">rapidjson</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">Value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">value</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-createsequence" tabindex="-1">function createSequence <a class="header-anchor" href="#function-createsequence" aria-label="Permalink to &quot;function createSequence&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">GuiSequence</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">createSequence</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">rapidjson</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Value</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">value</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">GuiSequence</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">createSequence</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">rapidjson</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">Value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">value</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-createtransform" tabindex="-1">function createTransform <a class="header-anchor" href="#function-createtransform" aria-label="Permalink to &quot;function createTransform&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">optional</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">GuiTransform</span><span style="color:#E1E4E8;"> &gt; &gt; </span><span style="color:#B392F0;">createTransform</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">rapidjson</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Value</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">value</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">optional</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">GuiTransform</span><span style="color:#24292E;"> &gt; &gt; </span><span style="color:#6F42C1;">createTransform</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">rapidjson</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">Value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">value</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><hr><p>Updated on 2025-01-07 at 10:31:20 +0000</p>`,20),l=[o];function t(r,c,i,E,y,d){return a(),n("div",null,l)}const m=s(p,[["render",t]]);export{h as __pageData,m as default};
