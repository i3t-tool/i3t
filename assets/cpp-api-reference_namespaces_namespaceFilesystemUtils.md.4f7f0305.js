import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.0f749972.js";const F=JSON.parse('{"title":"FilesystemUtils","description":"","frontmatter":{"title":"FilesystemUtils"},"headers":[],"relativePath":"cpp-api-reference/namespaces/namespaceFilesystemUtils.md","filePath":"cpp-api-reference/namespaces/namespaceFilesystemUtils.md"}'),o={name:"cpp-api-reference/namespaces/namespaceFilesystemUtils.md"},l=p(`<h1 id="filesystemutils" tabindex="-1">FilesystemUtils <a class="header-anchor" href="#filesystemutils" aria-label="Permalink to &quot;FilesystemUtils&quot;">​</a></h1><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceFilesystemUtils.html#function-anyequivalent">anyEquivalent</a></strong>(const fs::path &amp; path1, const fs::path &amp; path2)&lt;br&gt;Compares two paths either using <a href="./.html">equivalent()</a> or <a href="./.html">weaklyEquivalent()</a>.</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceFilesystemUtils.html#function-copy">copy</a></strong>(const fs::path &amp; from, const fs::path &amp; to, const fs::copy_options options =fs::copy_options::overwrite_existing</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceFilesystemUtils.html#function-copyfile">copyFile</a></strong>(const fs::path &amp; from, const fs::path &amp; to, const fs::copy_options options =fs::copy_options::overwrite_existing)&lt;br&gt;Copy file to a location.</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceFilesystemUtils.html#function-copytodir">copyToDir</a></strong>(const fs::path &amp; from, const fs::path &amp; toDir, const fs::copy_options options =fs::copy_options::overwrite_existing</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceFilesystemUtils.html#function-deletefileordir">deleteFileOrDir</a></strong>(const fs::path &amp; path, bool deleteEmptyFolders =false)&lt;br&gt;Remove the specified file or directories.</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceFilesystemUtils.html#function-equivalent">equivalent</a></strong>(const fs::path &amp; path1, const fs::path &amp; path2)&lt;br&gt;Compare two paths with exception handling.</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceFilesystemUtils.html#function-issubpath">isSubpath</a></strong>(const fs::path path, const fs::path base)&lt;br&gt;Checks if a path is located &quot;downstream&quot; from a base location.</td></tr><tr><td>fs::path</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceFilesystemUtils.html#function-normalizepath">normalizePath</a></strong>(const fs::path &amp; originalPath)</td></tr><tr><td><a href="/cpp-api-reference/files/Result_8h.html#using-result">Result</a>&lt; std::string, <a href="/cpp-api-reference/classes/structError.html">Error</a> &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceFilesystemUtils.html#function-readfile">readFile</a></strong>(const fs::path &amp; path)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceFilesystemUtils.html#function-reportfilesystemexception">reportFilesystemException</a></strong>(const fs::filesystem_error &amp; e)</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceFilesystemUtils.html#function-weaklyequivalent">weaklyEquivalent</a></strong>(const fs::path &amp; path1, const fs::path &amp; path2)&lt;br&gt;Compare two paths with exception handling.</td></tr></tbody></table><h2 id="functions-documentation" tabindex="-1">Functions Documentation <a class="header-anchor" href="#functions-documentation" aria-label="Permalink to &quot;Functions Documentation&quot;">​</a></h2><h3 id="function-anyequivalent" tabindex="-1">function anyEquivalent <a class="header-anchor" href="#function-anyequivalent" aria-label="Permalink to &quot;function anyEquivalent&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">anyEquivalent</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">path1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">path2</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">anyEquivalent</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">path1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">path2</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Compares two paths either using <a href="./.html">equivalent()</a> or <a href="./.html">weaklyEquivalent()</a>.</p><p>The weak equivalence is used when either of the two paths don&#39;t exist.</p><h3 id="function-copy" tabindex="-1">function copy <a class="header-anchor" href="#function-copy" aria-label="Permalink to &quot;function copy&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">copy</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">from</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">to</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">copy_options</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">copy_options</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">overwrite_existing</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">copy_options</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">recursive</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">copy</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">from</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">to</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">copy_options</span><span style="color:#24292E;"> </span><span style="color:#E36209;">options</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">copy_options</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">overwrite_existing</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">copy_options</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">recursive</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Copy file or directory to a location.</p><p><strong>Return</strong>: Whether the copy operation succeeded or not</p><p>The target location directory is created if necessary. Filesystem exceptions are handled and reported by this method.</p><h3 id="function-copyfile" tabindex="-1">function copyFile <a class="header-anchor" href="#function-copyfile" aria-label="Permalink to &quot;function copyFile&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">copyFile</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">from</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">to</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">copy_options</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">copy_options</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">overwrite_existing</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">copyFile</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">from</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">to</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">copy_options</span><span style="color:#24292E;"> </span><span style="color:#E36209;">options</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">copy_options</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">overwrite_existing</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Copy file to a location.</p><p><strong>Return</strong>: Whether the copy operation succeeded or not</p><p>The target location directory is created if necessary. Filesystem exceptions are handled and reported by this method.</p><h3 id="function-copytodir" tabindex="-1">function copyToDir <a class="header-anchor" href="#function-copytodir" aria-label="Permalink to &quot;function copyToDir&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">copyToDir</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">from</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">toDir</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">copy_options</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">copy_options</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">overwrite_existing</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">copy_options</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">recursive</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">copyToDir</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">from</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">toDir</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">copy_options</span><span style="color:#24292E;"> </span><span style="color:#E36209;">options</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">copy_options</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">overwrite_existing</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">copy_options</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">recursive</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Copy file or directory to another directory.</p><p><strong>Return</strong>: Whether the copy operation succeeded or not</p><p>The target location directory is created if necessary. Filesystem exceptions are handled and reported by this method.</p><h3 id="function-deletefileordir" tabindex="-1">function deleteFileOrDir <a class="header-anchor" href="#function-deletefileordir" aria-label="Permalink to &quot;function deleteFileOrDir&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">deleteFileOrDir</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">path</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">deleteEmptyFolders</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">deleteFileOrDir</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">path</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">deleteEmptyFolders</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Remove the specified file or directories.</p><p><strong>Parameters</strong>:</p><ul><li><strong>path</strong> The file or directory to delete.</li><li><strong>deleteEmptyFolders</strong> If true, any empty parent directories of the specified file or dir will be deleted as well up recursively until the root directory.</li></ul><p><strong>Return</strong>: Whether the delete operation succeeded.</p><p>Directories are deleted recursively.</p><h3 id="function-equivalent" tabindex="-1">function equivalent <a class="header-anchor" href="#function-equivalent" aria-label="Permalink to &quot;function equivalent&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">equivalent</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">path1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">path2</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">equivalent</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">path1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">path2</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Compare two paths with exception handling.</p><p>Calls the fs::equivalent method directly which checks if two paths are pointing to the same EXISTING file. Thus both paths MUST exist for this method to not throw an exception. Use the <a href="/cpp-api-reference/namespaces/namespaceFilesystemUtils.html#function-weaklyequivalent">weaklyEquivalent()</a> method if any of the paths don&#39;t exist.</p><h3 id="function-issubpath" tabindex="-1">function isSubpath <a class="header-anchor" href="#function-issubpath" aria-label="Permalink to &quot;function isSubpath&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isSubpath</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">path</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">base</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isSubpath</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;"> </span><span style="color:#E36209;">path</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;"> </span><span style="color:#E36209;">base</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Checks if a path is located &quot;downstream&quot; from a base location.</p><p>This check if performed by inspecting the relative path between these two locations. The relative path must not start with going &quot;up&quot; a directory.</p><h3 id="function-normalizepath" tabindex="-1">function normalizePath <a class="header-anchor" href="#function-normalizepath" aria-label="Permalink to &quot;function normalizePath&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">normalizePath</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">originalPath</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">normalizePath</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">originalPath</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-readfile" tabindex="-1">function readFile <a class="header-anchor" href="#function-readfile" aria-label="Permalink to &quot;function readFile&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Result</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">Error</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">readFile</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">path</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Result</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">Error</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">readFile</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">path</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-reportfilesystemexception" tabindex="-1">function reportFilesystemException <a class="header-anchor" href="#function-reportfilesystemexception" aria-label="Permalink to &quot;function reportFilesystemException&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">reportFilesystemException</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">filesystem_error</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">e</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">reportFilesystemException</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">filesystem_error</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">e</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-weaklyequivalent" tabindex="-1">function weaklyEquivalent <a class="header-anchor" href="#function-weaklyequivalent" aria-label="Permalink to &quot;function weaklyEquivalent&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">weaklyEquivalent</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">path1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">path2</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">weaklyEquivalent</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">path1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">path2</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Compare two paths with exception handling.</p><p>Uses mostly string comparison trickery. The paths do NOT have to exist.</p><hr><p>Updated on 2024-10-15 at 20:41:59 +0000</p>`,50),e=[l];function t(c,r,y,i,E,h){return a(),n("div",null,e)}const f=s(o,[["render",t]]);export{F as __pageData,f as default};
