import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.0f749972.js";const u=JSON.parse('{"title":"Code style","description":"","frontmatter":{},"headers":[],"relativePath":"developer-guide/code-style.md","filePath":"developer-guide/code-style.md"}'),l={name:"developer-guide/code-style.md"},o=e(`<h1 id="code-style" tabindex="-1">Code style <a class="header-anchor" href="#code-style" aria-label="Permalink to &quot;Code style&quot;">​</a></h1><p>Please follow the rules below when writing code. You can use the <a href="https://clang.llvm.org/docs/ClangFormat.html" target="_blank" rel="noreferrer">clang-format</a> tool to format the code and <a href="https://clang.llvm.org/extra/clang-tidy/" target="_blank" rel="noreferrer">clang-tidy</a> to check the code.</p><h2 id="c" tabindex="-1">C++ <a class="header-anchor" href="#c" aria-label="Permalink to &quot;C++&quot;">​</a></h2><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">\\file</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">\\brief</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">\\author</span><span style="color:#6A737D;"> Name Surname &lt;email&gt;</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">\\copyright</span><span style="color:#6A737D;"> Copyright (C) 2016-2023 I3T team, Department of Computer Graphics</span></span>
<span class="line"><span style="color:#6A737D;"> * and Interaction, FEE, Czech Technical University in Prague, Czech Republic</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * This file is part of I3T - An Interactive Tool for Teaching Transformations</span></span>
<span class="line"><span style="color:#6A737D;"> * http://www.i3t-tool.org</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * GNU General Public License v3.0 (see LICENSE.txt or https://www.gnu.org/licenses/gpl-3.0.txt)</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">#pragma</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">once</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;string&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> g_val </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">EditBox</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#F97583;">public:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setName</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">string</span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    m_boxName </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> name;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">private:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string m_boxName;</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">\\file</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">\\brief</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">\\author</span><span style="color:#6A737D;"> Name Surname &lt;email&gt;</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">\\copyright</span><span style="color:#6A737D;"> Copyright (C) 2016-2023 I3T team, Department of Computer Graphics</span></span>
<span class="line"><span style="color:#6A737D;"> * and Interaction, FEE, Czech Technical University in Prague, Czech Republic</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * This file is part of I3T - An Interactive Tool for Teaching Transformations</span></span>
<span class="line"><span style="color:#6A737D;"> * http://www.i3t-tool.org</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * GNU General Public License v3.0 (see LICENSE.txt or https://www.gnu.org/licenses/gpl-3.0.txt)</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">#pragma</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">once</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;string&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> g_val </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">EditBox</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#D73A49;">public:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setName</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">string</span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">name</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    m_boxName </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> name;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">private:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string m_boxName;</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="recommended-conventions" tabindex="-1">Recommended conventions <a class="header-anchor" href="#recommended-conventions" aria-label="Permalink to &quot;Recommended conventions&quot;">​</a></h3><ul><li><strong>Never</strong> use <code>using namespace std;</code>. It can cause conflicts.</li><li><strong>Never</strong> use backslashes in paths <code>path\\to\\file</code>, prefer POSIX style <code>path/to/file</code> (Windows can handle these paths).</li></ul><h3 id="code-structure" tabindex="-1">Code structure <a class="header-anchor" href="#code-structure" aria-label="Permalink to &quot;Code structure&quot;">​</a></h3><ul><li><strong>Static variables</strong> are declared at the beginning of the <code>.cpp</code> file.</li><li><strong>Header files</strong> are included in groups separated by an empty line, in the following order - if possible: <ul><li><strong>1.</strong> header file associated with the given <code>.cpp</code> file,</li><li><strong>2.</strong> STL libraries,</li><li><strong>3.</strong> external libraries of the project,</li><li><strong>4.</strong> internal header files.</li></ul></li></ul><h3 id="code-formatting" tabindex="-1">Code formatting <a class="header-anchor" href="#code-formatting" aria-label="Permalink to &quot;Code formatting&quot;">​</a></h3><p>Code formatting rules are defined in the <code>.clang-format</code> file. It is not possible for each piece of code to be indented by a different number of spaces, etc. IDE can load formatting rules and warn about their violation.</p><p>In general, the form of our code is based on the Microsoft code style. I would like to point out in particular writing the opening bracket of the code block on a new line (see example).</p><h3 id="naming" tabindex="-1">Naming <a class="header-anchor" href="#naming" aria-label="Permalink to &quot;Naming&quot;">​</a></h3><ul><li>All <strong>classes, structures and enumerations</strong> <code>ClassName, StructName</code> are named in camel-case style with an initial capital letter.</li><li>All <strong>variables</strong> and <strong>functions</strong> <code>myVariable</code> are also named in camel-case style, but with a lowercase initial letter.</li><li>All <strong>C++ files</strong> <code>FileUtils.[cpp/h]</code> are named the same as classes and structures.</li><li><strong>Global variables</strong> with prefix <code>g_</code>.</li><li><strong>Member variables</strong> the same as variables, but with prefix <code>m_</code>. For purely data structures (without member functions) is recommended to use the <code>struct</code> keyword instead of <code>class</code> and omit the prefix <code>m_</code>.</li><li><strong>Member static variables</strong> with prefix <code>s_</code>.</li></ul><h2 id="how-to-document-code" tabindex="-1">How to document code <a class="header-anchor" href="#how-to-document-code" aria-label="Permalink to &quot;How to document code&quot;">​</a></h2><p>The following file contains useful examples and tricks for Doxygen.</p><h3 id="groups" tabindex="-1">Groups <a class="header-anchor" href="#groups" aria-label="Permalink to &quot;Groups&quot;">​</a></h3><p>It is often useful to group member functions of classes that have something in common. Doxygen allows this using tags.</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">///@{</span></span>
<span class="line"><span style="color:#E1E4E8;">    ...</span></span>
<span class="line"><span style="color:#6A737D;">///@}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">///@{</span></span>
<span class="line"><span style="color:#24292E;">    ...</span></span>
<span class="line"><span style="color:#6A737D;">///@}</span></span></code></pre></div><p>Note that you cannot nest a group into a group.</p><p><a href="https://www.doxygen.nl/manual/grouping.html#memgroup" target="_blank" rel="noreferrer">Link to Doxygen</a></p>`,20),p=[o];function t(c,r,i,d,y,h){return a(),n("div",null,p)}const m=s(l,[["render",t]]);export{u as __pageData,m as default};
