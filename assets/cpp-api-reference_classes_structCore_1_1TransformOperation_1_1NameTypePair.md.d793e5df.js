import{_ as e,o as a,c as t,Q as r}from"./chunks/framework.0f749972.js";const _=JSON.parse('{"title":"Core::TransformOperation::NameTypePair","description":"","frontmatter":{"title":"Core::TransformOperation::NameTypePair"},"headers":[],"relativePath":"cpp-api-reference/classes/structCore_1_1TransformOperation_1_1NameTypePair.md","filePath":"cpp-api-reference/classes/structCore_1_1TransformOperation_1_1NameTypePair.md"}'),s={name:"cpp-api-reference/classes/structCore_1_1TransformOperation_1_1NameTypePair.md"},o=r('<h1 id="core-transformoperation-nametypepair" tabindex="-1">Core::TransformOperation::NameTypePair <a class="header-anchor" href="#core-transformoperation-nametypepair" aria-label="Permalink to &quot;Core::TransformOperation::NameTypePair&quot;">​</a></h1><p><code>#include &quot;Core/Nodes/Operations.h&quot;</code></p><h2 id="public-attributes" tabindex="-1">Public Attributes <a class="header-anchor" href="#public-attributes" aria-label="Permalink to &quot;Public Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>std::string</td><td><strong><a href="/cpp-api-reference/classes/structCore_1_1TransformOperation_1_1NameTypePair.html#variable-name">name</a></strong></td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-evaluetype">EValueType</a></td><td><strong><a href="/cpp-api-reference/classes/structCore_1_1TransformOperation_1_1NameTypePair.html#variable-type">type</a></strong></td></tr></tbody></table><h2 id="public-attributes-documentation" tabindex="-1">Public Attributes Documentation <a class="header-anchor" href="#public-attributes-documentation" aria-label="Permalink to &quot;Public Attributes Documentation&quot;">​</a></h2><h3 id="variable-name" tabindex="-1">variable name <a class="header-anchor" href="#variable-name" aria-label="Permalink to &quot;variable name&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string name;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string name;</span></span></code></pre></div><h3 id="variable-type" tabindex="-1">variable type <a class="header-anchor" href="#variable-type" aria-label="Permalink to &quot;variable type&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">EValueType type;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">EValueType type;</span></span></code></pre></div><hr><p>Updated on 2025-01-07 at 13:04:16 +0000</p>',11),p=[o];function n(i,c,l,d,h,m){return a(),t("div",null,p)}const b=e(s,[["render",n]]);export{_ as __pageData,b as default};
