import{_ as a,o as e,c as t,Q as s}from"./chunks/framework.0f749972.js";const f=JSON.parse('{"title":"I3TApplication","description":"","frontmatter":{"title":"I3TApplication"},"headers":[],"relativePath":"cpp-api-reference/classes/classI3TApplication.md","filePath":"cpp-api-reference/classes/classI3TApplication.md"}'),n={name:"cpp-api-reference/classes/classI3TApplication.md"},o=s(`<h1 id="i3tapplication" tabindex="-1">I3TApplication <a class="header-anchor" href="#i3tapplication" aria-label="Permalink to &quot;I3TApplication&quot;">​</a></h1><p><code>#include &quot;I3T.h&quot;</code></p><p>Inherits from <a href="/cpp-api-reference/classes/classApplication.html">Application</a></p><h2 id="protected-functions" tabindex="-1">Protected Functions <a class="header-anchor" href="#protected-functions" aria-label="Permalink to &quot;Protected Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classI3TApplication.html#function-onbeginframe">onBeginFrame</a></strong>() override</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classI3TApplication.html#function-onclose">onClose</a></strong>() override</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classI3TApplication.html#function-onendframe">onEndFrame</a></strong>() override</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classI3TApplication.html#function-oninit">onInit</a></strong>() override</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classI3TApplication.html#function-onupdate">onUpdate</a></strong>(double delta) override</td></tr></tbody></table><h2 id="public-attributes" tabindex="-1">Public Attributes <a class="header-anchor" href="#public-attributes" aria-label="Permalink to &quot;Public Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classI3TApplication.html#variable-m-debugtrackball">m_debugTrackball</a></strong> &lt;br&gt;Debug switch for <a href="/cpp-api-reference/classes/classWindowManager.html">WindowManager</a>, toggled in Help &gt; Debug trackball.</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classI3TApplication.html#variable-m-debugwindowmanager">m_debugWindowManager</a></strong> &lt;br&gt;Debug switch for <a href="/cpp-api-reference/classes/classWindowManager.html">WindowManager</a>, toggled in Help &gt; Debug window manager.</td></tr></tbody></table><h2 id="additional-inherited-members" tabindex="-1">Additional inherited members <a class="header-anchor" href="#additional-inherited-members" aria-label="Permalink to &quot;Additional inherited members&quot;">​</a></h2><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/classApplication.html">Application</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/classApplication.html#function-~application">~Application</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classApplication.html#function-beginframe">beginFrame</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classApplication.html#function-close">close</a></strong>()&lt;br&gt;Shutdown the whole application.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classApplication.html#function-display">display</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classApplication.html#function-endframe">endFrame</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classApplication.html#function-enqueuecommand">enqueueCommand</a></strong>(<a href="/cpp-api-reference/classes/classICommand.html">ICommand</a> * command)&lt;br&gt;Issue command.</td></tr><tr><td>const std::string &amp;</td><td><strong><a href="/cpp-api-reference/classes/classApplication.html#function-gettitle">getTitle</a></strong>()</td></tr><tr><td>GLFWwindow *</td><td><strong><a href="/cpp-api-reference/classes/classApplication.html#function-getwindow">getWindow</a></strong>()&lt;br&gt;Get the main GLFW window.</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classApplication.html#function-init">init</a></strong>()&lt;br&gt;Performs initialization of the application.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classApplication.html#function-initwindow">initWindow</a></strong>()&lt;br&gt;Init OpenGL stuffs before display loop.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classApplication.html#function-run">run</a></strong>()&lt;br&gt;Enter main loop.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classApplication.html#function-settitle">setTitle</a></strong>(const std::string &amp; title)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classApplication.html#function-update">update</a></strong>()&lt;br&gt;Perform logic update.</td></tr><tr><td>template &lt;typename T ,typename... Args&amp;gt; &lt;br&gt;T *</td><td><strong><a href="/cpp-api-reference/classes/classApplication.html#function-createmodule">createModule</a></strong>(Args &amp;&amp;... args)&lt;br&gt;Creates instance of module, registers it to the application, and calls its <a href="/cpp-api-reference/classes/classApplication.html#function-init">init()</a> method.</td></tr><tr><td><a href="/cpp-api-reference/classes/classApplication.html">Application</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classApplication.html#function-get">get</a></strong>()</td></tr><tr><td>GLFWwindow *</td><td><strong><a href="/cpp-api-reference/classes/classApplication.html#function-getcurrentwindow">getCurrentWindow</a></strong>()&lt;br&gt;Get the active GLFW window.</td></tr><tr><td>template &lt;typename T &amp;gt; &lt;br&gt;T &amp;</td><td><strong><a href="/cpp-api-reference/classes/classApplication.html#function-getmodule">getModule</a></strong>()</td></tr></tbody></table><p><strong>Protected Functions inherited from <a href="/cpp-api-reference/classes/classApplication.html">Application</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classApplication.html#function-application">Application</a></strong>()</td></tr></tbody></table><h2 id="protected-functions-documentation" tabindex="-1">Protected Functions Documentation <a class="header-anchor" href="#protected-functions-documentation" aria-label="Permalink to &quot;Protected Functions Documentation&quot;">​</a></h2><h3 id="function-onbeginframe" tabindex="-1">function onBeginFrame <a class="header-anchor" href="#function-onbeginframe" aria-label="Permalink to &quot;function onBeginFrame&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onBeginFrame</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onBeginFrame</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classApplication.html#function-onbeginframe">Application::onBeginFrame</a></p><h3 id="function-onclose" tabindex="-1">function onClose <a class="header-anchor" href="#function-onclose" aria-label="Permalink to &quot;function onClose&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onClose</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onClose</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classApplication.html#function-onclose">Application::onClose</a></p><h3 id="function-onendframe" tabindex="-1">function onEndFrame <a class="header-anchor" href="#function-onendframe" aria-label="Permalink to &quot;function onEndFrame&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onEndFrame</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onEndFrame</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classApplication.html#function-onendframe">Application::onEndFrame</a></p><h3 id="function-oninit" tabindex="-1">function onInit <a class="header-anchor" href="#function-oninit" aria-label="Permalink to &quot;function onInit&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onInit</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onInit</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classApplication.html#function-oninit">Application::onInit</a></p><h3 id="function-onupdate" tabindex="-1">function onUpdate <a class="header-anchor" href="#function-onupdate" aria-label="Permalink to &quot;function onUpdate&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onUpdate</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">double</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">delta</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onUpdate</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> </span><span style="color:#E36209;">delta</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">override</span></span></code></pre></div><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classApplication.html#function-onupdate">Application::onUpdate</a></p><h2 id="public-attributes-documentation" tabindex="-1">Public Attributes Documentation <a class="header-anchor" href="#public-attributes-documentation" aria-label="Permalink to &quot;Public Attributes Documentation&quot;">​</a></h2><h3 id="variable-m-debugtrackball" tabindex="-1">variable m_debugTrackball <a class="header-anchor" href="#variable-m-debugtrackball" aria-label="Permalink to &quot;variable m_debugTrackball&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_debugTrackball </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_debugTrackball </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span></code></pre></div><p>Debug switch for <a href="/cpp-api-reference/classes/classWindowManager.html">WindowManager</a>, toggled in Help &gt; Debug trackball.</p><h3 id="variable-m-debugwindowmanager" tabindex="-1">variable m_debugWindowManager <a class="header-anchor" href="#variable-m-debugwindowmanager" aria-label="Permalink to &quot;variable m_debugWindowManager&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_debugWindowManager </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_debugWindowManager </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span></code></pre></div><p>Debug switch for <a href="/cpp-api-reference/classes/classWindowManager.html">WindowManager</a>, toggled in Help &gt; Debug window manager.</p><hr><p>Updated on 2024-10-16 at 16:44:50 +0000</p>`,37),l=[o];function p(r,c,i,d,h,u){return e(),t("div",null,l)}const m=a(n,[["render",p]]);export{f as __pageData,m as default};
