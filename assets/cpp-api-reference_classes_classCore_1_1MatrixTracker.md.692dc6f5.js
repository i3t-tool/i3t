import{_ as s,o as a,c as e,Q as n}from"./chunks/framework.0f749972.js";const E=JSON.parse('{"title":"Core::MatrixTracker","description":"","frontmatter":{"title":"Core::MatrixTracker"},"headers":[],"relativePath":"cpp-api-reference/classes/classCore_1_1MatrixTracker.md","filePath":"cpp-api-reference/classes/classCore_1_1MatrixTracker.md"}'),t={name:"cpp-api-reference/classes/classCore_1_1MatrixTracker.md"},o=n(`<h1 id="core-matrixtracker" tabindex="-1">Core::MatrixTracker <a class="header-anchor" href="#core-matrixtracker" aria-label="Permalink to &quot;Core::MatrixTracker&quot;">​</a></h1><p><code>#include &quot;Core/Nodes/Tracking.h&quot;</code></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1MatrixTracker.html#function-matrixtracker">MatrixTracker</a></strong>() =default</td></tr><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1MatrixTracker.html#function-matrixtracker">MatrixTracker</a></strong>(<a href="/cpp-api-reference/classes/classCore_1_1Sequence.html">Sequence</a> * beginSequence, <a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-trackingdirection">TrackingDirection</a> direction, std::vector&lt; <a href="/cpp-api-reference/files/Types_8h.html#using-uptr">UPtr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1IModelProxy.html">IModelProxy</a> &gt; &gt; model)</td></tr><tr><td>unsigned</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1MatrixTracker.html#function-fullmatricescount">fullMatricesCount</a></strong>() const</td></tr><tr><td>const glm::mat4 &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1MatrixTracker.html#function-getinterpolatedmatrix">getInterpolatedMatrix</a></strong>() const</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceCore.html#typedef-id">ID</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1MatrixTracker.html#function-getinterpolatedtransformid">getInterpolatedTransformID</a></strong>() const</td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Model.html">Model</a> &gt; &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1MatrixTracker.html#function-getmodels">getModels</a></strong>() const</td></tr><tr><td>float</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1MatrixTracker.html#function-getparam">getParam</a></strong>() const</td></tr><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Sequence.html">Sequence</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1MatrixTracker.html#function-getsequence">getSequence</a></strong>() const</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceCore.html#typedef-id">ID</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1MatrixTracker.html#function-getsequenceid">getSequenceID</a></strong>() const</td></tr><tr><td>const std::map&lt; <a href="/cpp-api-reference/namespaces/namespaceCore.html#typedef-id">Core::ID</a>, float &gt; &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1MatrixTracker.html#function-gettrackingprogress">getTrackingProgress</a></strong>() const</td></tr><tr><td>const <a href="/cpp-api-reference/classes/structCore_1_1TrackingResult.html">TrackingResult</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1MatrixTracker.html#function-result">result</a></strong>() const</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1MatrixTracker.html#function-setparam">setParam</a></strong>(float param)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1MatrixTracker.html#function-update">update</a></strong>()</td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-matrixtracker" tabindex="-1">function MatrixTracker <a class="header-anchor" href="#function-matrixtracker" aria-label="Permalink to &quot;function MatrixTracker&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">MatrixTracker</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">=default</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">MatrixTracker</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">=default</span></span></code></pre></div><h3 id="function-matrixtracker-1" tabindex="-1">function MatrixTracker <a class="header-anchor" href="#function-matrixtracker-1" aria-label="Permalink to &quot;function MatrixTracker&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">MatrixTracker</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    Sequence </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> beginSequence,</span></span>
<span class="line"><span style="color:#E1E4E8;">    TrackingDirection direction,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> UPtr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> IModelProxy </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> model</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">MatrixTracker</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    Sequence </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> beginSequence,</span></span>
<span class="line"><span style="color:#24292E;">    TrackingDirection direction,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> UPtr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> IModelProxy </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> model</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-fullmatricescount" tabindex="-1">function fullMatricesCount <a class="header-anchor" href="#function-fullmatricescount" aria-label="Permalink to &quot;function fullMatricesCount&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fullMatricesCount</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fullMatricesCount</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-getinterpolatedmatrix" tabindex="-1">function getInterpolatedMatrix <a class="header-anchor" href="#function-getinterpolatedmatrix" aria-label="Permalink to &quot;function getInterpolatedMatrix&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">mat4</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getInterpolatedMatrix</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">mat4</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getInterpolatedMatrix</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-getinterpolatedtransformid" tabindex="-1">function getInterpolatedTransformID <a class="header-anchor" href="#function-getinterpolatedtransformid" aria-label="Permalink to &quot;function getInterpolatedTransformID&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ID</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getInterpolatedTransformID</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ID</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getInterpolatedTransformID</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-getmodels" tabindex="-1">function getModels <a class="header-anchor" href="#function-getmodels" aria-label="Permalink to &quot;function getModels&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vector</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Model</span><span style="color:#E1E4E8;"> &gt; &gt; </span><span style="color:#B392F0;">getModels</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vector</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Model</span><span style="color:#24292E;"> &gt; &gt; </span><span style="color:#6F42C1;">getModels</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-getparam" tabindex="-1">function getParam <a class="header-anchor" href="#function-getparam" aria-label="Permalink to &quot;function getParam&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getParam</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getParam</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-getsequence" tabindex="-1">function getSequence <a class="header-anchor" href="#function-getsequence" aria-label="Permalink to &quot;function getSequence&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Sequence</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">getSequence</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Sequence</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">getSequence</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-getsequenceid" tabindex="-1">function getSequenceID <a class="header-anchor" href="#function-getsequenceid" aria-label="Permalink to &quot;function getSequenceID&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ID</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getSequenceID</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ID</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getSequenceID</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-gettrackingprogress" tabindex="-1">function getTrackingProgress <a class="header-anchor" href="#function-gettrackingprogress" aria-label="Permalink to &quot;function getTrackingProgress&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">ID</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getTrackingProgress</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">ID</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> &gt; </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getTrackingProgress</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-result" tabindex="-1">function result <a class="header-anchor" href="#function-result" aria-label="Permalink to &quot;function result&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TrackingResult</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">result</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TrackingResult</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">result</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-setparam" tabindex="-1">function setParam <a class="header-anchor" href="#function-setparam" aria-label="Permalink to &quot;function setParam&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setParam</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">param</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setParam</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">param</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-update" tabindex="-1">function update <a class="header-anchor" href="#function-update" aria-label="Permalink to &quot;function update&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">update</span><span style="color:#24292E;">()</span></span></code></pre></div><hr><p>Updated on 2025-01-07 at 10:31:21 +0000</p>`,33),l=[o];function p(c,r,i,d,y,u){return a(),e("div",null,l)}const g=s(t,[["render",p]]);export{E as __pageData,g as default};
