import{_ as s,o as a,c as n,Q as t}from"./chunks/framework.0f749972.js";const E=JSON.parse('{"title":"Vp::Lighting","description":"","frontmatter":{"title":"Vp::Lighting","summary":"Class that manages passing of light information to shaders."},"headers":[],"relativePath":"cpp-api-reference/classes/classVp_1_1Lighting.md","filePath":"cpp-api-reference/classes/classVp_1_1Lighting.md"}'),l={name:"cpp-api-reference/classes/classVp_1_1Lighting.md"},p=t(`<h1 id="vp-lighting" tabindex="-1">Vp::Lighting <a class="header-anchor" href="#vp-lighting" aria-label="Permalink to &quot;Vp::Lighting&quot;">​</a></h1><p>Class that manages passing of light information to shaders.</p><p><code>#include &quot;Viewport/scene/Lighting.h&quot;</code></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Lighting.html#function-addlight">addLight</a></strong>(const std::shared_ptr&lt; <a href="/cpp-api-reference/classes/classVp_1_1Light.html">Light</a> &gt; &amp; light)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Lighting.html#function-addlight">addLight</a></strong>(<a href="/cpp-api-reference/classes/classVp_1_1Light.html">Light</a> * light)</td></tr><tr><td>std::vector&lt; std::shared_ptr&lt; <a href="/cpp-api-reference/classes/classVp_1_1Light.html">Light</a> &gt; &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Lighting.html#function-getlights">getLights</a></strong>() const</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Lighting.html#function-removelight">removeLight</a></strong>(std::shared_ptr&lt; <a href="/cpp-api-reference/classes/classVp_1_1Light.html">Light</a> &gt; &amp; light)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Lighting.html#function-setuniforms">setUniforms</a></strong>(const <a href="/cpp-api-reference/classes/classVp_1_1PhongShader.html">PhongShader</a> &amp; shader) const&lt;br&gt;Set light information uniforms for a shader.</td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-addlight" tabindex="-1">function addLight <a class="header-anchor" href="#function-addlight" aria-label="Permalink to &quot;function addLight&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">addLight</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">shared_ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Light</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">light</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">addLight</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">shared_ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Light</span><span style="color:#24292E;"> &gt; </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">light</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-addlight-1" tabindex="-1">function addLight <a class="header-anchor" href="#function-addlight-1" aria-label="Permalink to &quot;function addLight&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">addLight</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Light</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">light</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">addLight</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Light</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">light</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-getlights" tabindex="-1">function getLights <a class="header-anchor" href="#function-getlights" aria-label="Permalink to &quot;function getLights&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vector</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">shared_ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Light</span><span style="color:#E1E4E8;"> &gt; &gt; </span><span style="color:#B392F0;">getLights</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vector</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">shared_ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Light</span><span style="color:#24292E;"> &gt; &gt; </span><span style="color:#6F42C1;">getLights</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-removelight" tabindex="-1">function removeLight <a class="header-anchor" href="#function-removelight" aria-label="Permalink to &quot;function removeLight&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">removeLight</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">shared_ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Light</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">light</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">removeLight</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">shared_ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Light</span><span style="color:#24292E;"> &gt; </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">light</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-setuniforms" tabindex="-1">function setUniforms <a class="header-anchor" href="#function-setuniforms" aria-label="Permalink to &quot;function setUniforms&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setUniforms</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PhongShader</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">shader</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setUniforms</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PhongShader</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">shader</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">const</span></span></code></pre></div><p>Set light information uniforms for a shader.</p><p><strong>Parameters</strong>:</p><ul><li><strong>shader</strong> The shader</li></ul><hr><p>Updated on 2025-01-07 at 09:46:56 +0000</p>`,21),o=[p];function e(c,r,i,h,d,g){return a(),n("div",null,o)}const u=s(l,[["render",e]]);export{E as __pageData,u as default};
