import{_ as e,o as a,c as s,Q as n}from"./chunks/framework.0f749972.js";const _=JSON.parse('{"title":"Namespaces","description":"","frontmatter":{"title":"Namespaces"},"headers":[],"relativePath":"cpp-api-reference/namespaces/index.md","filePath":"cpp-api-reference/namespaces/index.md"}'),p={name:"cpp-api-reference/namespaces/index.md"},r=n('<h1 id="namespaces" tabindex="-1">Namespaces <a class="header-anchor" href="#namespaces" aria-label="Permalink to &quot;Namespaces&quot;">â€‹</a></h1><ul><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceCore.html">Core</a></strong><ul><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceCore_1_1Builder.html">Builder</a></strong></li></ul></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html">DIWNE</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceDetail.html">Detail</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceEnumUtils.html">EnumUtils</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceFilesystemUtils.html">FilesystemUtils</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceGUI.html">GUI</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceI3T.html">I3T</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceJSON.html">JSON</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceJSONRTTR.html">JSONRTTR</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceLuaSerializer.html">LuaSerializer</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceMath.html">Math</a></strong> &lt;br&gt;Approximate double comparison.</li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceMenuBarDialogs.html">MenuBarDialogs</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceNodeDeserializer.html">NodeDeserializer</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceState.html">State</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceString.html">String</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceSystemDialogs.html">SystemDialogs</a></strong> &lt;br&gt;A bunch of system dialogs.</li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceTimeUtils.html">TimeUtils</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceUI.html">UI</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceUtils.html">Utils</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceVp.html">Vp</a></strong><ul><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceVp_1_1GfxUtils.html">GfxUtils</a></strong></li></ul></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceWorkspace.html">Workspace</a></strong> &lt;br&gt;<a href="./.html">GUI</a> nodes. <ul><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceWorkspace_1_1Tools.html">Tools</a></strong></li></ul></li></ul><hr><p>Updated on 2025-02-25 at 07:08:42 +0000</p>',4),c=[r];function t(i,m,l,o,h,f){return a(),s("div",null,c)}const d=e(p,[["render",t]]);export{_ as __pageData,d as default};
