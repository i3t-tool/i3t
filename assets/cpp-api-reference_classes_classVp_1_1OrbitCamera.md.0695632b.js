import{_ as a,o as s,c as t,Q as e}from"./chunks/framework.0f749972.js";const g=JSON.parse('{"title":"Vp::OrbitCamera","description":"","frontmatter":{"title":"Vp::OrbitCamera","summary":"Camera turning around a point using an azimuth and elevation angle."},"headers":[],"relativePath":"cpp-api-reference/classes/classVp_1_1OrbitCamera.md","filePath":"cpp-api-reference/classes/classVp_1_1OrbitCamera.md"}'),o={name:"cpp-api-reference/classes/classVp_1_1OrbitCamera.md"},n=e(`<h1 id="vp-orbitcamera" tabindex="-1">Vp::OrbitCamera <a class="header-anchor" href="#vp-orbitcamera" aria-label="Permalink to &quot;Vp::OrbitCamera&quot;">​</a></h1><p>Camera turning around a point using an azimuth and elevation angle. <a href="#detailed-description">More...</a></p><p><code>#include &quot;Viewport/camera/OrbitCamera.h&quot;</code></p><p>Inherits from <a href="/cpp-api-reference/classes/classVp_1_1AbstractOrbitCamera.html">Vp::AbstractOrbitCamera</a>, <a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html">Vp::AbstractCamera</a></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>float</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#function-getrotatespeed">getRotateSpeed</a></strong>() const</td></tr><tr><td>virtual float</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#function-getrotationx">getRotationX</a></strong>() const</td></tr><tr><td>virtual float</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#function-getrotationy">getRotationY</a></strong>() const</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#function-getsmoothscroll">getSmoothScroll</a></strong>() const</td></tr><tr><td>float</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#function-gettranslatespeed">getTranslateSpeed</a></strong>() const</td></tr><tr><td>float</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#function-getzoomspeed">getZoomSpeed</a></strong>() const</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#function-processinput">processInput</a></strong>(double dt, glm::vec2 mousePos, glm::ivec2 windowSize) override&lt;br&gt;Updates the internal camera state with user input.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#function-setrotatespeed">setRotateSpeed</a></strong>(float rotateSpeed)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#function-setrotationx">setRotationX</a></strong>(float rotationX)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#function-setrotationy">setRotationY</a></strong>(float rotationY)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#function-setsmoothscroll">setSmoothScroll</a></strong>(bool b)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#function-settranslatespeed">setTranslateSpeed</a></strong>(float translateSpeed)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#function-setzoomspeed">setZoomSpeed</a></strong>(float zoomSpeed)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#function-update">update</a></strong>() override&lt;br&gt;Recalculates the view and projection matrices based on the internal camera state.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#function-viewpoint">viewpoint</a></strong>(<a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#enum-viewpoint">AbstractCamera::Viewpoint</a> viewpoint) override&lt;br&gt;Moves the camera to the specified viewpoint.</td></tr></tbody></table><h2 id="protected-functions" tabindex="-1">Protected Functions <a class="header-anchor" href="#protected-functions" aria-label="Permalink to &quot;Protected Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#function-mousedrag">mouseDrag</a></strong>(float dx, float dy, bool rotate, bool pan)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#function-mousewheel">mouseWheel</a></strong>(float scroll)</td></tr></tbody></table><h2 id="protected-attributes" tabindex="-1">Protected Attributes <a class="header-anchor" href="#protected-attributes" aria-label="Permalink to &quot;Protected Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>float</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#variable-m-dscroll">m_dScroll</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#variable-m-isrotating">m_isRotating</a></strong></td></tr><tr><td>float</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#variable-m-rotatespeed">m_rotateSpeed</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#variable-m-rotatestartedupsidedown">m_rotateStartedUpsideDown</a></strong></td></tr><tr><td>float</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#variable-m-rotationx">m_rotationX</a></strong> &lt;br&gt;Horizontal rotation, 0 at +X, positive anti-clockwise.</td></tr><tr><td>float</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#variable-m-rotationy">m_rotationY</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#variable-m-smoothscroll">m_smoothScroll</a></strong></td></tr><tr><td>float</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#variable-m-translatespeed">m_translateSpeed</a></strong></td></tr><tr><td>float</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html#variable-m-zoomspeed">m_zoomSpeed</a></strong></td></tr></tbody></table><h2 id="additional-inherited-members" tabindex="-1">Additional inherited members <a class="header-anchor" href="#additional-inherited-members" aria-label="Permalink to &quot;Additional inherited members&quot;">​</a></h2><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/classVp_1_1AbstractOrbitCamera.html">Vp::AbstractOrbitCamera</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractOrbitCamera.html#function-centeronbox">centerOnBox</a></strong>(glm::vec3 boxMin, glm::vec3 boxMax, bool interpolate) override&lt;br&gt;Moves camera so that the specified axis aligned bounding box is visible.</td></tr><tr><td>glm::vec3</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractOrbitCamera.html#function-getpivot">getPivot</a></strong>() const</td></tr><tr><td>float</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractOrbitCamera.html#function-getradius">getRadius</a></strong>() const</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractOrbitCamera.html#function-setpivot">setPivot</a></strong>(const glm::vec3 &amp; pivot)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractOrbitCamera.html#function-setradius">setRadius</a></strong>(float radius)</td></tr></tbody></table><p><strong>Protected Attributes inherited from <a href="/cpp-api-reference/classes/classVp_1_1AbstractOrbitCamera.html">Vp::AbstractOrbitCamera</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>glm::vec3</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractOrbitCamera.html#variable-m-pivot">m_pivot</a></strong></td></tr><tr><td>float</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractOrbitCamera.html#variable-m-radius">m_radius</a></strong></td></tr></tbody></table><p><strong>Public Types inherited from <a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html">Vp::AbstractCamera</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>enum class</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#enum-viewpoint">Viewpoint</a></strong> { LEFT, RIGHT, TOP, BOTTOM, FRONT, BACK}</td></tr></tbody></table><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html">Vp::AbstractCamera</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-~abstractcamera">~AbstractCamera</a></strong>() =default</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-centeronbox">centerOnBox</a></strong>(glm::vec3 boxMin, glm::vec3 boxMax, bool interpolate)&lt;br&gt;Moves camera so that the specified axis aligned bounding box is visible.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-centeronobjects">centerOnObjects</a></strong>(const std::vector&lt; const <a href="/cpp-api-reference/classes/classVp_1_1GameObject.html">GameObject</a> * &gt; objects)&lt;br&gt;Moves camera so that the specified objects are visible.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-centeronscene">centerOnScene</a></strong>(const <a href="/cpp-api-reference/classes/classVp_1_1Scene.html">Scene</a> &amp; scene)&lt;br&gt;Moves camera so that all objects in the scene are visible.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-centeronselection">centerOnSelection</a></strong>(const <a href="/cpp-api-reference/classes/classVp_1_1Scene.html">Scene</a> &amp; scene)&lt;br&gt;Moves camera so that all selected objects in the scene are visible.</td></tr><tr><td>virtual glm::vec3</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-getdirection">getDirection</a></strong>() const</td></tr><tr><td>virtual float</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-getfov">getFov</a></strong>() const</td></tr><tr><td>virtual int</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-getheight">getHeight</a></strong>() const</td></tr><tr><td>virtual glm::vec3</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-getposition">getPosition</a></strong>() const</td></tr><tr><td>virtual glm::mat4</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-getprojection">getProjection</a></strong>() const</td></tr><tr><td>virtual glm::vec3</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-getright">getRight</a></strong>() const</td></tr><tr><td>virtual glm::vec3</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-getup">getUp</a></strong>() const</td></tr><tr><td>virtual glm::mat4</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-getview">getView</a></strong>() const</td></tr><tr><td>virtual int</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-getwidth">getWidth</a></strong>() const</td></tr><tr><td>virtual float</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-getzfar">getZFar</a></strong>() const</td></tr><tr><td>virtual float</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-getznear">getZNear</a></strong>() const</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-interpolate">interpolate</a></strong>(glm::mat4 from, glm::mat4 to)&lt;br&gt;Begin interpolation from one view matrix to another, the interpolation will take m_interpolationPeriod seconds in realtime.</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-isinterpolating">isInterpolating</a></strong>(float &amp; progress) const&lt;br&gt;Checks whether interpolation between view matrices is currently happening.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-setfov">setFov</a></strong>(float fov)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-setzfar">setZFar</a></strong>(float zFar)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-setznear">setZNear</a></strong>(float zNear)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-size">size</a></strong>(int width, int height)&lt;br&gt;Sets the camera resolution in pixels.</td></tr></tbody></table><p><strong>Protected Functions inherited from <a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html">Vp::AbstractCamera</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>std::vector&lt; glm::vec3 &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-createboundingboxworldpoints">createBoundingBoxWorldPoints</a></strong>(glm::vec3 boxMin, glm::vec3 boxMax, glm::mat4 modelMatrix)</td></tr><tr><td>glm::mat4</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-createprojectionmatrix">createProjectionMatrix</a></strong>(bool nonShrinking) const</td></tr></tbody></table><p><strong>Protected Attributes inherited from <a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html">Vp::AbstractCamera</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>glm::mat4</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#variable-interpolationfrom">interpolationFrom</a></strong></td></tr><tr><td>double</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#variable-interpolationperiod">interpolationPeriod</a></strong></td></tr><tr><td>std::chrono::time_point&lt; std::chrono::steady_clock, std::chrono::duration&lt; double &gt; &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#variable-interpolationstart">interpolationStart</a></strong></td></tr><tr><td>glm::mat4</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#variable-interpolationto">interpolationTo</a></strong></td></tr><tr><td>glm::vec3</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#variable-m-direction">m_direction</a></strong></td></tr><tr><td>float</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#variable-m-fov">m_fov</a></strong> &lt;br&gt;Vertical field of vision in degrees.</td></tr><tr><td>int</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#variable-m-height">m_height</a></strong> &lt;br&gt;Camera resolution height in pixels.</td></tr><tr><td>glm::vec3</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#variable-m-position">m_position</a></strong></td></tr><tr><td>glm::mat4</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#variable-m-projection">m_projection</a></strong></td></tr><tr><td>glm::vec3</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#variable-m-right">m_right</a></strong></td></tr><tr><td>glm::vec3</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#variable-m-up">m_up</a></strong></td></tr><tr><td>glm::mat4</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#variable-m-view">m_view</a></strong></td></tr><tr><td>int</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#variable-m-width">m_width</a></strong> &lt;br&gt;Camera resolution width in pixels.</td></tr><tr><td>float</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#variable-m-zfar">m_zFar</a></strong> &lt;br&gt;Distance to the far clipping pane.</td></tr><tr><td>float</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#variable-m-znear">m_zNear</a></strong> &lt;br&gt;Distance to the near clipping pane.</td></tr></tbody></table><h2 id="detailed-description" tabindex="-1">Detailed Description <a class="header-anchor" href="#detailed-description" aria-label="Permalink to &quot;Detailed Description&quot;">​</a></h2><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Vp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">OrbitCamera</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Vp</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">OrbitCamera</span><span style="color:#24292E;">;</span></span></code></pre></div><p>Camera turning around a point using an azimuth and elevation angle.</p><p>It doesn&#39;t roll.</p><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-getrotatespeed" tabindex="-1">function getRotateSpeed <a class="header-anchor" href="#function-getrotatespeed" aria-label="Permalink to &quot;function getRotateSpeed&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getRotateSpeed</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getRotateSpeed</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-getrotationx" tabindex="-1">function getRotationX <a class="header-anchor" href="#function-getrotationx" aria-label="Permalink to &quot;function getRotationX&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getRotationX</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getRotationX</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-getrotationy" tabindex="-1">function getRotationY <a class="header-anchor" href="#function-getrotationy" aria-label="Permalink to &quot;function getRotationY&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getRotationY</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getRotationY</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-getsmoothscroll" tabindex="-1">function getSmoothScroll <a class="header-anchor" href="#function-getsmoothscroll" aria-label="Permalink to &quot;function getSmoothScroll&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getSmoothScroll</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getSmoothScroll</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-gettranslatespeed" tabindex="-1">function getTranslateSpeed <a class="header-anchor" href="#function-gettranslatespeed" aria-label="Permalink to &quot;function getTranslateSpeed&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getTranslateSpeed</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getTranslateSpeed</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-getzoomspeed" tabindex="-1">function getZoomSpeed <a class="header-anchor" href="#function-getzoomspeed" aria-label="Permalink to &quot;function getZoomSpeed&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getZoomSpeed</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getZoomSpeed</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-processinput" tabindex="-1">function processInput <a class="header-anchor" href="#function-processinput" aria-label="Permalink to &quot;function processInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processInput</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">double</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">dt</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vec2</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">mousePos</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">ivec2</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">windowSize</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processInput</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> </span><span style="color:#E36209;">dt</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vec2</span><span style="color:#24292E;"> </span><span style="color:#E36209;">mousePos</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">ivec2</span><span style="color:#24292E;"> </span><span style="color:#E36209;">windowSize</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">override</span></span></code></pre></div><p>Updates the internal camera state with user input.</p><p><strong>Parameters</strong>:</p><ul><li><strong>mousePos</strong> Mouse position relative to the window size.</li><li><strong>windowSize</strong> The window size in pixels.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-processinput">Vp::AbstractCamera::processInput</a></p><h3 id="function-setrotatespeed" tabindex="-1">function setRotateSpeed <a class="header-anchor" href="#function-setrotatespeed" aria-label="Permalink to &quot;function setRotateSpeed&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setRotateSpeed</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">rotateSpeed</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setRotateSpeed</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">rotateSpeed</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-setrotationx" tabindex="-1">function setRotationX <a class="header-anchor" href="#function-setrotationx" aria-label="Permalink to &quot;function setRotationX&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setRotationX</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">rotationX</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setRotationX</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">rotationX</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-setrotationy" tabindex="-1">function setRotationY <a class="header-anchor" href="#function-setrotationy" aria-label="Permalink to &quot;function setRotationY&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setRotationY</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">rotationY</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setRotationY</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">rotationY</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-setsmoothscroll" tabindex="-1">function setSmoothScroll <a class="header-anchor" href="#function-setsmoothscroll" aria-label="Permalink to &quot;function setSmoothScroll&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setSmoothScroll</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">b</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setSmoothScroll</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">b</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-settranslatespeed" tabindex="-1">function setTranslateSpeed <a class="header-anchor" href="#function-settranslatespeed" aria-label="Permalink to &quot;function setTranslateSpeed&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setTranslateSpeed</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">translateSpeed</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setTranslateSpeed</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">translateSpeed</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-setzoomspeed" tabindex="-1">function setZoomSpeed <a class="header-anchor" href="#function-setzoomspeed" aria-label="Permalink to &quot;function setZoomSpeed&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setZoomSpeed</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">zoomSpeed</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setZoomSpeed</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">zoomSpeed</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-update" tabindex="-1">function update <a class="header-anchor" href="#function-update" aria-label="Permalink to &quot;function update&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">update</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><p>Recalculates the view and projection matrices based on the internal camera state.</p><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-update">Vp::AbstractCamera::update</a></p><p>Generally this method should build up a new view matrix from scratch using some arbitrary internal variables. From the calculated view matrix, direction, up, right and position information should be updated.</p><h3 id="function-viewpoint" tabindex="-1">function viewpoint <a class="header-anchor" href="#function-viewpoint" aria-label="Permalink to &quot;function viewpoint&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">viewpoint</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">AbstractCamera</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Viewpoint</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">viewpoint</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">viewpoint</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">AbstractCamera</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">Viewpoint</span><span style="color:#24292E;"> </span><span style="color:#E36209;">viewpoint</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">override</span></span></code></pre></div><p>Moves the camera to the specified viewpoint.</p><p><strong>Parameters</strong>:</p><ul><li><strong>viewpoint</strong></li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html#function-viewpoint">Vp::AbstractCamera::viewpoint</a></p><p>Subclasses need to provide their own implementations.</p><h2 id="protected-functions-documentation" tabindex="-1">Protected Functions Documentation <a class="header-anchor" href="#protected-functions-documentation" aria-label="Permalink to &quot;Protected Functions Documentation&quot;">​</a></h2><h3 id="function-mousedrag" tabindex="-1">function mouseDrag <a class="header-anchor" href="#function-mousedrag" aria-label="Permalink to &quot;function mouseDrag&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">mouseDrag</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">dx</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">dy</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">rotate</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">pan</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">mouseDrag</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">dx</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">dy</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">rotate</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">pan</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-mousewheel" tabindex="-1">function mouseWheel <a class="header-anchor" href="#function-mousewheel" aria-label="Permalink to &quot;function mouseWheel&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">mouseWheel</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">scroll</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">mouseWheel</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">scroll</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="protected-attributes-documentation" tabindex="-1">Protected Attributes Documentation <a class="header-anchor" href="#protected-attributes-documentation" aria-label="Permalink to &quot;Protected Attributes Documentation&quot;">​</a></h2><h3 id="variable-m-dscroll" tabindex="-1">variable m_dScroll <a class="header-anchor" href="#variable-m-dscroll" aria-label="Permalink to &quot;variable m_dScroll&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> m_dScroll </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.0</span><span style="color:#F97583;">f</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">float</span><span style="color:#24292E;"> m_dScroll </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.0</span><span style="color:#D73A49;">f</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-m-isrotating" tabindex="-1">variable m_isRotating <a class="header-anchor" href="#variable-m-isrotating" aria-label="Permalink to &quot;variable m_isRotating&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_isRotating </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_isRotating </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-m-rotatespeed" tabindex="-1">variable m_rotateSpeed <a class="header-anchor" href="#variable-m-rotatespeed" aria-label="Permalink to &quot;variable m_rotateSpeed&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> m_rotateSpeed </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.29</span><span style="color:#F97583;">f</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">float</span><span style="color:#24292E;"> m_rotateSpeed </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.29</span><span style="color:#D73A49;">f</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-m-rotatestartedupsidedown" tabindex="-1">variable m_rotateStartedUpsideDown <a class="header-anchor" href="#variable-m-rotatestartedupsidedown" aria-label="Permalink to &quot;variable m_rotateStartedUpsideDown&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_rotateStartedUpsideDown </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_rotateStartedUpsideDown </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-m-rotationx" tabindex="-1">variable m_rotationX <a class="header-anchor" href="#variable-m-rotationx" aria-label="Permalink to &quot;variable m_rotationX&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> m_rotationX </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">90.0</span><span style="color:#F97583;">f</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">float</span><span style="color:#24292E;"> m_rotationX </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">90.0</span><span style="color:#D73A49;">f</span><span style="color:#24292E;">;</span></span></code></pre></div><p>Horizontal rotation, 0 at +X, positive anti-clockwise.</p><h3 id="variable-m-rotationy" tabindex="-1">variable m_rotationY <a class="header-anchor" href="#variable-m-rotationy" aria-label="Permalink to &quot;variable m_rotationY&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> m_rotationY </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">30.0</span><span style="color:#F97583;">f</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">float</span><span style="color:#24292E;"> m_rotationY </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">30.0</span><span style="color:#D73A49;">f</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-m-smoothscroll" tabindex="-1">variable m_smoothScroll <a class="header-anchor" href="#variable-m-smoothscroll" aria-label="Permalink to &quot;variable m_smoothScroll&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_smoothScroll </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_smoothScroll </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-m-translatespeed" tabindex="-1">variable m_translateSpeed <a class="header-anchor" href="#variable-m-translatespeed" aria-label="Permalink to &quot;variable m_translateSpeed&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> m_translateSpeed </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.02</span><span style="color:#F97583;">f</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">float</span><span style="color:#24292E;"> m_translateSpeed </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.02</span><span style="color:#D73A49;">f</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-m-zoomspeed" tabindex="-1">variable m_zoomSpeed <a class="header-anchor" href="#variable-m-zoomspeed" aria-label="Permalink to &quot;variable m_zoomSpeed&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> m_zoomSpeed </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.8</span><span style="color:#F97583;">f</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">float</span><span style="color:#24292E;"> m_zoomSpeed </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.8</span><span style="color:#D73A49;">f</span><span style="color:#24292E;">;</span></span></code></pre></div><hr><p>Updated on 2025-01-23 at 08:58:04 +0000</p>`,97),l=[n];function p(r,c,i,d,h,m){return s(),t("div",null,l)}const u=a(o,[["render",p]]);export{g as __pageData,u as default};
