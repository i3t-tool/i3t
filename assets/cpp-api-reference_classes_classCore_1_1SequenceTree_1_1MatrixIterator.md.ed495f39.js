import{_ as s,o as a,c as e,Q as o}from"./chunks/framework.0f749972.js";const u=JSON.parse('{"title":"Core::SequenceTree::MatrixIterator","description":"","frontmatter":{"title":"Core::SequenceTree::MatrixIterator","summary":"Iterator for traversing sequence tree."},"headers":[],"relativePath":"cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.md","filePath":"cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.md"}'),n={name:"cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.md"},t=o(`<h1 id="core-sequencetree-matrixiterator" tabindex="-1">Core::SequenceTree::MatrixIterator <a class="header-anchor" href="#core-sequencetree-matrixiterator" aria-label="Permalink to &quot;Core::SequenceTree::MatrixIterator&quot;">​</a></h1><p>Iterator for traversing sequence tree. <a href="#detailed-description">More...</a></p><p><code>#include &quot;Core/Nodes/Tracking.h&quot;</code></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html#function-matrixiterator">MatrixIterator</a></strong>(<a href="/cpp-api-reference/classes/classCore_1_1Sequence.html">Sequence</a> * sequence)</td></tr><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html#function-matrixiterator">MatrixIterator</a></strong>(<a href="/cpp-api-reference/classes/classCore_1_1Sequence.html">Sequence</a> * sequence, <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> &gt; node)</td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> &gt; &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html#function-collect">collect</a></strong>()</td></tr><tr><td>std::pair&lt; std::vector&lt; <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> &gt; &gt;, std::vector&lt; <a href="/cpp-api-reference/classes/structCore_1_1TransformInfo.html">TransformInfo</a> &gt; &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html#function-collectwithinfo">collectWithInfo</a></strong>()</td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1Sequence.html">Sequence</a> *</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html#function-getsequence">getSequence</a></strong>() const</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html#function-operator!=">operator!=</a></strong>(const <a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html">MatrixIterator</a> &amp; rhs) const</td></tr><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html#function-operator*">operator*</a></strong>() const&lt;br&gt;Get current matrix, can be transformation or other node with matrix output.</td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html">MatrixIterator</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html#function-operator+">operator+</a></strong>(int a)</td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html">MatrixIterator</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html#function-operator++">operator++</a></strong>()&lt;br&gt;Move iterator to root sequence.</td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html">MatrixIterator</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html#function-operator++">operator++</a></strong>(int )&lt;br&gt;Move iterator to root sequence.</td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html">MatrixIterator</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html#function-operator--">operator--</a></strong>()&lt;br&gt;Move iterator towards to the leaf sequence.</td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html">MatrixIterator</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html#function-operator--">operator--</a></strong>(int )&lt;br&gt;Move iterator towards to the leaf sequence.</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html#function-operator==">operator==</a></strong>(const <a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html">MatrixIterator</a> &amp; rhs) const</td></tr><tr><td>const <a href="/cpp-api-reference/classes/structCore_1_1TransformInfo.html">TransformInfo</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html#function-transforminfo">transformInfo</a></strong>() const</td></tr></tbody></table><h2 id="friends" tabindex="-1">Friends <a class="header-anchor" href="#friends" aria-label="Permalink to &quot;Friends&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html#friend-sequencetree">SequenceTree</a></strong></td></tr></tbody></table><h2 id="detailed-description" tabindex="-1">Detailed Description <a class="header-anchor" href="#detailed-description" aria-label="Permalink to &quot;Detailed Description&quot;">​</a></h2><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">SequenceTree</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">MatrixIterator</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">SequenceTree</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">MatrixIterator</span><span style="color:#24292E;">;</span></span></code></pre></div><p>Iterator for traversing sequence tree.</p><p>Goes from leaf to root, skipping empty sequences.</p><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-matrixiterator" tabindex="-1">function MatrixIterator <a class="header-anchor" href="#function-matrixiterator" aria-label="Permalink to &quot;function MatrixIterator&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">explicit</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MatrixIterator</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    Sequence </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> sequence</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">explicit</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MatrixIterator</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    Sequence </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> sequence</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-matrixiterator-1" tabindex="-1">function MatrixIterator <a class="header-anchor" href="#function-matrixiterator-1" aria-label="Permalink to &quot;function MatrixIterator&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">MatrixIterator</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    Sequence </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> sequence,</span></span>
<span class="line"><span style="color:#E1E4E8;">    Ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> Node </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> node</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">MatrixIterator</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    Sequence </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> sequence,</span></span>
<span class="line"><span style="color:#24292E;">    Ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Node </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> node</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-collect" tabindex="-1">function collect <a class="header-anchor" href="#function-collect" aria-label="Permalink to &quot;function collect&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vector</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> &gt; &gt; </span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vector</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> &gt; &gt; </span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Return</strong>: Non-owned pointer to the all matrices from start to the root, note that Ptr&lt;Node&gt; may points to operator with matrix output, not only to transformation.</p><h3 id="function-collectwithinfo" tabindex="-1">function collectWithInfo <a class="header-anchor" href="#function-collectwithinfo" aria-label="Permalink to &quot;function collectWithInfo&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">pair</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vector</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> &gt; &gt;, </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vector</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">TransformInfo</span><span style="color:#E1E4E8;"> &gt; &gt; </span><span style="color:#B392F0;">collectWithInfo</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">pair</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vector</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> &gt; &gt;, </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vector</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">TransformInfo</span><span style="color:#24292E;"> &gt; &gt; </span><span style="color:#6F42C1;">collectWithInfo</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-getsequence" tabindex="-1">function getSequence <a class="header-anchor" href="#function-getsequence" aria-label="Permalink to &quot;function getSequence&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Sequence</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getSequence</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Sequence</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getSequence</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><p><strong>Return</strong>: Non-owned pointer to the current sequence. Never null.</p><h3 id="function-operator" tabindex="-1">function operator!= <a class="header-anchor" href="#function-operator" aria-label="Permalink to &quot;function operator!=&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">operator</span><span style="color:#B392F0;">!=</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MatrixIterator</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">rhs</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">operator</span><span style="color:#6F42C1;">!=</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MatrixIterator</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">rhs</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-operator-1" tabindex="-1">function operator* <a class="header-anchor" href="#function-operator-1" aria-label="Permalink to &quot;function operator*&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#F97583;">operator</span><span style="color:#B392F0;">*</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> &gt; </span><span style="color:#D73A49;">operator</span><span style="color:#6F42C1;">*</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><p>Get current matrix, can be transformation or other node with matrix output.</p><p><strong>Warning</strong>: You have to extract data from the node by yourself.</p><h3 id="function-operator-2" tabindex="-1">function operator+ <a class="header-anchor" href="#function-operator-2" aria-label="Permalink to &quot;function operator+&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">MatrixIterator</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">operator</span><span style="color:#B392F0;">+</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">a</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">MatrixIterator</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">operator</span><span style="color:#6F42C1;">+</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">a</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-operator-3" tabindex="-1">function operator++ <a class="header-anchor" href="#function-operator-3" aria-label="Permalink to &quot;function operator++&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">MatrixIterator</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">operator</span><span style="color:#B392F0;">++</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">MatrixIterator</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">operator</span><span style="color:#6F42C1;">++</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Move iterator to root sequence.</p><h3 id="function-operator-4" tabindex="-1">function operator++ <a class="header-anchor" href="#function-operator-4" aria-label="Permalink to &quot;function operator++&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">MatrixIterator</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">operator</span><span style="color:#B392F0;">++</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">MatrixIterator</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">operator</span><span style="color:#6F42C1;">++</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Move iterator to root sequence.</p><h3 id="function-operator-5" tabindex="-1">function operator-- <a class="header-anchor" href="#function-operator-5" aria-label="Permalink to &quot;function operator--&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">MatrixIterator</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">operator</span><span style="color:#B392F0;">--</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">MatrixIterator</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">operator</span><span style="color:#6F42C1;">--</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Move iterator towards to the leaf sequence.</p><h3 id="function-operator-6" tabindex="-1">function operator-- <a class="header-anchor" href="#function-operator-6" aria-label="Permalink to &quot;function operator--&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">MatrixIterator</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">operator</span><span style="color:#B392F0;">--</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">MatrixIterator</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">operator</span><span style="color:#6F42C1;">--</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Move iterator towards to the leaf sequence.</p><h3 id="function-operator-7" tabindex="-1">function operator== <a class="header-anchor" href="#function-operator-7" aria-label="Permalink to &quot;function operator==&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">operator</span><span style="color:#B392F0;">==</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MatrixIterator</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">rhs</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">operator</span><span style="color:#6F42C1;">==</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MatrixIterator</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">rhs</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-transforminfo" tabindex="-1">function transformInfo <a class="header-anchor" href="#function-transforminfo" aria-label="Permalink to &quot;function transformInfo&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TransformInfo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">transformInfo</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TransformInfo</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">transformInfo</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h2 id="friends-1" tabindex="-1">Friends <a class="header-anchor" href="#friends-1" aria-label="Permalink to &quot;Friends&quot;">​</a></h2><h3 id="friend-sequencetree" tabindex="-1">friend SequenceTree <a class="header-anchor" href="#friend-sequencetree" aria-label="Permalink to &quot;friend SequenceTree&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">friend</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SequenceTree</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">SequenceTree</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">friend</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SequenceTree</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">SequenceTree</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre></div><hr><p>Updated on 2025-01-07 at 12:51:55 +0000</p>`,53),r=[t];function p(l,c,i,d,y,h){return a(),e("div",null,r)}const f=s(n,[["render",p]]);export{u as __pageData,f as default};
