import{_ as a,o as s,c as e,Q as t}from"./chunks/framework.0f749972.js";const b=JSON.parse('{"title":"Vp::ColorAttachment","description":"","frontmatter":{"title":"Vp::ColorAttachment","summary":"Color attachment using a 2D Texture."},"headers":[],"relativePath":"cpp-api-reference/classes/classVp_1_1ColorAttachment.md","filePath":"cpp-api-reference/classes/classVp_1_1ColorAttachment.md"}'),n={name:"cpp-api-reference/classes/classVp_1_1ColorAttachment.md"},l=t(`<h1 id="vp-colorattachment" tabindex="-1">Vp::ColorAttachment <a class="header-anchor" href="#vp-colorattachment" aria-label="Permalink to &quot;Vp::ColorAttachment&quot;">​</a></h1><p><a href="/cpp-api-reference/classes/structColor.html">Color</a> attachment using a 2D Texture.</p><p><code>#include &quot;Viewport/framebuffer/ColorAttachment.h&quot;</code></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html#function-colorattachment">ColorAttachment</a></strong>(const <a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html">ColorAttachment</a> &amp; attchmt)&lt;br&gt;Copy constructor.</td></tr><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html#function-colorattachment">ColorAttachment</a></strong>(GLint internalFormat, GLint format, GLsizei width, GLsizei height, GLenum type)&lt;br&gt;Creates a color attachment with index 0.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html#function-bind">bind</a></strong>() const</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html#function-create">create</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html#function-dispose">dispose</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html#function-resize">resize</a></strong>(int width, int height)</td></tr></tbody></table><h2 id="public-attributes" tabindex="-1">Public Attributes <a class="header-anchor" href="#public-attributes" aria-label="Permalink to &quot;Public Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>GLint</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html#variable-m-format">m_format</a></strong> &lt;br&gt;Pixel data format (see OpenGL docs)</td></tr><tr><td>int</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html#variable-m-height">m_height</a></strong> &lt;br&gt;Texture height in pixels.</td></tr><tr><td>unsigned int</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html#variable-m-index">m_index</a></strong> &lt;br&gt;Index of the color attachment.</td></tr><tr><td>GLint</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html#variable-m-internalformat">m_internalFormat</a></strong> &lt;br&gt;Pixel data internal format (see OpenGL docs)</td></tr><tr><td>GLint</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html#variable-m-magfilter">m_magFilter</a></strong></td></tr><tr><td>GLint</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html#variable-m-minfilter">m_minFilter</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html#variable-m-multisampled">m_multisampled</a></strong> &lt;br&gt;Use MSAA texture.</td></tr><tr><td>unsigned int</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html#variable-m-samples">m_samples</a></strong> &lt;br&gt;Number of MSAA samples if multisampled.</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html#variable-m-syncsize">m_syncSize</a></strong></td></tr><tr><td>GLuint</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html#variable-m-texture">m_texture</a></strong> &lt;br&gt;ID of the created texture.</td></tr><tr><td>GLint</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html#variable-m-texturewraps">m_textureWrapS</a></strong></td></tr><tr><td>GLint</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html#variable-m-texturewrapt">m_textureWrapT</a></strong></td></tr><tr><td>GLenum</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html#variable-m-type">m_type</a></strong> &lt;br&gt;Pixel data type (see OpenGL docs)</td></tr><tr><td>int</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html#variable-m-width">m_width</a></strong> &lt;br&gt;Texture width in pixels.</td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-colorattachment" tabindex="-1">function ColorAttachment <a class="header-anchor" href="#function-colorattachment" aria-label="Permalink to &quot;function ColorAttachment&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ColorAttachment</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> ColorAttachment </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> attchmt</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ColorAttachment</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> ColorAttachment </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> attchmt</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Copy constructor.</p><h3 id="function-colorattachment-1" tabindex="-1">function ColorAttachment <a class="header-anchor" href="#function-colorattachment-1" aria-label="Permalink to &quot;function ColorAttachment&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ColorAttachment</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    GLint internalFormat,</span></span>
<span class="line"><span style="color:#E1E4E8;">    GLint format,</span></span>
<span class="line"><span style="color:#E1E4E8;">    GLsizei width,</span></span>
<span class="line"><span style="color:#E1E4E8;">    GLsizei height,</span></span>
<span class="line"><span style="color:#E1E4E8;">    GLenum type</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ColorAttachment</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    GLint internalFormat,</span></span>
<span class="line"><span style="color:#24292E;">    GLint format,</span></span>
<span class="line"><span style="color:#24292E;">    GLsizei width,</span></span>
<span class="line"><span style="color:#24292E;">    GLsizei height,</span></span>
<span class="line"><span style="color:#24292E;">    GLenum type</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Creates a color attachment with index 0.</p><p>Parameters mimic an OpenGL image texture color attachment.</p><h3 id="function-bind" tabindex="-1">function bind <a class="header-anchor" href="#function-bind" aria-label="Permalink to &quot;function bind&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bind</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-create" tabindex="-1">function create <a class="header-anchor" href="#function-create" aria-label="Permalink to &quot;function create&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-dispose" tabindex="-1">function dispose <a class="header-anchor" href="#function-dispose" aria-label="Permalink to &quot;function dispose&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">dispose</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">dispose</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-resize" tabindex="-1">function resize <a class="header-anchor" href="#function-resize" aria-label="Permalink to &quot;function resize&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resize</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">width</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">height</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resize</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">width</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">height</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="public-attributes-documentation" tabindex="-1">Public Attributes Documentation <a class="header-anchor" href="#public-attributes-documentation" aria-label="Permalink to &quot;Public Attributes Documentation&quot;">​</a></h2><h3 id="variable-m-format" tabindex="-1">variable m_format <a class="header-anchor" href="#variable-m-format" aria-label="Permalink to &quot;variable m_format&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">GLint m_format;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">GLint m_format;</span></span></code></pre></div><p>Pixel data format (see OpenGL docs)</p><h3 id="variable-m-height" tabindex="-1">variable m_height <a class="header-anchor" href="#variable-m-height" aria-label="Permalink to &quot;variable m_height&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> m_height;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> m_height;</span></span></code></pre></div><p>Texture height in pixels.</p><h3 id="variable-m-index" tabindex="-1">variable m_index <a class="header-anchor" href="#variable-m-index" aria-label="Permalink to &quot;variable m_index&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> m_index {</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> m_index {</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">};</span></span></code></pre></div><p>Index of the color attachment.</p><h3 id="variable-m-internalformat" tabindex="-1">variable m_internalFormat <a class="header-anchor" href="#variable-m-internalformat" aria-label="Permalink to &quot;variable m_internalFormat&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">GLint m_internalFormat;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">GLint m_internalFormat;</span></span></code></pre></div><p>Pixel data internal format (see OpenGL docs)</p><h3 id="variable-m-magfilter" tabindex="-1">variable m_magFilter <a class="header-anchor" href="#variable-m-magfilter" aria-label="Permalink to &quot;variable m_magFilter&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">GLint m_magFilter {GL_NEAREST};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">GLint m_magFilter {GL_NEAREST};</span></span></code></pre></div><h3 id="variable-m-minfilter" tabindex="-1">variable m_minFilter <a class="header-anchor" href="#variable-m-minfilter" aria-label="Permalink to &quot;variable m_minFilter&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">GLint m_minFilter {GL_NEAREST};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">GLint m_minFilter {GL_NEAREST};</span></span></code></pre></div><h3 id="variable-m-multisampled" tabindex="-1">variable m_multisampled <a class="header-anchor" href="#variable-m-multisampled" aria-label="Permalink to &quot;variable m_multisampled&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_multisampled {</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_multisampled {</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">};</span></span></code></pre></div><p>Use MSAA texture.</p><h3 id="variable-m-samples" tabindex="-1">variable m_samples <a class="header-anchor" href="#variable-m-samples" aria-label="Permalink to &quot;variable m_samples&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> m_samples {</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> m_samples {</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">};</span></span></code></pre></div><p>Number of MSAA samples if multisampled.</p><h3 id="variable-m-syncsize" tabindex="-1">variable m_syncSize <a class="header-anchor" href="#variable-m-syncsize" aria-label="Permalink to &quot;variable m_syncSize&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_syncSize {</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_syncSize {</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-m-texture" tabindex="-1">variable m_texture <a class="header-anchor" href="#variable-m-texture" aria-label="Permalink to &quot;variable m_texture&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">GLuint m_texture {</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">GLuint m_texture {</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">};</span></span></code></pre></div><p>ID of the created texture.</p><h3 id="variable-m-texturewraps" tabindex="-1">variable m_textureWrapS <a class="header-anchor" href="#variable-m-texturewraps" aria-label="Permalink to &quot;variable m_textureWrapS&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">GLint m_textureWrapS {GL_REPEAT};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">GLint m_textureWrapS {GL_REPEAT};</span></span></code></pre></div><h3 id="variable-m-texturewrapt" tabindex="-1">variable m_textureWrapT <a class="header-anchor" href="#variable-m-texturewrapt" aria-label="Permalink to &quot;variable m_textureWrapT&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">GLint m_textureWrapT {GL_REPEAT};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">GLint m_textureWrapT {GL_REPEAT};</span></span></code></pre></div><h3 id="variable-m-type" tabindex="-1">variable m_type <a class="header-anchor" href="#variable-m-type" aria-label="Permalink to &quot;variable m_type&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">GLenum m_type;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">GLenum m_type;</span></span></code></pre></div><p>Pixel data type (see OpenGL docs)</p><h3 id="variable-m-width" tabindex="-1">variable m_width <a class="header-anchor" href="#variable-m-width" aria-label="Permalink to &quot;variable m_width&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> m_width;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> m_width;</span></span></code></pre></div><p>Texture width in pixels.</p><hr><p>Updated on 2025-01-07 at 12:51:54 +0000</p>`,63),p=[l];function o(r,c,i,d,h,m){return s(),e("div",null,p)}const g=a(n,[["render",o]]);export{b as __pageData,g as default};
