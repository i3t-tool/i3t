import{_ as a,o as s,c as e,Q as l}from"./chunks/framework.0f749972.js";const b=JSON.parse('{"title":"Vp::Shaders","description":"","frontmatter":{"title":"Vp::Shaders"},"headers":[],"relativePath":"cpp-api-reference/classes/classVp_1_1Shaders.md","filePath":"cpp-api-reference/classes/classVp_1_1Shaders.md"}'),o={name:"cpp-api-reference/classes/classVp_1_1Shaders.md"},t=l(`<h1 id="vp-shaders" tabindex="-1">Vp::Shaders <a class="header-anchor" href="#vp-shaders" aria-label="Permalink to &quot;Vp::Shaders&quot;">​</a></h1><p><code>#include &quot;Viewport/shader/Shaders.h&quot;</code></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td><a href="/cpp-api-reference/classes/classVp_1_1Shaders.html">Shaders</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Shaders.html#function-instance">instance</a></strong>()</td></tr><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Shaders.html#function-shaders">Shaders</a></strong>(<a href="/cpp-api-reference/classes/classVp_1_1Shaders.html">Shaders</a> const &amp; ) =delete</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Shaders.html#function-load">load</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Shaders.html#function-operator=">operator=</a></strong>(<a href="/cpp-api-reference/classes/classVp_1_1Shaders.html">Shaders</a> const &amp; ) =delete</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Shaders.html#function-reload">reload</a></strong>()</td></tr></tbody></table><h2 id="public-attributes" tabindex="-1">Public Attributes <a class="header-anchor" href="#public-attributes" aria-label="Permalink to &quot;Public Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Shaders.html#variable-loaded">loaded</a></strong></td></tr><tr><td>std::shared_ptr&lt; <a href="/cpp-api-reference/classes/classVp_1_1BoxBlurShader.html">BoxBlurShader</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Shaders.html#variable-m-boxblurshader">m_boxBlurShader</a></strong></td></tr><tr><td>std::shared_ptr&lt; <a href="/cpp-api-reference/classes/classVp_1_1ColorShader.html">ColorShader</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Shaders.html#variable-m-colorshader">m_colorShader</a></strong></td></tr><tr><td>std::shared_ptr&lt; <a href="/cpp-api-reference/classes/classVp_1_1FrustumShader.html">FrustumShader</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Shaders.html#variable-m-frustumshader">m_frustumShader</a></strong></td></tr><tr><td>std::shared_ptr&lt; <a href="/cpp-api-reference/classes/classVp_1_1GridShader.html">GridShader</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Shaders.html#variable-m-gridshader">m_gridShader</a></strong></td></tr><tr><td>std::shared_ptr&lt; <a href="/cpp-api-reference/classes/classVp_1_1PhongShader.html">PhongShader</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Shaders.html#variable-m-phongshader">m_phongShader</a></strong></td></tr><tr><td>std::shared_ptr&lt; <a href="/cpp-api-reference/classes/classVp_1_1ScreenOverlayShader.html">ScreenOverlayShader</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Shaders.html#variable-m-screenoverlayshader">m_screenOverlayShader</a></strong></td></tr><tr><td>std::shared_ptr&lt; <a href="/cpp-api-reference/classes/classVp_1_1SelectionCompositeShader.html">SelectionCompositeShader</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Shaders.html#variable-m-selectioncompositeshader">m_selectionCompositeShader</a></strong></td></tr><tr><td>std::shared_ptr&lt; <a href="/cpp-api-reference/classes/classVp_1_1WBOITCompositeShader.html">WBOITCompositeShader</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Shaders.html#variable-m-wboitcompositeshader">m_wboitCompositeShader</a></strong></td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-instance" tabindex="-1">function instance <a class="header-anchor" href="#function-instance" aria-label="Permalink to &quot;function instance&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Shaders</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">instance</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Shaders</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">instance</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-shaders" tabindex="-1">function Shaders <a class="header-anchor" href="#function-shaders" aria-label="Permalink to &quot;function Shaders&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Shaders</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    Shaders </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=delete</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Shaders</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    Shaders </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">=delete</span></span></code></pre></div><h3 id="function-load" tabindex="-1">function load <a class="header-anchor" href="#function-load" aria-label="Permalink to &quot;function load&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">load</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">load</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-operator" tabindex="-1">function operator= <a class="header-anchor" href="#function-operator" aria-label="Permalink to &quot;function operator=&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">operator</span><span style="color:#B392F0;">=</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Shaders</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=delete</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">operator</span><span style="color:#6F42C1;">=</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Shaders</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">=delete</span></span></code></pre></div><h3 id="function-reload" tabindex="-1">function reload <a class="header-anchor" href="#function-reload" aria-label="Permalink to &quot;function reload&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">reload</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">reload</span><span style="color:#24292E;">()</span></span></code></pre></div><h2 id="public-attributes-documentation" tabindex="-1">Public Attributes Documentation <a class="header-anchor" href="#public-attributes-documentation" aria-label="Permalink to &quot;Public Attributes Documentation&quot;">​</a></h2><h3 id="variable-loaded" tabindex="-1">variable loaded <a class="header-anchor" href="#variable-loaded" aria-label="Permalink to &quot;variable loaded&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> loaded {</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> loaded {</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-m-boxblurshader" tabindex="-1">variable m_boxBlurShader <a class="header-anchor" href="#variable-m-boxblurshader" aria-label="Permalink to &quot;variable m_boxBlurShader&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::shared_ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> BoxBlurShader </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_boxBlurShader;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::shared_ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> BoxBlurShader </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_boxBlurShader;</span></span></code></pre></div><h3 id="variable-m-colorshader" tabindex="-1">variable m_colorShader <a class="header-anchor" href="#variable-m-colorshader" aria-label="Permalink to &quot;variable m_colorShader&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::shared_ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> ColorShader </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_colorShader;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::shared_ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> ColorShader </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_colorShader;</span></span></code></pre></div><h3 id="variable-m-frustumshader" tabindex="-1">variable m_frustumShader <a class="header-anchor" href="#variable-m-frustumshader" aria-label="Permalink to &quot;variable m_frustumShader&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::shared_ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> FrustumShader </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_frustumShader;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::shared_ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> FrustumShader </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_frustumShader;</span></span></code></pre></div><h3 id="variable-m-gridshader" tabindex="-1">variable m_gridShader <a class="header-anchor" href="#variable-m-gridshader" aria-label="Permalink to &quot;variable m_gridShader&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::shared_ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> GridShader </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_gridShader;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::shared_ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> GridShader </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_gridShader;</span></span></code></pre></div><h3 id="variable-m-phongshader" tabindex="-1">variable m_phongShader <a class="header-anchor" href="#variable-m-phongshader" aria-label="Permalink to &quot;variable m_phongShader&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::shared_ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> PhongShader </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_phongShader;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::shared_ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> PhongShader </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_phongShader;</span></span></code></pre></div><h3 id="variable-m-screenoverlayshader" tabindex="-1">variable m_screenOverlayShader <a class="header-anchor" href="#variable-m-screenoverlayshader" aria-label="Permalink to &quot;variable m_screenOverlayShader&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::shared_ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> ScreenOverlayShader </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_screenOverlayShader;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::shared_ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> ScreenOverlayShader </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_screenOverlayShader;</span></span></code></pre></div><h3 id="variable-m-selectioncompositeshader" tabindex="-1">variable m_selectionCompositeShader <a class="header-anchor" href="#variable-m-selectioncompositeshader" aria-label="Permalink to &quot;variable m_selectionCompositeShader&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::shared_ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> SelectionCompositeShader </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_selectionCompositeShader;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::shared_ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> SelectionCompositeShader </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_selectionCompositeShader;</span></span></code></pre></div><h3 id="variable-m-wboitcompositeshader" tabindex="-1">variable m_wboitCompositeShader <a class="header-anchor" href="#variable-m-wboitcompositeshader" aria-label="Permalink to &quot;variable m_wboitCompositeShader&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::shared_ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> WBOITCompositeShader </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_wboitCompositeShader;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::shared_ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> WBOITCompositeShader </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_wboitCompositeShader;</span></span></code></pre></div><hr><p>Updated on 2025-01-07 at 12:51:55 +0000</p>`,38),p=[t];function r(n,c,d,i,h,y){return s(),e("div",null,p)}const E=a(o,[["render",r]]);export{b as __pageData,E as default};
