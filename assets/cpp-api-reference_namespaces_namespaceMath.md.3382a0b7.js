import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.0f749972.js";const f=JSON.parse('{"title":"Math","description":"","frontmatter":{"title":"Math","summary":"Approximate double comparison."},"headers":[],"relativePath":"cpp-api-reference/namespaces/namespaceMath.md","filePath":"cpp-api-reference/namespaces/namespaceMath.md"}'),o={name:"cpp-api-reference/namespaces/namespaceMath.md"},p=l(`<h1 id="math" tabindex="-1">Math <a class="header-anchor" href="#math" aria-label="Permalink to &quot;Math&quot;">​</a></h1><p>Approximate double comparison. <a href="#detailed-description">More...</a></p><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td><a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-areelementssame">areElementsSame</a></strong>(const glm::vec3 vec)</td></tr><tr><td><a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-eq">eq</a></strong>(const float lhs, const float rhs, const float epsilon)&lt;br&gt;Comparison of two floats using epsilon, useful for comparison to zero and to one.</td></tr><tr><td><a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-eq">eq</a></strong>(const float lhs, const float rhs, const int factor =FACTOR_SIMILAR)&lt;br&gt;Comparison of two floats using factor * difference to nextafter() value, useful for comparison of two floats of unknown value.</td></tr><tr><td><a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-eq">eq</a></strong>(const glm::mat4 &amp; lhs, const glm::mat4 &amp; rhs, const float epsilon)</td></tr><tr><td><a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-eq">eq</a></strong>(const glm::mat4 &amp; lhs, const glm::mat4 &amp; rhs, const int factor =FACTOR_SIMILAR)</td></tr><tr><td><a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-eq">eq</a></strong>(const glm::quat &amp; lhs, const glm::quat &amp; rhs, const int factor =FACTOR_SIMILAR)</td></tr><tr><td><a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-eq">eq</a></strong>(const glm::vec3 &amp; lhs, const glm::vec3 &amp; rhs, const int factor =FACTOR_SIMILAR)</td></tr><tr><td><a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-eq">eq</a></strong>(const glm::vec4 &amp; lhs, const glm::vec4 &amp; rhs, const int factor =FACTOR_SIMILAR)</td></tr><tr><td><a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-eqtoone">eqToOne</a></strong>(const float value, const float epsilon =FLT_EPSILON_FIVE_DECIMALS)</td></tr><tr><td><a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-eqtozero">eqToZero</a></strong>(const float value, const float epsilon =FLT_EPSILON_FIVE_DECIMALS)</td></tr><tr><td>template &lt;typename T &amp;gt; &lt;br&gt;bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-isnormalized">isNormalized</a></strong>(const T &amp; val)</td></tr><tr><td>glm::mat4</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-lerp">lerp</a></strong>(const glm::mat4 &amp; lhs, const glm::mat4 &amp; rhs, float alpha, bool useQuat =false)&lt;br&gt;Linear interpolation between two 4x4 matrices <code>lhs</code> and <code>rhs</code> including translation columns.</td></tr><tr><td>glm::vec3</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-lerp">lerp</a></strong>(glm::vec3 a, glm::vec3 b, float alpha)&lt;br&gt;Linear interpolation between two vectors vec3 <em>a</em> and <em>b</em>.</td></tr><tr><td>glm::vec4</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-lerp">lerp</a></strong>(glm::vec4 a, glm::vec4 b, float alpha)&lt;br&gt;Linear interpolation between two vectors vec4 <em>a</em> and <em>b</em>.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-prefixsum">prefixSum</a></strong>(std::vector&lt; int &gt; &amp; arr)</td></tr><tr><td>float</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-randomf">randomf</a></strong>()&lt;br&gt;Random float from interval 0 .</td></tr><tr><td>float</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-randomfhalf">randomfHalf</a></strong>()&lt;br&gt;Random float from interval -0.5 .</td></tr><tr><td>int</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-randomi">randomi</a></strong>(const int downIncluded, const int topNotInclude)&lt;br&gt;Random integer from interval <em>downIncluded</em> .</td></tr><tr><td>int</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-randomi">randomi</a></strong>(const int topNotInclude)&lt;br&gt;Random integer from interval 0..<em>topNotInclude</em>.</td></tr><tr><td>glm::vec3</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-randomvec">randomVec</a></strong>()</td></tr><tr><td>float</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-range">range</a></strong>(const float value, const float low1, const float high1, const float low2, const float high2)</td></tr><tr><td>float</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-smoothalpha">smoothAlpha</a></strong>(const float a)&lt;br&gt;Fifth order interpolation.</td></tr><tr><td><a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#function-withininterval">withinInterval</a></strong>(const float val, const float from, const float to)</td></tr></tbody></table><h2 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-label="Permalink to &quot;Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>constexpr int</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#variable-factor-nearly-equal">FACTOR_NEARLY_EQUAL</a></strong> &lt;br&gt;interval weight for comparison of nearly equal values</td></tr><tr><td>constexpr int</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#variable-factor-roughly-similar">FACTOR_ROUGHLY_SIMILAR</a></strong> &lt;br&gt;interval weight for comparison of very roughly similar values</td></tr><tr><td>constexpr int</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#variable-factor-similar">FACTOR_SIMILAR</a></strong> &lt;br&gt;interval weight for comparison of similar values</td></tr><tr><td>constexpr float</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#variable-flt-epsilon-10">FLT_EPSILON_10</a></strong> &lt;br&gt;1.192093 E-6</td></tr><tr><td>constexpr float</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#variable-flt-epsilon-100">FLT_EPSILON_100</a></strong> &lt;br&gt;1.192093 E-5</td></tr><tr><td>constexpr float</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#variable-flt-epsilon-1000">FLT_EPSILON_1000</a></strong> &lt;br&gt;1.192093 E-4</td></tr><tr><td>constexpr float</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceMath.html#variable-flt-epsilon-five-decimals">FLT_EPSILON_FIVE_DECIMALS</a></strong> &lt;br&gt;simple interval (1.0 +- epsilon)</td></tr></tbody></table><h2 id="detailed-description" tabindex="-1">Detailed Description <a class="header-anchor" href="#detailed-description" aria-label="Permalink to &quot;Detailed Description&quot;">​</a></h2><p>Approximate double comparison.</p><p><strong>Parameters</strong>:</p><ul><li><strong>a</strong> first double</li><li><strong>b</strong> second double</li><li><strong>factor</strong> a factor of epsilon</li></ul><p><strong>Return</strong>: true if the double values represent nearly the same value (precision interval is widened by <em>factor</em>)</p><h2 id="functions-documentation" tabindex="-1">Functions Documentation <a class="header-anchor" href="#functions-documentation" aria-label="Permalink to &quot;Functions Documentation&quot;">​</a></h2><h3 id="function-areelementssame" tabindex="-1">function areElementsSame <a class="header-anchor" href="#function-areelementssame" aria-label="Permalink to &quot;function areElementsSame&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">FORCE_INLINE </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">areElementsSame</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::vec3 vec</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">FORCE_INLINE </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">areElementsSame</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::vec3 vec</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-eq" tabindex="-1">function eq <a class="header-anchor" href="#function-eq" aria-label="Permalink to &quot;function eq&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">FORCE_INLINE </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">eq</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> lhs,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> rhs,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> epsilon</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">FORCE_INLINE </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">eq</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> lhs,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> rhs,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> epsilon</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Comparison of two floats using epsilon, useful for comparison to zero and to one.</p><p><strong>Parameters</strong>:</p><ul><li><strong>lhs</strong> First value</li><li><strong>rhs</strong> Second value</li><li><strong>epsilon</strong> interval size - roughly defining the number of decimal places</li></ul><p><strong>Return</strong>: epsilon comparison</p><h3 id="function-eq-1" tabindex="-1">function eq <a class="header-anchor" href="#function-eq-1" aria-label="Permalink to &quot;function eq&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">FORCE_INLINE </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">eq</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> lhs,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> rhs,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> factor </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">FACTOR_SIMILAR</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">FORCE_INLINE </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">eq</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> lhs,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> rhs,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> factor </span><span style="color:#D73A49;">=</span><span style="color:#24292E;">FACTOR_SIMILAR</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Comparison of two floats using factor * difference to nextafter() value, useful for comparison of two floats of unknown value.</p><p><strong>Parameters</strong>:</p><ul><li><strong>lhs</strong> First value</li><li><strong>rhs</strong> Second value</li><li><strong>factor</strong> multiplies the distance to the nextafter() value used as a size of comparison interval</li></ul><p><strong>Return</strong>: factor based comparison</p><h3 id="function-eq-2" tabindex="-1">function eq <a class="header-anchor" href="#function-eq-2" aria-label="Permalink to &quot;function eq&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">FORCE_INLINE </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">eq</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::mat4 </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> lhs,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::mat4 </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> rhs,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> epsilon</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">FORCE_INLINE </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">eq</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::mat4 </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> lhs,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::mat4 </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> rhs,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> epsilon</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-eq-3" tabindex="-1">function eq <a class="header-anchor" href="#function-eq-3" aria-label="Permalink to &quot;function eq&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">FORCE_INLINE </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">eq</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::mat4 </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> lhs,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::mat4 </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> rhs,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> factor </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">FACTOR_SIMILAR</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">FORCE_INLINE </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">eq</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::mat4 </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> lhs,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::mat4 </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> rhs,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> factor </span><span style="color:#D73A49;">=</span><span style="color:#24292E;">FACTOR_SIMILAR</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-eq-4" tabindex="-1">function eq <a class="header-anchor" href="#function-eq-4" aria-label="Permalink to &quot;function eq&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">FORCE_INLINE </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">eq</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::quat </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> lhs,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::quat </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> rhs,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> factor </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">FACTOR_SIMILAR</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">FORCE_INLINE </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">eq</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::quat </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> lhs,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::quat </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> rhs,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> factor </span><span style="color:#D73A49;">=</span><span style="color:#24292E;">FACTOR_SIMILAR</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-eq-5" tabindex="-1">function eq <a class="header-anchor" href="#function-eq-5" aria-label="Permalink to &quot;function eq&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">FORCE_INLINE </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">eq</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::vec3 </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> lhs,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::vec3 </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> rhs,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> factor </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">FACTOR_SIMILAR</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">FORCE_INLINE </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">eq</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::vec3 </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> lhs,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::vec3 </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> rhs,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> factor </span><span style="color:#D73A49;">=</span><span style="color:#24292E;">FACTOR_SIMILAR</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-eq-6" tabindex="-1">function eq <a class="header-anchor" href="#function-eq-6" aria-label="Permalink to &quot;function eq&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">FORCE_INLINE </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">eq</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::vec4 </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> lhs,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::vec4 </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> rhs,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> factor </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">FACTOR_SIMILAR</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">FORCE_INLINE </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">eq</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::vec4 </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> lhs,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::vec4 </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> rhs,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> factor </span><span style="color:#D73A49;">=</span><span style="color:#24292E;">FACTOR_SIMILAR</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-eqtoone" tabindex="-1">function eqToOne <a class="header-anchor" href="#function-eqtoone" aria-label="Permalink to &quot;function eqToOne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">FORCE_INLINE </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">eqToOne</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> value,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> epsilon </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">FLT_EPSILON_FIVE_DECIMALS</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">FORCE_INLINE </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">eqToOne</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> value,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> epsilon </span><span style="color:#D73A49;">=</span><span style="color:#24292E;">FLT_EPSILON_FIVE_DECIMALS</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-eqtozero" tabindex="-1">function eqToZero <a class="header-anchor" href="#function-eqtozero" aria-label="Permalink to &quot;function eqToZero&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">FORCE_INLINE </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">eqToZero</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> value,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> epsilon </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">FLT_EPSILON_FIVE_DECIMALS</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">FORCE_INLINE </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">eqToZero</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> value,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> epsilon </span><span style="color:#D73A49;">=</span><span style="color:#24292E;">FLT_EPSILON_FIVE_DECIMALS</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-isnormalized" tabindex="-1">function isNormalized <a class="header-anchor" href="#function-isnormalized" aria-label="Permalink to &quot;function isNormalized&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">template</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">typename</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> &gt;</span></span>
<span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isNormalized</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">val</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">template</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">typename</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> &gt;</span></span>
<span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isNormalized</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">val</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-lerp" tabindex="-1">function lerp <a class="header-anchor" href="#function-lerp" aria-label="Permalink to &quot;function lerp&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">mat4</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lerp</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">mat4</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">lhs</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">mat4</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">rhs</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">alpha</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">useQuat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">mat4</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lerp</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">mat4</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">lhs</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">mat4</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">rhs</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">alpha</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">useQuat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Linear interpolation between two 4x4 matrices <code>lhs</code> and <code>rhs</code> including translation columns.</p><p>Function depends on the parameter <em>useQuat:</em></p><ul><li>true - A correct interpolation of rotational matrices using quaternions</li><li>false - Incorrect interpolation, just for teaching purposes (how not to do it). lhsthe first matrix</li></ul><p>rhsthe second matrix</p><p>alphainterpolation parameter - must be from interval (0..1) interpolation parameter - must be from interval (0..1)</p><p>useQuatuse quaternion interpolation, if true</p><p>linear interpolation of two matrices vectors [wrong for useQuat == false!]</p><h3 id="function-lerp-1" tabindex="-1">function lerp <a class="header-anchor" href="#function-lerp-1" aria-label="Permalink to &quot;function lerp&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vec3</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lerp</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vec3</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vec3</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">b</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">alpha</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vec3</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lerp</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vec3</span><span style="color:#24292E;"> </span><span style="color:#E36209;">a</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vec3</span><span style="color:#24292E;"> </span><span style="color:#E36209;">b</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">alpha</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Linear interpolation between two vectors vec3 <em>a</em> and <em>b</em>.</p><p><strong>Parameters</strong>:</p><ul><li><strong>a</strong></li><li><strong>b</strong></li><li><strong>alpha</strong> interpolation parameter - must be from interval (0..1)</li></ul><p><strong>Return</strong>: linear interpolation of two vec3 vectors</p><h3 id="function-lerp-2" tabindex="-1">function lerp <a class="header-anchor" href="#function-lerp-2" aria-label="Permalink to &quot;function lerp&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vec4</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lerp</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vec4</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vec4</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">b</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">alpha</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vec4</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lerp</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vec4</span><span style="color:#24292E;"> </span><span style="color:#E36209;">a</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vec4</span><span style="color:#24292E;"> </span><span style="color:#E36209;">b</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">alpha</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Linear interpolation between two vectors vec4 <em>a</em> and <em>b</em>.</p><p><strong>Parameters</strong>:</p><ul><li><strong>a</strong> the first vector</li><li><strong>b</strong> the second vector</li><li><strong>alpha</strong> interpolation parameter - must be from interval (0..1)</li></ul><p><strong>Return</strong>: linear interpolation of two vec4 vectors</p><h3 id="function-prefixsum" tabindex="-1">function prefixSum <a class="header-anchor" href="#function-prefixsum" aria-label="Permalink to &quot;function prefixSum&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">prefixSum</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vector</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">arr</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">prefixSum</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vector</span><span style="color:#24292E;">&lt; </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> &gt; </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">arr</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-randomf" tabindex="-1">function randomf <a class="header-anchor" href="#function-randomf" aria-label="Permalink to &quot;function randomf&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">randomf</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">randomf</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Random float from interval 0 .</p><p><strong>Return</strong>: random float</p><p>. 0.999</p><h3 id="function-randomfhalf" tabindex="-1">function randomfHalf <a class="header-anchor" href="#function-randomfhalf" aria-label="Permalink to &quot;function randomfHalf&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">randomfHalf</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">randomfHalf</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Random float from interval -0.5 .</p><p><strong>Return</strong>: random float</p><p>. +0.499</p><h3 id="function-randomi" tabindex="-1">function randomi <a class="header-anchor" href="#function-randomi" aria-label="Permalink to &quot;function randomi&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">randomi</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">downIncluded</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">topNotInclude</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">randomi</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">downIncluded</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">topNotInclude</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Random integer from interval <em>downIncluded</em> .</p><p><strong>Parameters</strong>:</p><ul><li><strong>downIncluded</strong> [min generated value</li><li><strong>topNotInclude</strong> max) generated value</li></ul><p><strong>Return</strong>: Random integer</p><p>. <em>topNotInclude</em></p><h3 id="function-randomi-1" tabindex="-1">function randomi <a class="header-anchor" href="#function-randomi-1" aria-label="Permalink to &quot;function randomi&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">randomi</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">topNotInclude</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">randomi</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">topNotInclude</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Random integer from interval 0..<em>topNotInclude</em>.</p><p><strong>Parameters</strong>:</p><ul><li><strong>topNotInclude</strong> maximum value of the interval</li></ul><p><strong>Return</strong>: Random integer</p><h3 id="function-randomvec" tabindex="-1">function randomVec <a class="header-anchor" href="#function-randomvec" aria-label="Permalink to &quot;function randomVec&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vec3</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">randomVec</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vec3</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">randomVec</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-range" tabindex="-1">function range <a class="header-anchor" href="#function-range" aria-label="Permalink to &quot;function range&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">range</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">low1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">high1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">low2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">high2</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">range</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">value</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">low1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">high1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">low2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">high2</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-smoothalpha" tabindex="-1">function smoothAlpha <a class="header-anchor" href="#function-smoothalpha" aria-label="Permalink to &quot;function smoothAlpha&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">smoothAlpha</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">a</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">smoothAlpha</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">a</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Fifth order interpolation.</p><p><strong>Parameters</strong>:</p><ul><li><strong>a</strong> alpha</li></ul><p><strong>Return</strong>: smoothed alpha</p><h3 id="function-withininterval" tabindex="-1">function withinInterval <a class="header-anchor" href="#function-withininterval" aria-label="Permalink to &quot;function withinInterval&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">FORCE_INLINE </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">withinInterval</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> val,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> from,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> to</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">FORCE_INLINE </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">withinInterval</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> val,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> from,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> to</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="attributes-documentation" tabindex="-1">Attributes Documentation <a class="header-anchor" href="#attributes-documentation" aria-label="Permalink to &quot;Attributes Documentation&quot;">​</a></h2><h3 id="variable-factor-nearly-equal" tabindex="-1">variable FACTOR_NEARLY_EQUAL <a class="header-anchor" href="#variable-factor-nearly-equal" aria-label="Permalink to &quot;variable FACTOR_NEARLY_EQUAL&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> FACTOR_NEARLY_EQUAL </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">01</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> FACTOR_NEARLY_EQUAL </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">01</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">;</span></span></code></pre></div><p>interval weight for comparison of nearly equal values</p><h3 id="variable-factor-roughly-similar" tabindex="-1">variable FACTOR_ROUGHLY_SIMILAR <a class="header-anchor" href="#variable-factor-roughly-similar" aria-label="Permalink to &quot;variable FACTOR_ROUGHLY_SIMILAR&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> FACTOR_ROUGHLY_SIMILAR </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">01</span></span>
<span class="line"><span style="color:#E1E4E8;">                                              </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">14</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> FACTOR_ROUGHLY_SIMILAR </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">01</span></span>
<span class="line"><span style="color:#24292E;">                                              </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">14</span><span style="color:#24292E;">;</span></span></code></pre></div><p>interval weight for comparison of very roughly similar values</p><h3 id="variable-factor-similar" tabindex="-1">variable FACTOR_SIMILAR <a class="header-anchor" href="#variable-factor-similar" aria-label="Permalink to &quot;variable FACTOR_SIMILAR&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> FACTOR_SIMILAR </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">01</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> FACTOR_SIMILAR </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">01</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">;</span></span></code></pre></div><p>interval weight for comparison of similar values</p><h3 id="variable-flt-epsilon-10" tabindex="-1">variable FLT_EPSILON_10 <a class="header-anchor" href="#variable-flt-epsilon-10" aria-label="Permalink to &quot;variable FLT_EPSILON_10&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> FLT_EPSILON_10 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10.0</span><span style="color:#F97583;">f</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> FLT_EPSILON;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> FLT_EPSILON_10 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10.0</span><span style="color:#D73A49;">f</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> FLT_EPSILON;</span></span></code></pre></div><p>1.192093 E-6</p><h3 id="variable-flt-epsilon-100" tabindex="-1">variable FLT_EPSILON_100 <a class="header-anchor" href="#variable-flt-epsilon-100" aria-label="Permalink to &quot;variable FLT_EPSILON_100&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> FLT_EPSILON_100 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100.0</span><span style="color:#F97583;">f</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> FLT_EPSILON;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> FLT_EPSILON_100 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100.0</span><span style="color:#D73A49;">f</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> FLT_EPSILON;</span></span></code></pre></div><p>1.192093 E-5</p><h3 id="variable-flt-epsilon-1000" tabindex="-1">variable FLT_EPSILON_1000 <a class="header-anchor" href="#variable-flt-epsilon-1000" aria-label="Permalink to &quot;variable FLT_EPSILON_1000&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> FLT_EPSILON_1000 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000.0</span><span style="color:#F97583;">f</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> FLT_EPSILON;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> FLT_EPSILON_1000 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000.0</span><span style="color:#D73A49;">f</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> FLT_EPSILON;</span></span></code></pre></div><p>1.192093 E-4</p><h3 id="variable-flt-epsilon-five-decimals" tabindex="-1">variable FLT_EPSILON_FIVE_DECIMALS <a class="header-anchor" href="#variable-flt-epsilon-five-decimals" aria-label="Permalink to &quot;variable FLT_EPSILON_FIVE_DECIMALS&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> FLT_EPSILON_FIVE_DECIMALS </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.00001</span><span style="color:#F97583;">f</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> FLT_EPSILON_FIVE_DECIMALS </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.00001</span><span style="color:#D73A49;">f</span><span style="color:#24292E;">;</span></span></code></pre></div><p>simple interval (1.0 +- epsilon)</p><hr><p>Updated on 2024-03-16 at 19:15:01 +0000</p>`,124),e=[p];function t(c,r,E,i,y,d){return a(),n("div",null,e)}const m=s(o,[["render",t]]);export{f as __pageData,m as default};
