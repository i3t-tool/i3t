import{_ as a,o as e,c as s,Q as t}from"./chunks/framework.0f749972.js";const m=JSON.parse('{"title":"GUIImage","description":"","frontmatter":{"title":"GUIImage","summary":"A class for holding an image texture id with properties of the image."},"headers":[],"relativePath":"cpp-api-reference/classes/structGUIImage.md","filePath":"cpp-api-reference/classes/structGUIImage.md"}'),n={name:"cpp-api-reference/classes/structGUIImage.md"},p=t(`<h1 id="guiimage" tabindex="-1">GUIImage <a class="header-anchor" href="#guiimage" aria-label="Permalink to &quot;GUIImage&quot;">​</a></h1><p>A class for holding an image texture id with properties of the image. <a href="#detailed-description">More...</a></p><p><code>#include &quot;Tutorial/GUIImage.h&quot;</code></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/structGUIImage.html#function-guiimage">GUIImage</a></strong>(const <a href="/cpp-api-reference/classes/structGUIImage.html">GUIImage</a> &amp; other) =delete&lt;br&gt;Copy constructor is NOT ALLOWED - use pointers (preferably smart) if you want to have the image referable from multiple places.</td></tr><tr><td></td><td><strong><a href="/cpp-api-reference/classes/structGUIImage.html#function-guiimage">GUIImage</a></strong>(const std::string &amp; path)&lt;br&gt;Constructor which loads the specified image into OpenGl memory.</td></tr><tr><td></td><td><strong><a href="/cpp-api-reference/classes/structGUIImage.html#function-guiimage">GUIImage</a></strong>(<a href="/cpp-api-reference/classes/structGUIImage.html">GUIImage</a> &amp;&amp; other)&lt;br&gt;Move constructor which makes sure the previous instance doesn&#39;t have the GLuint texture id, which would then be deleted with the destructor.</td></tr><tr><td></td><td><strong><a href="/cpp-api-reference/classes/structGUIImage.html#function-~guiimage">~GUIImage</a></strong>()&lt;br&gt;Destructor which deletes the image from OpenGL memory.</td></tr></tbody></table><h2 id="public-attributes" tabindex="-1">Public Attributes <a class="header-anchor" href="#public-attributes" aria-label="Permalink to &quot;Public Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>int</td><td><strong><a href="/cpp-api-reference/classes/structGUIImage.html#variable-m-height">m_height</a></strong></td></tr><tr><td>std::string</td><td><strong><a href="/cpp-api-reference/classes/structGUIImage.html#variable-m-path">m_path</a></strong></td></tr><tr><td>unsigned int</td><td><strong><a href="/cpp-api-reference/classes/structGUIImage.html#variable-m-texid">m_texID</a></strong></td></tr><tr><td>int</td><td><strong><a href="/cpp-api-reference/classes/structGUIImage.html#variable-m-width">m_width</a></strong></td></tr></tbody></table><h2 id="detailed-description" tabindex="-1">Detailed Description <a class="header-anchor" href="#detailed-description" aria-label="Permalink to &quot;Detailed Description&quot;">​</a></h2><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">struct</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GUIImage</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">struct</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GUIImage</span><span style="color:#24292E;">;</span></span></code></pre></div><p>A class for holding an image texture id with properties of the image.</p><p>Goes by the RAII standard by loading the image at start and deleting it at its end.</p><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-guiimage" tabindex="-1">function GUIImage <a class="header-anchor" href="#function-guiimage" aria-label="Permalink to &quot;function GUIImage&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">GUIImage</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> GUIImage </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> other</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=delete</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">GUIImage</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> GUIImage </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> other</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">=delete</span></span></code></pre></div><p>Copy constructor is NOT ALLOWED - use pointers (preferably smart) if you want to have the image referable from multiple places.</p><h3 id="function-guiimage-1" tabindex="-1">function GUIImage <a class="header-anchor" href="#function-guiimage-1" aria-label="Permalink to &quot;function GUIImage&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">GUIImage</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> path</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">GUIImage</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> path</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Constructor which loads the specified image into OpenGl memory.</p><p><strong>Parameters</strong>:</p><ul><li><strong>path</strong> Whole path to the image file to be loaded</li></ul><p>WARNING: Throws an exception when file not found or texture loading fails!</p><h3 id="function-guiimage-2" tabindex="-1">function GUIImage <a class="header-anchor" href="#function-guiimage-2" aria-label="Permalink to &quot;function GUIImage&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">GUIImage</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    GUIImage </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> other</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">GUIImage</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    GUIImage </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> other</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Move constructor which makes sure the previous instance doesn&#39;t have the GLuint texture id, which would then be deleted with the destructor.</p><h3 id="function-guiimage-3" tabindex="-1">function ~GUIImage <a class="header-anchor" href="#function-guiimage-3" aria-label="Permalink to &quot;function ~GUIImage&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">~</span><span style="color:#B392F0;">GUIImage</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">~</span><span style="color:#6F42C1;">GUIImage</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Destructor which deletes the image from OpenGL memory.</p><h2 id="public-attributes-documentation" tabindex="-1">Public Attributes Documentation <a class="header-anchor" href="#public-attributes-documentation" aria-label="Permalink to &quot;Public Attributes Documentation&quot;">​</a></h2><h3 id="variable-m-height" tabindex="-1">variable m_height <a class="header-anchor" href="#variable-m-height" aria-label="Permalink to &quot;variable m_height&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> m_height;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> m_height;</span></span></code></pre></div><h3 id="variable-m-path" tabindex="-1">variable m_path <a class="header-anchor" href="#variable-m-path" aria-label="Permalink to &quot;variable m_path&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string m_path;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string m_path;</span></span></code></pre></div><h3 id="variable-m-texid" tabindex="-1">variable m_texID <a class="header-anchor" href="#variable-m-texid" aria-label="Permalink to &quot;variable m_texID&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> m_texID;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> m_texID;</span></span></code></pre></div><h3 id="variable-m-width" tabindex="-1">variable m_width <a class="header-anchor" href="#variable-m-width" aria-label="Permalink to &quot;variable m_width&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> m_width;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> m_width;</span></span></code></pre></div><hr><p>Updated on 2025-01-07 at 09:46:55 +0000</p>`,38),o=[p];function l(i,c,r,d,h,u){return e(),s("div",null,o)}const b=a(n,[["render",l]]);export{m as __pageData,b as default};
