import{_ as a,o as s,c as e,Q as n}from"./chunks/framework.0f749972.js";const g=JSON.parse('{"title":"IWindow","description":"","frontmatter":{"title":"IWindow","summary":"ImGui GUIWindow abstract class."},"headers":[],"relativePath":"cpp-api-reference/classes/classIWindow.md","filePath":"cpp-api-reference/classes/classIWindow.md"}'),o={name:"cpp-api-reference/classes/classIWindow.md"},t=n(`<h1 id="iwindow" tabindex="-1">IWindow <a class="header-anchor" href="#iwindow" aria-label="Permalink to &quot;IWindow&quot;">​</a></h1><p>ImGui <a href="./.html">GUI</a><a href="/cpp-api-reference/classes/classWindow.html">Window</a> abstract class. <a href="#detailed-description">More...</a></p><p><code>#include &quot;GUI/Elements/IWindow.h&quot;</code></p><p>Inherits from std::enable_shared_from_this&lt; IWindow &gt;</p><p>Inherited by <a href="/cpp-api-reference/classes/classAboutWindow.html">AboutWindow</a>, <a href="/cpp-api-reference/classes/classDescriptionDialog.html">DescriptionDialog</a>, <a href="/cpp-api-reference/classes/classImportedModelsDialog.html">ImportedModelsDialog</a>, <a href="/cpp-api-reference/classes/classLogWindow.html">LogWindow</a>, <a href="/cpp-api-reference/classes/classModalWindow.html">ModalWindow</a>, <a href="/cpp-api-reference/classes/classSetupDialog.html">SetupDialog</a>, <a href="/cpp-api-reference/classes/classStartWindow.html">StartWindow</a>, <a href="/cpp-api-reference/classes/classTutorialWindow.html">TutorialWindow</a>, <a href="/cpp-api-reference/classes/classUI_1_1Console.html">UI::Console</a>, <a href="/cpp-api-reference/classes/classUI_1_1StyleEditor.html">UI::StyleEditor</a>, <a href="/cpp-api-reference/classes/classUI_1_1ViewportWindow.html">UI::ViewportWindow</a>, <a href="/cpp-api-reference/classes/classWorkspaceWindow.html">WorkspaceWindow</a></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#function-iwindow">IWindow</a></strong>(std::string title, bool show =false)</td></tr><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#function-~iwindow">~IWindow</a></strong>() =default</td></tr><tr><td>virtual const char *</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#function-getid">getID</a></strong>() const =0</td></tr><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-wptr">WPtr</a>&lt; <a href="/cpp-api-reference/classes/classInputController.html">InputController</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#function-getinput">getInput</a></strong>()&lt;br&gt;Returns window input controller.</td></tr><tr><td>const char *</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#function-getname">getName</a></strong>()</td></tr><tr><td>bool *</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#function-getshowptr">getShowPtr</a></strong>()</td></tr><tr><td>const std::string &amp;</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#function-gettitle">getTitle</a></strong>() const</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#function-hide">hide</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#function-isvisible">isVisible</a></strong>() const</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#function-render">render</a></strong>() =0</td></tr><tr><td>const void</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#function-settitle">setTitle</a></strong>(std::string title)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#function-show">show</a></strong>()</td></tr></tbody></table><h2 id="protected-functions" tabindex="-1">Protected Functions <a class="header-anchor" href="#protected-functions" aria-label="Permalink to &quot;Protected Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#function-updatewindowinfo">updateWindowInfo</a></strong>()&lt;br&gt;Collect information about the current window.</td></tr></tbody></table><h2 id="public-attributes" tabindex="-1">Public Attributes <a class="header-anchor" href="#public-attributes" aria-label="Permalink to &quot;Public Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#variable-m-autofocus">m_autoFocus</a></strong> &lt;br&gt;When true the window will get focus immediately upon hovering over it.</td></tr><tr><td>std::string</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#variable-m-title">m_title</a></strong> &lt;br&gt;Visible window title.</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#variable-m-windowinfoupdated">m_windowInfoUpdated</a></strong> &lt;br&gt;A flag indicating the <a href="./.html">updateWindowInfo()</a> method was called.</td></tr><tr><td><a href="/cpp-api-reference/classes/classWindowManager.html">WindowManager</a> *</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#variable-m-windowmanager">m_windowManager</a></strong> &lt;br&gt;Weak reference to a <a href="/cpp-api-reference/classes/classWindowManager.html">WindowManager</a> set when this window is added to it.</td></tr><tr><td>glm::vec2</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#variable-m-windowmax">m_windowMax</a></strong> &lt;br&gt;Bottom right corner of the window.</td></tr><tr><td>glm::vec2</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#variable-m-windowmin">m_windowMin</a></strong> &lt;br&gt;Top left corner of the window, same as m_windowPos (separate variable for clarity)</td></tr><tr><td>glm::vec2</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#variable-m-windowpos">m_windowPos</a></strong> &lt;br&gt;Top-left corner of the window in screen coordinates.</td></tr><tr><td>glm::ivec2</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#variable-m-windowsize">m_windowSize</a></strong> &lt;br&gt;<a href="/cpp-api-reference/classes/classWindow.html">Window</a> width and height dimensions.</td></tr></tbody></table><h2 id="protected-attributes" tabindex="-1">Protected Attributes <a class="header-anchor" href="#protected-attributes" aria-label="Permalink to &quot;Protected Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classInputController.html">InputController</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#variable-m-input">m_input</a></strong></td></tr><tr><td>std::string</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#variable-m-name">m_name</a></strong> &lt;br&gt;Full ImGui window identifier.</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#variable-m-nameneedsupdate">m_nameNeedsUpdate</a></strong> &lt;br&gt;Workaround to avoid setting the name in the constructor (cannot call getID there)</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#variable-m-show">m_show</a></strong></td></tr></tbody></table><h2 id="friends" tabindex="-1">Friends <a class="header-anchor" href="#friends" aria-label="Permalink to &quot;Friends&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classIWindow.html#friend-windowmanager">WindowManager</a></strong></td></tr></tbody></table><h2 id="detailed-description" tabindex="-1">Detailed Description <a class="header-anchor" href="#detailed-description" aria-label="Permalink to &quot;Detailed Description&quot;">​</a></h2><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IWindow</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IWindow</span><span style="color:#24292E;">;</span></span></code></pre></div><p>ImGui <a href="./.html">GUI</a><a href="/cpp-api-reference/classes/classWindow.html">Window</a> abstract class.</p><p><strong>See</strong>: <a href="/cpp-api-reference/classes/classWindowManager.html">WindowManager</a> for lifecycle information.</p><p>Every window should call its <a href="/cpp-api-reference/classes/classIWindow.html#function-updatewindowinfo">IWindow::updateWindowInfo()</a> method after ImGui::Begin() call.</p><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-iwindow" tabindex="-1">function IWindow <a class="header-anchor" href="#function-iwindow" aria-label="Permalink to &quot;function IWindow&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">explicit</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IWindow</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string title,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> show </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">explicit</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IWindow</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string title,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> show </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-iwindow-1" tabindex="-1">function ~IWindow <a class="header-anchor" href="#function-iwindow-1" aria-label="Permalink to &quot;function ~IWindow&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">~</span><span style="color:#B392F0;">IWindow</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">=default</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">~</span><span style="color:#6F42C1;">IWindow</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">=default</span></span></code></pre></div><p><strong>Precondition</strong>: <a href="/cpp-api-reference/classes/classWindow.html">Window</a> cannot be destroyed at runtime. It may cause crash.</p><h3 id="function-getid" tabindex="-1">function getID <a class="header-anchor" href="#function-getid" aria-label="Permalink to &quot;function getID&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getID</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getID</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classModalWindow.html#function-getid">ModalWindow::getID</a></p><h3 id="function-getinput" tabindex="-1">function getInput <a class="header-anchor" href="#function-getinput" aria-label="Permalink to &quot;function getInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WPtr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">InputController</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">getInput</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WPtr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">InputController</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">getInput</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Returns window input controller.</p><h3 id="function-getname" tabindex="-1">function getName <a class="header-anchor" href="#function-getname" aria-label="Permalink to &quot;function getName&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Return</strong>: ImGui window name.</p><h3 id="function-getshowptr" tabindex="-1">function getShowPtr <a class="header-anchor" href="#function-getshowptr" aria-label="Permalink to &quot;function getShowPtr&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getShowPtr</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getShowPtr</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-gettitle" tabindex="-1">function getTitle <a class="header-anchor" href="#function-gettitle" aria-label="Permalink to &quot;function getTitle&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getTitle</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getTitle</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-hide" tabindex="-1">function hide <a class="header-anchor" href="#function-hide" aria-label="Permalink to &quot;function hide&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hide</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hide</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-isvisible" tabindex="-1">function isVisible <a class="header-anchor" href="#function-isvisible" aria-label="Permalink to &quot;function isVisible&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isVisible</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isVisible</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-render" tabindex="-1">function render <a class="header-anchor" href="#function-render" aria-label="Permalink to &quot;function render&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">render</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">render</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspaceWindow.html#function-render">WorkspaceWindow::render</a>, <a href="/cpp-api-reference/classes/classDescriptionDialog.html#function-render">DescriptionDialog::render</a>, <a href="/cpp-api-reference/classes/classImportedModelsDialog.html#function-render">ImportedModelsDialog::render</a>, <a href="/cpp-api-reference/classes/classSetupDialog.html#function-render">SetupDialog::render</a>, <a href="/cpp-api-reference/classes/classModalWindow.html#function-render">ModalWindow::render</a>, <a href="/cpp-api-reference/classes/classAboutWindow.html#function-render">AboutWindow::render</a>, <a href="/cpp-api-reference/classes/classUI_1_1Console.html#function-render">UI::Console::render</a>, <a href="/cpp-api-reference/classes/classLogWindow.html#function-render">LogWindow::render</a>, <a href="/cpp-api-reference/classes/classStartWindow.html#function-render">StartWindow::render</a>, <a href="/cpp-api-reference/classes/classUI_1_1StyleEditor.html#function-render">UI::StyleEditor::render</a>, <a href="/cpp-api-reference/classes/classTutorialWindow.html#function-render">TutorialWindow::render</a>, <a href="/cpp-api-reference/classes/classUI_1_1ViewportWindow.html#function-render">UI::ViewportWindow::render</a></p><h3 id="function-settitle" tabindex="-1">function setTitle <a class="header-anchor" href="#function-settitle" aria-label="Permalink to &quot;function setTitle&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setTitle</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">title</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setTitle</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;"> </span><span style="color:#E36209;">title</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-show" tabindex="-1">function show <a class="header-anchor" href="#function-show" aria-label="Permalink to &quot;function show&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">()</span></span></code></pre></div><h2 id="protected-functions-documentation" tabindex="-1">Protected Functions Documentation <a class="header-anchor" href="#protected-functions-documentation" aria-label="Permalink to &quot;Protected Functions Documentation&quot;">​</a></h2><h3 id="function-updatewindowinfo" tabindex="-1">function updateWindowInfo <a class="header-anchor" href="#function-updatewindowinfo" aria-label="Permalink to &quot;function updateWindowInfo&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateWindowInfo</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateWindowInfo</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Collect information about the current window.</p><p>Should be called right after ImGui&#39;s Begin() function to store and supply window&#39;s screen position and size to any code being called until another window starts being constructed. If this call is omitted after beginning a window anything querying the <a href="/cpp-api-reference/classes/classWindowManager.html">WindowManager</a> for window position and dimensions may receive invalid information.</p><h2 id="public-attributes-documentation" tabindex="-1">Public Attributes Documentation <a class="header-anchor" href="#public-attributes-documentation" aria-label="Permalink to &quot;Public Attributes Documentation&quot;">​</a></h2><h3 id="variable-m-autofocus" tabindex="-1">variable m_autoFocus <a class="header-anchor" href="#variable-m-autofocus" aria-label="Permalink to &quot;variable m_autoFocus&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_autoFocus {</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_autoFocus {</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">};</span></span></code></pre></div><p>When true the window will get focus immediately upon hovering over it.</p><h3 id="variable-m-title" tabindex="-1">variable m_title <a class="header-anchor" href="#variable-m-title" aria-label="Permalink to &quot;variable m_title&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string m_title;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string m_title;</span></span></code></pre></div><p>Visible window title.</p><h3 id="variable-m-windowinfoupdated" tabindex="-1">variable m_windowInfoUpdated <a class="header-anchor" href="#variable-m-windowinfoupdated" aria-label="Permalink to &quot;variable m_windowInfoUpdated&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_windowInfoUpdated {</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_windowInfoUpdated {</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">};</span></span></code></pre></div><p>A flag indicating the <a href="./.html">updateWindowInfo()</a> method was called.</p><h3 id="variable-m-windowmanager" tabindex="-1">variable m_windowManager <a class="header-anchor" href="#variable-m-windowmanager" aria-label="Permalink to &quot;variable m_windowManager&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">WindowManager </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> m_windowManager {</span><span style="color:#79B8FF;">nullptr</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">WindowManager </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> m_windowManager {</span><span style="color:#005CC5;">nullptr</span><span style="color:#24292E;">};</span></span></code></pre></div><p>Weak reference to a <a href="/cpp-api-reference/classes/classWindowManager.html">WindowManager</a> set when this window is added to it.</p><h3 id="variable-m-windowmax" tabindex="-1">variable m_windowMax <a class="header-anchor" href="#variable-m-windowmax" aria-label="Permalink to &quot;variable m_windowMax&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::vec2 m_windowMax;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::vec2 m_windowMax;</span></span></code></pre></div><p>Bottom right corner of the window.</p><h3 id="variable-m-windowmin" tabindex="-1">variable m_windowMin <a class="header-anchor" href="#variable-m-windowmin" aria-label="Permalink to &quot;variable m_windowMin&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::vec2 m_windowMin;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::vec2 m_windowMin;</span></span></code></pre></div><p>Top left corner of the window, same as m_windowPos (separate variable for clarity)</p><h3 id="variable-m-windowpos" tabindex="-1">variable m_windowPos <a class="header-anchor" href="#variable-m-windowpos" aria-label="Permalink to &quot;variable m_windowPos&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::vec2 m_windowPos;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::vec2 m_windowPos;</span></span></code></pre></div><p>Top-left corner of the window in screen coordinates.</p><h3 id="variable-m-windowsize" tabindex="-1">variable m_windowSize <a class="header-anchor" href="#variable-m-windowsize" aria-label="Permalink to &quot;variable m_windowSize&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::ivec2 m_windowSize;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::ivec2 m_windowSize;</span></span></code></pre></div><p><a href="/cpp-api-reference/classes/classWindow.html">Window</a> width and height dimensions.</p><h2 id="protected-attributes-documentation" tabindex="-1">Protected Attributes Documentation <a class="header-anchor" href="#protected-attributes-documentation" aria-label="Permalink to &quot;Protected Attributes Documentation&quot;">​</a></h2><h3 id="variable-m-input" tabindex="-1">variable m_input <a class="header-anchor" href="#variable-m-input" aria-label="Permalink to &quot;variable m_input&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> InputController </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_input {</span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">make_shared</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">InputController</span><span style="color:#E1E4E8;">&gt;()};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> InputController </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_input {</span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">make_shared</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">InputController</span><span style="color:#24292E;">&gt;()};</span></span></code></pre></div><h3 id="variable-m-name" tabindex="-1">variable m_name <a class="header-anchor" href="#variable-m-name" aria-label="Permalink to &quot;variable m_name&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string m_name;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string m_name;</span></span></code></pre></div><p>Full ImGui window identifier.</p><h3 id="variable-m-nameneedsupdate" tabindex="-1">variable m_nameNeedsUpdate <a class="header-anchor" href="#variable-m-nameneedsupdate" aria-label="Permalink to &quot;variable m_nameNeedsUpdate&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_nameNeedsUpdate {</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_nameNeedsUpdate {</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">};</span></span></code></pre></div><p>Workaround to avoid setting the name in the constructor (cannot call getID there)</p><h3 id="variable-m-show" tabindex="-1">variable m_show <a class="header-anchor" href="#variable-m-show" aria-label="Permalink to &quot;variable m_show&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_show {</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_show {</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">};</span></span></code></pre></div><h2 id="friends-1" tabindex="-1">Friends <a class="header-anchor" href="#friends-1" aria-label="Permalink to &quot;Friends&quot;">​</a></h2><h3 id="friend-windowmanager" tabindex="-1">friend WindowManager <a class="header-anchor" href="#friend-windowmanager" aria-label="Permalink to &quot;friend WindowManager&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">friend</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WindowManager</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">WindowManager</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">friend</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WindowManager</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">WindowManager</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre></div><hr><p>Updated on 2024-10-16 at 16:44:50 +0000</p>`,96),l=[t];function p(r,c,i,d,h,u){return s(),e("div",null,l)}const m=a(o,[["render",p]]);export{g as __pageData,m as default};
