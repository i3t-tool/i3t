import{_ as a,o as s,c as e,Q as n}from"./chunks/framework.0f749972.js";const y=JSON.parse('{"title":"CommandDispatcher","description":"","frontmatter":{"title":"CommandDispatcher"},"headers":[],"relativePath":"cpp-api-reference/classes/classCommandDispatcher.md","filePath":"cpp-api-reference/classes/classCommandDispatcher.md"}'),o={name:"cpp-api-reference/classes/classCommandDispatcher.md"},t=n(`<h1 id="commanddispatcher" tabindex="-1">CommandDispatcher <a class="header-anchor" href="#commanddispatcher" aria-label="Permalink to &quot;CommandDispatcher&quot;">​</a></h1><p><code>#include &quot;Commands/Dispatcher.h&quot;</code></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td><a href="/cpp-api-reference/classes/classCommandDispatcher.html">CommandDispatcher</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCommandDispatcher.html#function-get">get</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCommandDispatcher.html#function-enqueuecommand">enqueueCommand</a></strong>(<a href="/cpp-api-reference/classes/classICommand.html">ICommand</a> * command)&lt;br&gt;<a href="/cpp-api-reference/classes/classCommandDispatcher.html">CommandDispatcher</a> takes ownership of the <code>command</code>.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCommandDispatcher.html#function-execute">execute</a></strong>()</td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-get" tabindex="-1">function get <a class="header-anchor" href="#function-get" aria-label="Permalink to &quot;function get&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CommandDispatcher</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CommandDispatcher</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-enqueuecommand" tabindex="-1">function enqueueCommand <a class="header-anchor" href="#function-enqueuecommand" aria-label="Permalink to &quot;function enqueueCommand&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">enqueueCommand</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">ICommand</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">command</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">enqueueCommand</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">ICommand</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">command</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p><a href="/cpp-api-reference/classes/classCommandDispatcher.html">CommandDispatcher</a> takes ownership of the <code>command</code>.</p><h3 id="function-execute" tabindex="-1">function execute <a class="header-anchor" href="#function-execute" aria-label="Permalink to &quot;function execute&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">execute</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">execute</span><span style="color:#24292E;">()</span></span></code></pre></div><hr><p>Updated on 2024-10-16 at 16:58:00 +0000</p>`,14),c=[t];function p(l,r,i,d,m,h){return s(),e("div",null,c)}const f=a(o,[["render",p]]);export{y as __pageData,f as default};
