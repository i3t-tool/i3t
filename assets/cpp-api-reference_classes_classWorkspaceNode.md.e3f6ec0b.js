import{_ as e,o as t,c as s,Q as n}from"./chunks/framework.0f749972.js";const b=JSON.parse('{"title":"WorkspaceNode","description":"","frontmatter":{"title":"WorkspaceNode"},"headers":[],"relativePath":"cpp-api-reference/classes/classWorkspaceNode.md","filePath":"cpp-api-reference/classes/classWorkspaceNode.md"}'),a={name:"cpp-api-reference/classes/classWorkspaceNode.md"},o=n(`<h1 id="workspacenode" tabindex="-1">WorkspaceNode <a class="header-anchor" href="#workspacenode" aria-label="Permalink to &quot;WorkspaceNode&quot;">​</a></h1><p><code>#include &quot;GUI/Elements/Nodes/WorkspaceElements.h&quot;</code></p><p>Inherits from <a href="/cpp-api-reference/classes/classdiwne_1_1node.html">DIWNE::Node</a>, <a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html">DIWNE::DiwneObject</a>, std::enable_shared_from_this&lt; DiwneObject &gt;</p><p>Inherited by <a href="/cpp-api-reference/classes/classworkspacenodewithcoredata.html">WorkspaceNodeWithCoreData</a></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#function-workspacenode">WorkspaceNode</a></strong>(<a href="/cpp-api-reference/classes/classdiwne_1_1diwne.html">DIWNE::Diwne</a> &amp; diwne, <a href="/cpp-api-reference/namespaces/namespacediwne.html#typedef-id">DIWNE::ID</a> id, std::string const topLabel =&quot;Header&quot;, std::string const middleLabel =&quot;Content&quot;)</td></tr><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#function-~workspacenode">~WorkspaceNode</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#function-beforecontent">beforeContent</a></strong>() override</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#function-bottomcontent">bottomContent</a></strong>() override</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#function-bypassfocusforinteractionaction">bypassFocusForInteractionAction</a></strong>() override</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#function-deleteaction">deleteAction</a></strong>() override</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#function-drawmenudelete">drawMenuDelete</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#function-getduplicatenode">getDuplicateNode</a></strong>() const</td></tr><tr><td>std::string</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#function-getmiddlelabel">getMiddleLabel</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#function-getremovefromworkspace">getRemoveFromWorkspace</a></strong>() const</td></tr><tr><td>std::string</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#function-gettoplabel">getTopLabel</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#function-leftcontent">leftContent</a></strong>() override</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#function-middlecontent">middleContent</a></strong>() override</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#function-popupcontent">popupContent</a></strong>()&lt;br&gt;Content of popup menu raise on this object.</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#function-rightcontent">rightContent</a></strong>() override</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#function-setduplicatenode">setDuplicateNode</a></strong>(bool value)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#function-setmiddlelabel">setMiddleLabel</a></strong>(std::string label)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#function-setremovefromworkspace">setRemoveFromWorkspace</a></strong>(bool value)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#function-settoplabel">setTopLabel</a></strong>(std::string label)</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#function-topcontent">topContent</a></strong>() override</td></tr></tbody></table><h2 id="public-attributes" tabindex="-1">Public Attributes <a class="header-anchor" href="#public-attributes" aria-label="Permalink to &quot;Public Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#variable-m-duplicatenode">m_duplicateNode</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#variable-m-removefromworkspacewindow">m_removeFromWorkspaceWindow</a></strong></td></tr></tbody></table><h2 id="protected-attributes" tabindex="-1">Protected Attributes <a class="header-anchor" href="#protected-attributes" aria-label="Permalink to &quot;Protected Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>std::string</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#variable-m-middlelabel">m_middleLabel</a></strong></td></tr><tr><td>std::string</td><td><strong><a href="/cpp-api-reference/classes/classworkspacenode.html#variable-m-toplabel">m_topLabel</a></strong></td></tr></tbody></table><h2 id="additional-inherited-members" tabindex="-1">Additional inherited members <a class="header-anchor" href="#additional-inherited-members" aria-label="Permalink to &quot;Additional inherited members&quot;">​</a></h2><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/classdiwne_1_1node.html">DIWNE::Node</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-node">Node</a></strong>(<a href="/cpp-api-reference/classes/classdiwne_1_1diwne.html">DIWNE::Diwne</a> &amp; diwne, <a href="/cpp-api-reference/namespaces/namespacediwne.html#typedef-id">DIWNE::ID</a> id, std::string const labelDiwne =&quot;DiwneNode&quot;)&lt;br&gt;Default constructor.</td></tr><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-~node">~Node</a></strong>()&lt;br&gt;Default destructor.</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-afterenddiwne">afterEndDiwne</a></strong>() override</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-allowdrawing">allowDrawing</a></strong>() override&lt;br&gt;Decision maker whether object should be drawn (not outside of window for example)</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-beforebegindiwne">beforeBeginDiwne</a></strong>() override</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-begin">begin</a></strong>() override</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-bottomcontentdiwne">bottomContentDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-content">content</a></strong>() override</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-deleteactiondiwne">deleteActionDiwne</a></strong>()</td></tr><tr><td>template &lt;typename T &amp;gt; &lt;br&gt;bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-drawnodediwne">drawNodeDiwne</a></strong>(<a href="/cpp-api-reference/namespaces/namespacediwne.html#enum-drawmodenodeposition">DrawModeNodePosition</a> nodePosMode =DrawModeNodePosition::OnItsPosition, <a href="/cpp-api-reference/namespaces/namespacediwne.html#enum-drawmode">DrawMode</a> drawMode =DrawMode::Interacting)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-end">end</a></strong>() override</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespacediwne.html#enum-diwneaction">DIWNE::DiwneAction</a></td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-getdragactiontype">getDragActionType</a></strong>() const</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespacediwne.html#enum-diwneaction">DIWNE::DiwneAction</a></td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-getholdactiontype">getHoldActionType</a></strong>() const</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespacediwne.html#typedef-id">DIWNE::ID</a> const</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-getid">getId</a></strong>() const</td></tr><tr><td>ImVec2</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-getnodepositiondiwne">getNodePositionDiwne</a></strong>() const</td></tr><tr><td>ImRect</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-getnoderectdiwne">getNodeRectDiwne</a></strong>() const</td></tr><tr><td>ImVec2</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-getnoderectsizediwne">getNodeRectSizeDiwne</a></strong>() const</td></tr><tr><td>virtual ImRect</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-getrectdiwne">getRectDiwne</a></strong>() const</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-getrender">getRender</a></strong>() const</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespacediwne.html#enum-diwneaction">DIWNE::DiwneAction</a></td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-gettouchactiontype">getTouchActionType</a></strong>() const</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-leftcontentdiwne">leftContentDiwne</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-middlecontentdiwne">middleContentDiwne</a></strong>()</td></tr><tr><td><a href="/cpp-api-reference/classes/classdiwne_1_1node.html">Node</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-operator=">operator=</a></strong>(const <a href="/cpp-api-reference/classes/classdiwne_1_1node.html">Node</a> &amp; other)&lt;br&gt;Assignment operator.</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-processdrag">processDrag</a></strong>() override</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-processselect">processSelect</a></strong>() override</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-processunselect">processUnselect</a></strong>() override</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-rightcontentdiwne">rightContentDiwne</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-setnodepositiondiwne">setNodePositionDiwne</a></strong>(ImVec2 const &amp; position)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-setrender">setRender</a></strong>(bool render)</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-setselected">setSelected</a></strong>(const bool selected) override</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-topcontentdiwne">topContentDiwne</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-translatenodepositiondiwne">translateNodePositionDiwne</a></strong>(ImVec2 const amount)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-updatesizes">updateSizes</a></strong>() override</td></tr></tbody></table><p><strong>Public Attributes inherited from <a href="/cpp-api-reference/classes/classdiwne_1_1node.html">DIWNE::Node</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#variable-m-drawanyway">m_drawAnyway</a></strong></td></tr></tbody></table><p><strong>Protected Attributes inherited from <a href="/cpp-api-reference/classes/classdiwne_1_1node.html">DIWNE::Node</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>ImRect</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#variable-m-bottomrectdiwne">m_bottomRectDiwne</a></strong></td></tr><tr><td>float</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#variable-m-centerdummyspace">m_centerDummySpace</a></strong> &lt;br&gt;Rectangle of parts of node in diwne.</td></tr><tr><td>ImRect</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#variable-m-leftrectdiwne">m_leftRectDiwne</a></strong></td></tr><tr><td>ImRect</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#variable-m-middlerectdiwne">m_middleRectDiwne</a></strong></td></tr><tr><td>ImVec2</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#variable-m-nodepositiondiwne">m_nodePositionDiwne</a></strong></td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespacediwne.html#enum-drawmodenodeposition">DrawModeNodePosition</a></td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#variable-m-nodeposmode">m_nodePosMode</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#variable-m-render">m_render</a></strong> &lt;br&gt;used to hide nodes in tutorial scenes (action &quot;toggleNodeWorkspaceVisibility&quot;)</td></tr><tr><td>ImRect</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#variable-m-rightrectdiwne">m_rightRectDiwne</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#variable-m-todelete">m_toDelete</a></strong> &lt;br&gt;Set to true after node delete action.</td></tr><tr><td>ImRect</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1node.html#variable-m-toprectdiwne">m_topRectDiwne</a></strong></td></tr></tbody></table><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html">DIWNE::DiwneObject</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-diwneobject">DiwneObject</a></strong>(<a href="/cpp-api-reference/classes/classdiwne_1_1diwne.html">DIWNE::Diwne</a> &amp; diwne, <a href="/cpp-api-reference/namespaces/namespacediwne.html#typedef-id">DIWNE::ID</a> id, std::string const labelDiwne)&lt;br&gt;Constructor.</td></tr><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-~diwneobject">~DiwneObject</a></strong>() =default</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-aftercontent">afterContent</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-aftercontentdiwne">afterContentDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-afterend">afterEnd</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-afterenddiwne">afterEndDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-allowdrawing">allowDrawing</a></strong>()&lt;br&gt;Decision maker whether object should be drawn (not outside of window for example)</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-allowinteraction">allowInteraction</a></strong>()&lt;br&gt;Decision maker whether object can interact (not include content elements)</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-allowprocessdrag">allowProcessDrag</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-allowprocessfocused">allowProcessFocused</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-allowprocessfocusedforinteraction">allowProcessFocusedForInteraction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-allowprocesshold">allowProcessHold</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-allowprocessraisepopup">allowProcessRaisePopup</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-allowprocessselect">allowProcessSelect</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-allowprocessunhold">allowProcessUnhold</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-allowprocessunselect">allowProcessUnselect</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-beforebegin">beforeBegin</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-beforebegindiwne">beforeBeginDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-beforecontentdiwne">beforeContentDiwne</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-begin">begin</a></strong>() =0</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-bypassdragaction">bypassDragAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-bypassfocusaction">bypassFocusAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-bypassholdaction">bypassHoldAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-bypassraisepopupaction">bypassRaisePopupAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-bypassselectaction">bypassSelectAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-bypasstouchaction">bypassTouchAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-bypassunholdaction">bypassUnholdAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-bypassunselectaction">bypassUnselectAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-content">content</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-contentdiwne">contentDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-drawdiwne">drawDiwne</a></strong>(<a href="/cpp-api-reference/namespaces/namespacediwne.html#enum-drawmode">DrawMode</a> drawMode =DrawMode::Interacting)&lt;br&gt;Main function for drawing object and deal with interactions.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-end">end</a></strong>() =0</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-finalize">finalize</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-finalizediwne">finalizeDiwne</a></strong>()</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespacediwne.html#enum-diwneaction">DIWNE::DiwneAction</a></td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-getdragactiontype">getDragActionType</a></strong>() const =0</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespacediwne.html#enum-diwneaction">DIWNE::DiwneAction</a></td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-getholdactiontype">getHoldActionType</a></strong>() const =0</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespacediwne.html#typedef-id">DIWNE::ID</a> const</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-getiddiwne">getIdDiwne</a></strong>() const</td></tr><tr><td>virtual ImRect</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-getrectdiwne">getRectDiwne</a></strong>() const =0</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-getselectable">getSelectable</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-getselected">getSelected</a></strong>() const&lt;br&gt;Getter of selection state.</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespacediwne.html#enum-diwneaction">DIWNE::DiwneAction</a></td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-gettouchactiontype">getTouchActionType</a></strong>() const =0</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-initialize">initialize</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-initializediwne">initializeDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-interactionbegininlastdraw">interactionBeginInLastDraw</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-interactionendinlastdraw">interactionEndInLastDraw</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processdrag">processDrag</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processfocused">processFocused</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processfocusedforinteraction">processFocusedForInteraction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processhold">processHold</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processinteractions">processInteractions</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processinteractionsalways">processInteractionsAlways</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processinteractionsdiwne">processInteractionsDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processobjectdrag">processObjectDrag</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processobjectfocused">processObjectFocused</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processobjectfocusedforinteraction">processObjectFocusedForInteraction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processobjecthold">processObjectHold</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processobjectselect">processObjectSelect</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processobjectunhold">processObjectUnhold</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processobjectunselect">processObjectUnselect</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processraisepopupdiwne">processRaisePopupDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processselect">processSelect</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processshowpopupdiwne">processShowPopupDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processunhold">processUnhold</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processunselect">processUnselect</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-setselectable">setSelectable</a></strong>(bool const selectable)</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-setselected">setSelected</a></strong>(bool const selected)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-showtooltiplabel">showTooltipLabel</a></strong>(std::string const &amp; label, ImColor const &amp;&amp; color)&lt;br&gt;Show a colored text for example for immediate hints.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-updatesizes">updateSizes</a></strong>()</td></tr></tbody></table><p><strong>Public Attributes inherited from <a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html">DIWNE::DiwneObject</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td><a href="/cpp-api-reference/classes/classdiwne_1_1diwne.html">DIWNE::Diwne</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-diwne">diwne</a></strong></td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespacediwne.html#enum-drawmode">DrawMode</a></td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-drawmode">m_drawMode</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-focused">m_focused</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-focusedforinteraction">m_focusedForInteraction</a></strong></td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespacediwne.html#typedef-id">DIWNE::ID</a> const</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-iddiwne">m_idDiwne</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-inner-interaction-happen">m_inner_interaction_happen</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-inner-interaction-happen-previous-draw">m_inner_interaction_happen_previous_draw</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-isactive">m_isActive</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-isdragged">m_isDragged</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-isheld">m_isHeld</a></strong></td></tr><tr><td>std::string const</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-labeldiwne">m_labelDiwne</a></strong></td></tr><tr><td>std::string const</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-popupiddiwne">m_popupIDDiwne</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-selectable">m_selectable</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-selected">m_selected</a></strong></td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-workspacenode" tabindex="-1">function WorkspaceNode <a class="header-anchor" href="#function-workspacenode" aria-label="Permalink to &quot;function WorkspaceNode&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">WorkspaceNode</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::Diwne </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> diwne,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::ID id,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> topLabel </span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;Header&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> middleLabel </span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;Content&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">WorkspaceNode</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::Diwne </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> diwne,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::ID id,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> topLabel </span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;Header&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> middleLabel </span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;Content&quot;</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-workspacenode-1" tabindex="-1">function ~WorkspaceNode <a class="header-anchor" href="#function-workspacenode-1" aria-label="Permalink to &quot;function ~WorkspaceNode&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">~</span><span style="color:#B392F0;">WorkspaceNode</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">~</span><span style="color:#6F42C1;">WorkspaceNode</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-beforecontent" tabindex="-1">function beforeContent <a class="header-anchor" href="#function-beforecontent" aria-label="Permalink to &quot;function beforeContent&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">beforeContent</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">beforeContent</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-beforecontent">DIWNE::DiwneObject::beforeContent</a></p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classworkspaceoperator.html#function-beforecontent">WorkspaceOperator::beforeContent</a>, <a href="/cpp-api-reference/classes/classworkspaceoperator.html#function-beforecontent">WorkspaceOperator::beforeContent</a>, <a href="/cpp-api-reference/classes/classworkspacesequence.html#function-beforecontent">WorkspaceSequence::beforeContent</a>, <a href="/cpp-api-reference/classes/classworkspacetransformation.html#function-beforecontent">WorkspaceTransformation::beforeContent</a></p><p>is called first inside of object</p><h3 id="function-bottomcontent" tabindex="-1">function bottomContent <a class="header-anchor" href="#function-bottomcontent" aria-label="Permalink to &quot;function bottomContent&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bottomContent</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bottomContent</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-bottomcontent">DIWNE::Node::bottomContent</a></p><h3 id="function-bypassfocusforinteractionaction" tabindex="-1">function bypassFocusForInteractionAction <a class="header-anchor" href="#function-bypassfocusforinteractionaction" aria-label="Permalink to &quot;function bypassFocusForInteractionAction&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bypassFocusForInteractionAction</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bypassFocusForInteractionAction</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-bypassfocusforinteractionaction">DIWNE::DiwneObject::bypassFocusForInteractionAction</a></p><p>action identified as focusing on object for interacting with it</p><h3 id="function-deleteaction" tabindex="-1">function deleteAction <a class="header-anchor" href="#function-deleteaction" aria-label="Permalink to &quot;function deleteAction&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">deleteAction</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">deleteAction</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-deleteaction">DIWNE::Node::deleteAction</a></p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classworkspacetransformation.html#function-deleteaction">WorkspaceTransformation::deleteAction</a></p><h3 id="function-drawmenudelete" tabindex="-1">function drawMenuDelete <a class="header-anchor" href="#function-drawmenudelete" aria-label="Permalink to &quot;function drawMenuDelete&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">drawMenuDelete</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">drawMenuDelete</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classworkspacetransformation.html#function-drawmenudelete">WorkspaceTransformation::drawMenuDelete</a></p><h3 id="function-getduplicatenode" tabindex="-1">function getDuplicateNode <a class="header-anchor" href="#function-getduplicatenode" aria-label="Permalink to &quot;function getDuplicateNode&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDuplicateNode</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDuplicateNode</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-getmiddlelabel" tabindex="-1">function getMiddleLabel <a class="header-anchor" href="#function-getmiddlelabel" aria-label="Permalink to &quot;function getMiddleLabel&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getMiddleLabel</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getMiddleLabel</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-getremovefromworkspace" tabindex="-1">function getRemoveFromWorkspace <a class="header-anchor" href="#function-getremovefromworkspace" aria-label="Permalink to &quot;function getRemoveFromWorkspace&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getRemoveFromWorkspace</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getRemoveFromWorkspace</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-gettoplabel" tabindex="-1">function getTopLabel <a class="header-anchor" href="#function-gettoplabel" aria-label="Permalink to &quot;function getTopLabel&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getTopLabel</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getTopLabel</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-leftcontent" tabindex="-1">function leftContent <a class="header-anchor" href="#function-leftcontent" aria-label="Permalink to &quot;function leftContent&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">leftContent</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">leftContent</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-leftcontent">DIWNE::Node::leftContent</a></p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classworkspacecycle.html#function-leftcontent">WorkspaceCycle::leftContent</a>, <a href="/cpp-api-reference/classes/classworkspacenodewithcoredatawithpins.html#function-leftcontent">WorkspaceNodeWithCoreDataWithPins::leftContent</a>, <a href="/cpp-api-reference/classes/classworkspaceangleaxistoquat.html#function-leftcontent">WorkspaceAngleAxisToQuat::leftContent</a></p><h3 id="function-middlecontent" tabindex="-1">function middleContent <a class="header-anchor" href="#function-middlecontent" aria-label="Permalink to &quot;function middleContent&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">middleContent</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">middleContent</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-middlecontent">DIWNE::Node::middleContent</a></p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classworkspacemodel.html#function-middlecontent">WorkspaceModel::middleContent</a>, <a href="/cpp-api-reference/classes/classworkspaceoperator.html#function-middlecontent">WorkspaceOperator::middleContent</a>, <a href="/cpp-api-reference/classes/classworkspaceoperator.html#function-middlecontent">WorkspaceOperator::middleContent</a>, <a href="/cpp-api-reference/classes/classworkspacescreen.html#function-middlecontent">WorkspaceScreen::middleContent</a>, <a href="/cpp-api-reference/classes/classworkspacesequence.html#function-middlecontent">WorkspaceSequence::middleContent</a>, <a href="/cpp-api-reference/classes/classworkspacecamera.html#function-middlecontent">WorkspaceCamera::middleContent</a>, <a href="/cpp-api-reference/classes/classworkspacecycle.html#function-middlecontent">WorkspaceCycle::middleContent</a>, <a href="/cpp-api-reference/classes/classworkspacetransformation.html#function-middlecontent">WorkspaceTransformation::middleContent</a></p><h3 id="function-popupcontent" tabindex="-1">function popupContent <a class="header-anchor" href="#function-popupcontent" aria-label="Permalink to &quot;function popupContent&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">popupContent</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">popupContent</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Content of popup menu raise on this object.</p><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-popupcontent">DIWNE::DiwneObject::popupContent</a></p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classworkspacemodel.html#function-popupcontent">WorkspaceModel::popupContent</a>, <a href="/cpp-api-reference/classes/classworkspacesequence.html#function-popupcontent">WorkspaceSequence::popupContent</a>, <a href="/cpp-api-reference/classes/classworkspacecamera.html#function-popupcontent">WorkspaceCamera::popupContent</a>, <a href="/cpp-api-reference/classes/classworkspacenodewithcoredata.html#function-popupcontent">WorkspaceNodeWithCoreData::popupContent</a>, <a href="/cpp-api-reference/classes/classworkspacescreen.html#function-popupcontent">WorkspaceScreen::popupContent</a>, <a href="/cpp-api-reference/classes/classworkspacetransformation.html#function-popupcontent">WorkspaceTransformation::popupContent</a></p><h3 id="function-rightcontent" tabindex="-1">function rightContent <a class="header-anchor" href="#function-rightcontent" aria-label="Permalink to &quot;function rightContent&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">rightContent</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">rightContent</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-rightcontent">DIWNE::Node::rightContent</a></p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classworkspacecycle.html#function-rightcontent">WorkspaceCycle::rightContent</a>, <a href="/cpp-api-reference/classes/classworkspacenodewithcoredatawithpins.html#function-rightcontent">WorkspaceNodeWithCoreDataWithPins::rightContent</a></p><h3 id="function-setduplicatenode" tabindex="-1">function setDuplicateNode <a class="header-anchor" href="#function-setduplicatenode" aria-label="Permalink to &quot;function setDuplicateNode&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setDuplicateNode</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">value</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setDuplicateNode</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">value</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-setmiddlelabel" tabindex="-1">function setMiddleLabel <a class="header-anchor" href="#function-setmiddlelabel" aria-label="Permalink to &quot;function setMiddleLabel&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setMiddleLabel</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">label</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setMiddleLabel</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;"> </span><span style="color:#E36209;">label</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-setremovefromworkspace" tabindex="-1">function setRemoveFromWorkspace <a class="header-anchor" href="#function-setremovefromworkspace" aria-label="Permalink to &quot;function setRemoveFromWorkspace&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setRemoveFromWorkspace</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">value</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setRemoveFromWorkspace</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">value</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-settoplabel" tabindex="-1">function setTopLabel <a class="header-anchor" href="#function-settoplabel" aria-label="Permalink to &quot;function setTopLabel&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setTopLabel</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">label</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setTopLabel</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;"> </span><span style="color:#E36209;">label</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-topcontent" tabindex="-1">function topContent <a class="header-anchor" href="#function-topcontent" aria-label="Permalink to &quot;function topContent&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">topContent</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">topContent</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classdiwne_1_1node.html#function-topcontent">DIWNE::Node::topContent</a></p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classworkspacemodel.html#function-topcontent">WorkspaceModel::topContent</a>, <a href="/cpp-api-reference/classes/classworkspaceoperator.html#function-topcontent">WorkspaceOperator::topContent</a>, <a href="/cpp-api-reference/classes/classworkspaceoperator.html#function-topcontent">WorkspaceOperator::topContent</a>, <a href="/cpp-api-reference/classes/classworkspacescreen.html#function-topcontent">WorkspaceScreen::topContent</a>, <a href="/cpp-api-reference/classes/classworkspacesequence.html#function-topcontent">WorkspaceSequence::topContent</a>, <a href="/cpp-api-reference/classes/classworkspacecamera.html#function-topcontent">WorkspaceCamera::topContent</a>, <a href="/cpp-api-reference/classes/classworkspacecycle.html#function-topcontent">WorkspaceCycle::topContent</a>, <a href="/cpp-api-reference/classes/classworkspacenodewithcoredata.html#function-topcontent">WorkspaceNodeWithCoreData::topContent</a>, <a href="/cpp-api-reference/classes/classworkspacetransformation.html#function-topcontent">WorkspaceTransformation::topContent</a></p><h2 id="public-attributes-documentation" tabindex="-1">Public Attributes Documentation <a class="header-anchor" href="#public-attributes-documentation" aria-label="Permalink to &quot;Public Attributes Documentation&quot;">​</a></h2><h3 id="variable-m-duplicatenode" tabindex="-1">variable m_duplicateNode <a class="header-anchor" href="#variable-m-duplicatenode" aria-label="Permalink to &quot;variable m_duplicateNode&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_duplicateNode </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_duplicateNode </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-m-removefromworkspacewindow" tabindex="-1">variable m_removeFromWorkspaceWindow <a class="header-anchor" href="#variable-m-removefromworkspacewindow" aria-label="Permalink to &quot;variable m_removeFromWorkspaceWindow&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_removeFromWorkspaceWindow;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_removeFromWorkspaceWindow;</span></span></code></pre></div><h2 id="protected-attributes-documentation" tabindex="-1">Protected Attributes Documentation <a class="header-anchor" href="#protected-attributes-documentation" aria-label="Permalink to &quot;Protected Attributes Documentation&quot;">​</a></h2><h3 id="variable-m-middlelabel" tabindex="-1">variable m_middleLabel <a class="header-anchor" href="#variable-m-middlelabel" aria-label="Permalink to &quot;variable m_middleLabel&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string m_middleLabel;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string m_middleLabel;</span></span></code></pre></div><h3 id="variable-m-toplabel" tabindex="-1">variable m_topLabel <a class="header-anchor" href="#variable-m-toplabel" aria-label="Permalink to &quot;variable m_topLabel&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string m_topLabel;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string m_topLabel;</span></span></code></pre></div><hr><p>Updated on 2024-03-16 at 18:59:45 +0000</p>`,94),r=[o];function c(l,p,i,d,h,f){return t(),s("div",null,r)}const g=e(a,[["render",c]]);export{b as __pageData,g as default};
