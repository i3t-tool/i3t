import{_ as a,o as e,c as t,Q as s}from"./chunks/framework.0f749972.js";const f=JSON.parse('{"title":"Workspace::ScriptInterface","description":"","frontmatter":{"title":"Workspace::ScriptInterface"},"headers":[],"relativePath":"cpp-api-reference/classes/structWorkspace_1_1ScriptInterface.md","filePath":"cpp-api-reference/classes/structWorkspace_1_1ScriptInterface.md"}'),o={name:"cpp-api-reference/classes/structWorkspace_1_1ScriptInterface.md"},r=s('<h1 id="workspace-scriptinterface" tabindex="-1">Workspace::ScriptInterface <a class="header-anchor" href="#workspace-scriptinterface" aria-label="Permalink to &quot;Workspace::ScriptInterface&quot;">​</a></h1><p><code>#include &quot;GUI/Workspace/Nodes/ScriptingNode.h&quot;</code></p><h2 id="public-attributes" tabindex="-1">Public Attributes <a class="header-anchor" href="#public-attributes" aria-label="Permalink to &quot;Public Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td><a href="/cpp-api-reference/namespaces/namespaceCore.html#typedef-id">Core::ID</a></td><td><strong><a href="/cpp-api-reference/classes/structWorkspace_1_1ScriptInterface.html#variable-id">id</a></strong></td></tr><tr><td>sol::function</td><td><strong><a href="/cpp-api-reference/classes/structWorkspace_1_1ScriptInterface.html#variable-oninit">onInit</a></strong></td></tr><tr><td>sol::function</td><td><strong><a href="/cpp-api-reference/classes/structWorkspace_1_1ScriptInterface.html#variable-onupdate">onUpdate</a></strong></td></tr><tr><td><a href="/cpp-api-reference/classes/structCore_1_1Operation.html">Core::Operation</a></td><td><strong><a href="/cpp-api-reference/classes/structWorkspace_1_1ScriptInterface.html#variable-operation">operation</a></strong></td></tr></tbody></table><h2 id="public-attributes-documentation" tabindex="-1">Public Attributes Documentation <a class="header-anchor" href="#public-attributes-documentation" aria-label="Permalink to &quot;Public Attributes Documentation&quot;">​</a></h2><h3 id="variable-id" tabindex="-1">variable id <a class="header-anchor" href="#variable-id" aria-label="Permalink to &quot;variable id&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::ID id;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::ID id;</span></span></code></pre></div><h3 id="variable-oninit" tabindex="-1">variable onInit <a class="header-anchor" href="#variable-oninit" aria-label="Permalink to &quot;variable onInit&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">sol</span><span style="color:#E1E4E8;">::function onInit </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sol</span><span style="color:#E1E4E8;">::nil;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">sol</span><span style="color:#24292E;">::function onInit </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sol</span><span style="color:#24292E;">::nil;</span></span></code></pre></div><h3 id="variable-onupdate" tabindex="-1">variable onUpdate <a class="header-anchor" href="#variable-onupdate" aria-label="Permalink to &quot;variable onUpdate&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">sol</span><span style="color:#E1E4E8;">::function onUpdate </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sol</span><span style="color:#E1E4E8;">::nil;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">sol</span><span style="color:#24292E;">::function onUpdate </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sol</span><span style="color:#24292E;">::nil;</span></span></code></pre></div><h3 id="variable-operation" tabindex="-1">variable operation <a class="header-anchor" href="#variable-operation" aria-label="Permalink to &quot;variable operation&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::Operation operation;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::Operation operation;</span></span></code></pre></div><hr><p>Updated on 2025-01-07 at 12:51:54 +0000</p>',15),n=[r];function p(c,l,i,d,h,u){return e(),t("div",null,n)}const v=a(o,[["render",p]]);export{f as __pageData,v as default};
