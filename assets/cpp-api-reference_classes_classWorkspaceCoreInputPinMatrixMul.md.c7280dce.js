import{_ as e,o as t,c as n,Q as s}from"./chunks/framework.0f749972.js";const w=JSON.parse('{"title":"WorkspaceCoreInputPinMatrixMul","description":"","frontmatter":{"title":"WorkspaceCoreInputPinMatrixMul"},"headers":[],"relativePath":"cpp-api-reference/classes/classWorkspaceCoreInputPinMatrixMul.md","filePath":"cpp-api-reference/classes/classWorkspaceCoreInputPinMatrixMul.md"}'),r={name:"cpp-api-reference/classes/classWorkspaceCoreInputPinMatrixMul.md"},a=s(`<h1 id="workspacecoreinputpinmatrixmul" tabindex="-1">WorkspaceCoreInputPinMatrixMul <a class="header-anchor" href="#workspacecoreinputpinmatrixmul" aria-label="Permalink to &quot;WorkspaceCoreInputPinMatrixMul&quot;">​</a></h1><p><code>#include &quot;GUI/Elements/Nodes/WorkspaceElementsWithCoreData.h&quot;</code></p><p>Inherits from <a href="/cpp-api-reference/classes/classworkspacecoreinputpin.html">WorkspaceCoreInputPin</a>, <a href="/cpp-api-reference/classes/classworkspacecorepin.html">WorkspaceCorePin</a>, <a href="/cpp-api-reference/classes/classdiwne_1_1pin.html">DIWNE::Pin</a>, <a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html">DIWNE::DiwneObject</a>, std::enable_shared_from_this&lt; DiwneObject &gt;</p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classworkspacecoreinputpinmatrixmul.html#function-workspacecoreinputpinmatrixmul">WorkspaceCoreInputPinMatrixMul</a></strong>(<a href="/cpp-api-reference/classes/classdiwne_1_1diwne.html">DIWNE::Diwne</a> &amp; diwne, <a href="/cpp-api-reference/namespaces/namespacediwne.html#typedef-id">DIWNE::ID</a> const id, <a href="/cpp-api-reference/classes/classcore_1_1pin.html">Core::Pin</a> const &amp; pin, <a href="/cpp-api-reference/classes/classworkspacenodewithcoredata.html">WorkspaceNodeWithCoreData</a> &amp; node)</td></tr></tbody></table><h2 id="additional-inherited-members" tabindex="-1">Additional inherited members <a class="header-anchor" href="#additional-inherited-members" aria-label="Permalink to &quot;Additional inherited members&quot;">​</a></h2><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/classworkspacecoreinputpin.html">WorkspaceCoreInputPin</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classworkspacecoreinputpin.html#function-workspacecoreinputpin">WorkspaceCoreInputPin</a></strong>(<a href="/cpp-api-reference/classes/classdiwne_1_1diwne.html">DIWNE::Diwne</a> &amp; diwne, <a href="/cpp-api-reference/namespaces/namespacediwne.html#typedef-id">DIWNE::ID</a> const id, <a href="/cpp-api-reference/classes/classcore_1_1pin.html">Core::Pin</a> const &amp; pin, <a href="/cpp-api-reference/classes/classworkspacenodewithcoredata.html">WorkspaceNodeWithCoreData</a> &amp; node)</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecoreinputpin.html#function-allowcreateandplugconstructornodeaction">allowCreateAndPlugConstructorNodeAction</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecoreinputpin.html#function-bypasscreateandplugconstructornodeaction">bypassCreateAndPlugConstructorNodeAction</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecoreinputpin.html#function-bypassunplugaction">bypassUnplugAction</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecoreinputpin.html#function-connectionchanged">connectionChanged</a></strong>() const</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecoreinputpin.html#function-content">content</a></strong>() override&lt;br&gt;Draw icon and label, if defined.</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecoreinputpin.html#function-drawdiwne">drawDiwne</a></strong>(<a href="/cpp-api-reference/namespaces/namespacediwne.html#enum-drawmode">DIWNE::DrawMode</a> drawMode =DIWNE::DrawMode::Interacting) override&lt;br&gt;Draw pin icon + label and register the connected wire.</td></tr><tr><td><a href="/cpp-api-reference/classes/classworkspacecorelink.html">WorkspaceCoreLink</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecoreinputpin.html#function-getlink">getLink</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecoreinputpin.html#function-plug">plug</a></strong>(<a href="/cpp-api-reference/classes/classworkspacecoreoutputpin.html">WorkspaceCoreOutputPin</a> * ou, bool logEvent =true)</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecoreinputpin.html#function-processcreateandplugconstrutornode">processCreateAndPlugConstrutorNode</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecoreinputpin.html#function-processinteractions">processInteractions</a></strong>() override</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecoreinputpin.html#function-processunplug">processUnplug</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecoreinputpin.html#function-setconnectedworkspaceoutput">setConnectedWorkspaceOutput</a></strong>(<a href="/cpp-api-reference/classes/classworkspacecoreoutputpin.html">WorkspaceCoreOutputPin</a> * ou)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecoreinputpin.html#function-unplug">unplug</a></strong>(bool logEvent =true)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecoreinputpin.html#function-updateconnectionpointdiwne">updateConnectionPointDiwne</a></strong>() override</td></tr></tbody></table><p><strong>Protected Attributes inherited from <a href="/cpp-api-reference/classes/classworkspacecoreinputpin.html">WorkspaceCoreInputPin</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecoreinputpin.html#variable-m-connectionchanged">m_connectionChanged</a></strong> &lt;br&gt;Flag indicating that the pin has been plugged or unplugged this frame Note: This flag gets reset the moment the pin is drawn, which is kinda dumb, don&#39;t rely on this too much, it is currently used for a rather specific purpose.</td></tr><tr><td><a href="/cpp-api-reference/classes/classworkspacecorelink.html">WorkspaceCoreLink</a></td><td><strong><a href="/cpp-api-reference/classes/classworkspacecoreinputpin.html#variable-m-link">m_link</a></strong></td></tr></tbody></table><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/classworkspacecorepin.html">WorkspaceCorePin</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classworkspacecorepin.html#function-workspacecorepin">WorkspaceCorePin</a></strong>(<a href="/cpp-api-reference/classes/classdiwne_1_1diwne.html">DIWNE::Diwne</a> &amp; diwne, <a href="/cpp-api-reference/namespaces/namespacediwne.html#typedef-id">DIWNE::ID</a> const id, <a href="/cpp-api-reference/classes/classcore_1_1pin.html">Core::Pin</a> const &amp; pin, <a href="/cpp-api-reference/classes/classworkspacenodewithcoredata.html">WorkspaceNodeWithCoreData</a> &amp; node)</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecorepin.html#function-bypassfocusforinteractionaction">bypassFocusForInteractionAction</a></strong>() override</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecorepin.html#function-content">content</a></strong>() override&lt;br&gt;Draw the pin icon.</td></tr><tr><td><a href="/cpp-api-reference/classes/classcore_1_1pin.html">Core::Pin</a> const &amp;</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecorepin.html#function-getcorepin">getCorePin</a></strong>() const</td></tr><tr><td>int</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecorepin.html#function-getindex">getIndex</a></strong>() const</td></tr><tr><td><a href="/cpp-api-reference/files/workspaceelements_8h.html#enum-pinkind">PinKind</a></td><td><strong><a href="/cpp-api-reference/classes/classworkspacecorepin.html#function-getkind">getKind</a></strong>() const</td></tr><tr><td><a href="/cpp-api-reference/classes/classworkspacenodewithcoredata.html">WorkspaceNodeWithCoreData</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecorepin.html#function-getnode">getNode</a></strong>()</td></tr><tr><td>const <a href="/cpp-api-reference/classes/classworkspacenodewithcoredata.html">WorkspaceNodeWithCoreData</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecorepin.html#function-getnode">getNode</a></strong>() const</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespacecore.html#enum-evaluetype">Core::EValueType</a></td><td><strong><a href="/cpp-api-reference/classes/classworkspacecorepin.html#function-gettype">getType</a></strong>() const</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecorepin.html#function-isconnected">isConnected</a></strong>() const</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecorepin.html#function-popupcontent">popupContent</a></strong>() override&lt;br&gt;Content of popup menu raise on this object.</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecorepin.html#function-processconnectionprepared">processConnectionPrepared</a></strong>() override</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecorepin.html#function-processdrag">processDrag</a></strong>() override</td></tr></tbody></table><p><strong>Public Attributes inherited from <a href="/cpp-api-reference/classes/classworkspacecorepin.html">WorkspaceCorePin</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td><a href="/cpp-api-reference/namespaces/namespacediwne.html#enum-icontype">DIWNE::IconType</a></td><td><strong><a href="/cpp-api-reference/classes/classworkspacecorepin.html#variable-m-icontype">m_iconType</a></strong></td></tr></tbody></table><p><strong>Protected Attributes inherited from <a href="/cpp-api-reference/classes/classworkspacecorepin.html">WorkspaceCorePin</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>ImRect</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecorepin.html#variable-m-iconrectdiwne">m_iconRectDiwne</a></strong></td></tr><tr><td><a href="/cpp-api-reference/classes/classworkspacenodewithcoredata.html">WorkspaceNodeWithCoreData</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecorepin.html#variable-m-node">m_node</a></strong></td></tr><tr><td><a href="/cpp-api-reference/classes/classcore_1_1pin.html">Core::Pin</a> const &amp;</td><td><strong><a href="/cpp-api-reference/classes/classworkspacecorepin.html#variable-m-pin">m_pin</a></strong></td></tr></tbody></table><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/classdiwne_1_1pin.html">DIWNE::Pin</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#function-pin">Pin</a></strong>(<a href="/cpp-api-reference/classes/classdiwne_1_1diwne.html">DIWNE::Diwne</a> &amp; diwne, <a href="/cpp-api-reference/namespaces/namespacediwne.html#typedef-id">DIWNE::ID</a> id, std::string const labelDiwne =&quot;DiwnePin&quot;)&lt;br&gt;Default constructor.</td></tr><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#function-~pin">~Pin</a></strong>()&lt;br&gt;Default destructor.</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#function-allowprocesspin-pre-connectlink">allowProcessPin_Pre_ConnectLink</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#function-begin">begin</a></strong>() override</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#function-bypasspinlinkconnectionpreparedaction">bypassPinLinkConnectionPreparedAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#function-content">content</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#function-end">end</a></strong>() override</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespacediwne.html#enum-diwneaction">DIWNE::DiwneAction</a></td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#function-getdragactiontype">getDragActionType</a></strong>() const</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespacediwne.html#enum-diwneaction">DIWNE::DiwneAction</a></td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#function-getholdactiontype">getHoldActionType</a></strong>() const</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespacediwne.html#typedef-id">DIWNE::ID</a> const</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#function-getid">getId</a></strong>() const</td></tr><tr><td>virtual const ImVec2 &amp;</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#function-getlinkconnectionpointdiwne">getLinkConnectionPointDiwne</a></strong>()</td></tr><tr><td>virtual ImRect</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#function-getrectdiwne">getRectDiwne</a></strong>() const override</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespacediwne.html#enum-diwneaction">DIWNE::DiwneAction</a></td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#function-gettouchactiontype">getTouchActionType</a></strong>() const</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#function-processconnectionprepared">processConnectionPrepared</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#function-processdrag">processDrag</a></strong>() override</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#function-processinteractionsalways">processInteractionsAlways</a></strong>() override</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#function-processpin-pre-connectlinkdiwne">processPin_Pre_ConnectLinkDiwne</a></strong>()&lt;br&gt;Wrapper is run when new link is created and goal pin is hovered but action not released yet.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#function-setconnectionpointdiwne">setConnectionPointDiwne</a></strong>(const ImVec2 value)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#function-updatesizes">updateSizes</a></strong>() override</td></tr></tbody></table><p><strong>Protected Functions inherited from <a href="/cpp-api-reference/classes/classdiwne_1_1pin.html">DIWNE::Pin</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#function-updateconnectionpointdiwne">updateConnectionPointDiwne</a></strong>()</td></tr></tbody></table><p><strong>Protected Attributes inherited from <a href="/cpp-api-reference/classes/classdiwne_1_1pin.html">DIWNE::Pin</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>ImVec2</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#variable-m-connectionpointdiwne">m_connectionPointDiwne</a></strong></td></tr><tr><td>ImRect</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1pin.html#variable-m-pinrectdiwne">m_pinRectDiwne</a></strong> &lt;br&gt;PIN bounding rectangle.</td></tr></tbody></table><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html">DIWNE::DiwneObject</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-diwneobject">DiwneObject</a></strong>(<a href="/cpp-api-reference/classes/classdiwne_1_1diwne.html">DIWNE::Diwne</a> &amp; diwne, <a href="/cpp-api-reference/namespaces/namespacediwne.html#typedef-id">DIWNE::ID</a> id, std::string const labelDiwne)&lt;br&gt;Constructor.</td></tr><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-~diwneobject">~DiwneObject</a></strong>() =default</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-aftercontent">afterContent</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-aftercontentdiwne">afterContentDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-afterend">afterEnd</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-afterenddiwne">afterEndDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-allowdrawing">allowDrawing</a></strong>()&lt;br&gt;Decision maker whether object should be drawn (not outside of window for example)</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-allowinteraction">allowInteraction</a></strong>()&lt;br&gt;Decision maker whether object can interact (not include content elements)</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-allowprocessdrag">allowProcessDrag</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-allowprocessfocused">allowProcessFocused</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-allowprocessfocusedforinteraction">allowProcessFocusedForInteraction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-allowprocesshold">allowProcessHold</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-allowprocessraisepopup">allowProcessRaisePopup</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-allowprocessselect">allowProcessSelect</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-allowprocessunhold">allowProcessUnhold</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-allowprocessunselect">allowProcessUnselect</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-beforebegin">beforeBegin</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-beforebegindiwne">beforeBeginDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-beforecontent">beforeContent</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-beforecontentdiwne">beforeContentDiwne</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-begin">begin</a></strong>() =0</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-bypassdragaction">bypassDragAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-bypassfocusaction">bypassFocusAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-bypassfocusforinteractionaction">bypassFocusForInteractionAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-bypassholdaction">bypassHoldAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-bypassraisepopupaction">bypassRaisePopupAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-bypassselectaction">bypassSelectAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-bypasstouchaction">bypassTouchAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-bypassunholdaction">bypassUnholdAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-bypassunselectaction">bypassUnselectAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-content">content</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-contentdiwne">contentDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-drawdiwne">drawDiwne</a></strong>(<a href="/cpp-api-reference/namespaces/namespacediwne.html#enum-drawmode">DrawMode</a> drawMode =DrawMode::Interacting)&lt;br&gt;Main function for drawing object and deal with interactions.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-end">end</a></strong>() =0</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-finalize">finalize</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-finalizediwne">finalizeDiwne</a></strong>()</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespacediwne.html#enum-diwneaction">DIWNE::DiwneAction</a></td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-getdragactiontype">getDragActionType</a></strong>() const =0</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespacediwne.html#enum-diwneaction">DIWNE::DiwneAction</a></td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-getholdactiontype">getHoldActionType</a></strong>() const =0</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespacediwne.html#typedef-id">DIWNE::ID</a> const</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-getiddiwne">getIdDiwne</a></strong>() const</td></tr><tr><td>virtual ImRect</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-getrectdiwne">getRectDiwne</a></strong>() const =0</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-getselectable">getSelectable</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-getselected">getSelected</a></strong>() const&lt;br&gt;Getter of selection state.</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespacediwne.html#enum-diwneaction">DIWNE::DiwneAction</a></td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-gettouchactiontype">getTouchActionType</a></strong>() const =0</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-initialize">initialize</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-initializediwne">initializeDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-interactionbegininlastdraw">interactionBeginInLastDraw</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-interactionendinlastdraw">interactionEndInLastDraw</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-popupcontent">popupContent</a></strong>()&lt;br&gt;Content of popup menu raise on this object.</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processdrag">processDrag</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processfocused">processFocused</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processfocusedforinteraction">processFocusedForInteraction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processhold">processHold</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processinteractions">processInteractions</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processinteractionsalways">processInteractionsAlways</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processinteractionsdiwne">processInteractionsDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processobjectdrag">processObjectDrag</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processobjectfocused">processObjectFocused</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processobjectfocusedforinteraction">processObjectFocusedForInteraction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processobjecthold">processObjectHold</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processobjectselect">processObjectSelect</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processobjectunhold">processObjectUnhold</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processobjectunselect">processObjectUnselect</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processraisepopupdiwne">processRaisePopupDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processselect">processSelect</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processshowpopupdiwne">processShowPopupDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processunhold">processUnhold</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-processunselect">processUnselect</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-setselectable">setSelectable</a></strong>(bool const selectable)</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-setselected">setSelected</a></strong>(bool const selected)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-showtooltiplabel">showTooltipLabel</a></strong>(std::string const &amp; label, ImColor const &amp;&amp; color)&lt;br&gt;Show a colored text for example for immediate hints.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#function-updatesizes">updateSizes</a></strong>()</td></tr></tbody></table><p><strong>Public Attributes inherited from <a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html">DIWNE::DiwneObject</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td><a href="/cpp-api-reference/classes/classdiwne_1_1diwne.html">DIWNE::Diwne</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-diwne">diwne</a></strong></td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespacediwne.html#enum-drawmode">DrawMode</a></td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-drawmode">m_drawMode</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-focused">m_focused</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-focusedforinteraction">m_focusedForInteraction</a></strong></td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespacediwne.html#typedef-id">DIWNE::ID</a> const</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-iddiwne">m_idDiwne</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-inner-interaction-happen">m_inner_interaction_happen</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-inner-interaction-happen-previous-draw">m_inner_interaction_happen_previous_draw</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-isactive">m_isActive</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-isdragged">m_isDragged</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-isheld">m_isHeld</a></strong></td></tr><tr><td>std::string const</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-labeldiwne">m_labelDiwne</a></strong></td></tr><tr><td>std::string const</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-popupiddiwne">m_popupIDDiwne</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-selectable">m_selectable</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html#variable-m-selected">m_selected</a></strong></td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-workspacecoreinputpinmatrixmul" tabindex="-1">function WorkspaceCoreInputPinMatrixMul <a class="header-anchor" href="#function-workspacecoreinputpinmatrixmul" aria-label="Permalink to &quot;function WorkspaceCoreInputPinMatrixMul&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WorkspaceCoreInputPinMatrixMul</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::Diwne </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> diwne,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::ID </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> id,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::Pin </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> pin,</span></span>
<span class="line"><span style="color:#E1E4E8;">    WorkspaceNodeWithCoreData </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> node</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WorkspaceCoreInputPinMatrixMul</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::Diwne </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> diwne,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::ID </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> id,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::Pin </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> pin,</span></span>
<span class="line"><span style="color:#24292E;">    WorkspaceNodeWithCoreData </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> node</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><hr><p>Updated on 2024-03-16 at 18:59:45 +0000</p>`,31),c=[a];function o(i,p,d,l,f,h){return t(),n("div",null,c)}const g=e(r,[["render",o]]);export{w as __pageData,g as default};
