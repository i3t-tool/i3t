import{_ as e,o as s,c as a,Q as n}from"./chunks/framework.0f749972.js";const f=JSON.parse('{"title":"IStateful","description":"","frontmatter":{"title":"IStateful"},"headers":[],"relativePath":"cpp-api-reference/classes/classIStateful.md","filePath":"cpp-api-reference/classes/classIStateful.md"}'),l={name:"cpp-api-reference/classes/classIStateful.md"},o=n(`<h1 id="istateful" tabindex="-1">IStateful <a class="header-anchor" href="#istateful" aria-label="Permalink to &quot;IStateful&quot;">​</a></h1><p><code>#include &quot;State/Stateful.h&quot;</code></p><p>Inherited by <a href="/cpp-api-reference/classes/classCore_1_1ResourceManager.html">Core::ResourceManager</a>, <a href="/cpp-api-reference/classes/classUIModule.html">UIModule</a>, <a href="/cpp-api-reference/classes/classVp_1_1Viewport.html">Vp::Viewport</a>, <a href="/cpp-api-reference/classes/classWorkspaceWindow.html">WorkspaceWindow</a></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/classIStateful.html#function-~istateful">~IStateful</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classIStateful.html#function-clearglobal">clearGlobal</a></strong>() =0&lt;br&gt;Set the global state to some default empty state.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classIStateful.html#function-clearscene">clearScene</a></strong>() =0&lt;br&gt;Set the scene state to some default empty state.</td></tr><tr><td><a href="/cpp-api-reference/files/Stateful_8h.html#using-memento">Memento</a></td><td><strong><a href="/cpp-api-reference/classes/classIStateful.html#function-emptymemento">emptyMemento</a></strong>()&lt;br&gt;Create an empty memento (rapidjson::Document)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classIStateful.html#function-loadglobal">loadGlobal</a></strong>(const <a href="/cpp-api-reference/files/Stateful_8h.html#using-memento">Memento</a> &amp; memento) =0&lt;br&gt;Load global state from a memento.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classIStateful.html#function-loadscene">loadScene</a></strong>(const <a href="/cpp-api-reference/files/Stateful_8h.html#using-memento">Memento</a> &amp; memento, <a href="/cpp-api-reference/classes/classState_1_1Scene.html">State::Scene</a> * scene) =0&lt;br&gt;Called on scene load, undo and redo.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Stateful_8h.html#using-memento">Memento</a></td><td><strong><a href="/cpp-api-reference/classes/classIStateful.html#function-saveglobal">saveGlobal</a></strong>() =0&lt;br&gt;Save shared global state.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Stateful_8h.html#using-memento">Memento</a></td><td><strong><a href="/cpp-api-reference/classes/classIStateful.html#function-savescene">saveScene</a></strong>(<a href="/cpp-api-reference/classes/classState_1_1Scene.html">State::Scene</a> * scene) =0&lt;br&gt;Save state for the current scene.</td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-istateful" tabindex="-1">function ~IStateful <a class="header-anchor" href="#function-istateful" aria-label="Permalink to &quot;function ~IStateful&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">~</span><span style="color:#B392F0;">IStateful</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">~</span><span style="color:#6F42C1;">IStateful</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-clearglobal" tabindex="-1">function clearGlobal <a class="header-anchor" href="#function-clearglobal" aria-label="Permalink to &quot;function clearGlobal&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">clearGlobal</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">clearGlobal</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p>Set the global state to some default empty state.</p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classCore_1_1ResourceManager.html#function-clearglobal">Core::ResourceManager::clearGlobal</a>, <a href="/cpp-api-reference/classes/classWorkspaceWindow.html#function-clearglobal">WorkspaceWindow::clearGlobal</a>, <a href="/cpp-api-reference/classes/classUIModule.html#function-clearglobal">UIModule::clearGlobal</a>, <a href="/cpp-api-reference/classes/classVp_1_1Viewport.html#function-clearglobal">Vp::Viewport::clearGlobal</a></p><h3 id="function-clearscene" tabindex="-1">function clearScene <a class="header-anchor" href="#function-clearscene" aria-label="Permalink to &quot;function clearScene&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">clearScene</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">clearScene</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p>Set the scene state to some default empty state.</p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classCore_1_1ResourceManager.html#function-clearscene">Core::ResourceManager::clearScene</a>, <a href="/cpp-api-reference/classes/classWorkspaceWindow.html#function-clearscene">WorkspaceWindow::clearScene</a>, <a href="/cpp-api-reference/classes/classUIModule.html#function-clearscene">UIModule::clearScene</a>, <a href="/cpp-api-reference/classes/classVp_1_1Viewport.html#function-clearscene">Vp::Viewport::clearScene</a></p><h3 id="function-emptymemento" tabindex="-1">function emptyMemento <a class="header-anchor" href="#function-emptymemento" aria-label="Permalink to &quot;function emptyMemento&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Memento</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">emptyMemento</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Memento</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">emptyMemento</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Create an empty memento (rapidjson::Document)</p><h3 id="function-loadglobal" tabindex="-1">function loadGlobal <a class="header-anchor" href="#function-loadglobal" aria-label="Permalink to &quot;function loadGlobal&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">loadGlobal</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Memento</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">memento</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">loadGlobal</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Memento</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">memento</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p>Load global state from a memento.</p><p><strong>Parameters</strong>:</p><ul><li><strong>memento</strong> New global state</li></ul><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classCore_1_1ResourceManager.html#function-loadglobal">Core::ResourceManager::loadGlobal</a>, <a href="/cpp-api-reference/classes/classWorkspaceWindow.html#function-loadglobal">WorkspaceWindow::loadGlobal</a>, <a href="/cpp-api-reference/classes/classUIModule.html#function-loadglobal">UIModule::loadGlobal</a>, <a href="/cpp-api-reference/classes/classVp_1_1Viewport.html#function-loadglobal">Vp::Viewport::loadGlobal</a></p><h3 id="function-loadscene" tabindex="-1">function loadScene <a class="header-anchor" href="#function-loadscene" aria-label="Permalink to &quot;function loadScene&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">loadScene</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Memento</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">memento</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">State</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Scene</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">scene</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">loadScene</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Memento</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">memento</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">State</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">Scene</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">scene</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p>Called on scene load, undo and redo.</p><p><strong>Parameters</strong>:</p><ul><li><strong>scene</strong> The current scene or nullptr (in case of undo/redo)</li><li><strong>memento</strong> New scene state</li></ul><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspaceWindow.html#function-loadscene">WorkspaceWindow::loadScene</a>, <a href="/cpp-api-reference/classes/classCore_1_1ResourceManager.html#function-loadscene">Core::ResourceManager::loadScene</a>, <a href="/cpp-api-reference/classes/classUIModule.html#function-loadscene">UIModule::loadScene</a>, <a href="/cpp-api-reference/classes/classVp_1_1Viewport.html#function-loadscene">Vp::Viewport::loadScene</a></p><h3 id="function-saveglobal" tabindex="-1">function saveGlobal <a class="header-anchor" href="#function-saveglobal" aria-label="Permalink to &quot;function saveGlobal&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Memento</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">saveGlobal</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Memento</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">saveGlobal</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p>Save shared global state.</p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classCore_1_1ResourceManager.html#function-saveglobal">Core::ResourceManager::saveGlobal</a>, <a href="/cpp-api-reference/classes/classWorkspaceWindow.html#function-saveglobal">WorkspaceWindow::saveGlobal</a>, <a href="/cpp-api-reference/classes/classUIModule.html#function-saveglobal">UIModule::saveGlobal</a>, <a href="/cpp-api-reference/classes/classVp_1_1Viewport.html#function-saveglobal">Vp::Viewport::saveGlobal</a></p><h3 id="function-savescene" tabindex="-1">function saveScene <a class="header-anchor" href="#function-savescene" aria-label="Permalink to &quot;function saveScene&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Memento</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">saveScene</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">State</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Scene</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">scene</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Memento</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">saveScene</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">State</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">Scene</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">scene</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p>Save state for the current scene.</p><p><strong>Parameters</strong>:</p><ul><li><strong>scene</strong> The current scene or nullptr (in case of undo/redo)</li></ul><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspaceWindow.html#function-savescene">WorkspaceWindow::saveScene</a>, <a href="/cpp-api-reference/classes/classCore_1_1ResourceManager.html#function-savescene">Core::ResourceManager::saveScene</a>, <a href="/cpp-api-reference/classes/classUIModule.html#function-savescene">UIModule::saveScene</a>, <a href="/cpp-api-reference/classes/classVp_1_1Viewport.html#function-savescene">Vp::Viewport::saveScene</a></p><p>The scene parameter should contain a scene object for full filesystem saves and nullptr for quick undo/redo operations.</p><hr><p>Updated on 2025-01-07 at 12:46:14 +0000</p>`,44),t=[o];function p(c,r,i,d,u,y){return s(),a("div",null,t)}const E=e(l,[["render",p]]);export{f as __pageData,E as default};
