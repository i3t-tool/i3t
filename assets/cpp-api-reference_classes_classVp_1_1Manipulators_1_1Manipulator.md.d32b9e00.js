import{_ as a,o as s,c as e,Q as t}from"./chunks/framework.0f749972.js";const y=JSON.parse('{"title":"Vp::Manipulators::Manipulator","description":"","frontmatter":{"title":"Vp::Manipulators::Manipulator"},"headers":[],"relativePath":"cpp-api-reference/classes/classVp_1_1Manipulators_1_1Manipulator.md","filePath":"cpp-api-reference/classes/classVp_1_1Manipulators_1_1Manipulator.md"}'),l={name:"cpp-api-reference/classes/classVp_1_1Manipulators_1_1Manipulator.md"},n=t(`<h1 id="vp-manipulators-manipulator" tabindex="-1">Vp::Manipulators::Manipulator <a class="header-anchor" href="#vp-manipulators-manipulator" aria-label="Permalink to &quot;Vp::Manipulators::Manipulator&quot;">​</a></h1><p><code>#include &quot;Viewport/Manipulators.h&quot;</code></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Manipulators_1_1Manipulator.html#function-manipulator">Manipulator</a></strong>(std::shared_ptr&lt; <a href="/cpp-api-reference/classes/classCore_1_1Transform.html">Core::Transform</a> &gt; node)</td></tr></tbody></table><h2 id="public-attributes" tabindex="-1">Public Attributes <a class="header-anchor" href="#public-attributes" aria-label="Permalink to &quot;Public Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>glm::mat4</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Manipulators_1_1Manipulator.html#variable-m-auxillarymatrix">m_auxillaryMatrix</a></strong> &lt;br&gt;Currently used to store view matrix for projection matrices.</td></tr><tr><td>glm::mat4</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Manipulators_1_1Manipulator.html#variable-m-editedmatrix">m_editedMatrix</a></strong> &lt;br&gt;Matrix of the currently selected transformation, the &quot;local&quot; space.</td></tr><tr><td>int</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Manipulators_1_1Manipulator.html#variable-m-id">m_id</a></strong> &lt;br&gt;Unique id among the current active manipulators.</td></tr><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-wptr">WPtr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Transform.html">Core::Transform</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Manipulators_1_1Manipulator.html#variable-m-node">m_node</a></strong> &lt;br&gt;Reference to the selected/manipulated node.</td></tr><tr><td>glm::mat4</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Manipulators_1_1Manipulator.html#variable-m-referencespace">m_referenceSpace</a></strong> &lt;br&gt;Combined matrix of all transformations prior to selection.</td></tr><tr><td><a href="/cpp-api-reference/classes/classVp_1_1Manipulators.html#enum-manipulatortype">ManipulatorType</a></td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Manipulators_1_1Manipulator.html#variable-m-type">m_type</a></strong></td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-manipulator" tabindex="-1">function Manipulator <a class="header-anchor" href="#function-manipulator" aria-label="Permalink to &quot;function Manipulator&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">explicit</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Manipulator</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::shared_ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::Transform </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> node</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">explicit</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Manipulator</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::shared_ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::Transform </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> node</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="public-attributes-documentation" tabindex="-1">Public Attributes Documentation <a class="header-anchor" href="#public-attributes-documentation" aria-label="Permalink to &quot;Public Attributes Documentation&quot;">​</a></h2><h3 id="variable-m-auxillarymatrix" tabindex="-1">variable m_auxillaryMatrix <a class="header-anchor" href="#variable-m-auxillarymatrix" aria-label="Permalink to &quot;variable m_auxillaryMatrix&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::mat4 m_auxillaryMatrix {</span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">mat4</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::mat4 m_auxillaryMatrix {</span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">mat4</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)};</span></span></code></pre></div><p>Currently used to store view matrix for projection matrices.</p><h3 id="variable-m-editedmatrix" tabindex="-1">variable m_editedMatrix <a class="header-anchor" href="#variable-m-editedmatrix" aria-label="Permalink to &quot;variable m_editedMatrix&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::mat4 m_editedMatrix {</span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">mat4</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::mat4 m_editedMatrix {</span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">mat4</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)};</span></span></code></pre></div><p>Matrix of the currently selected transformation, the &quot;local&quot; space.</p><h3 id="variable-m-id" tabindex="-1">variable m_id <a class="header-anchor" href="#variable-m-id" aria-label="Permalink to &quot;variable m_id&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> m_id {</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> m_id {</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">};</span></span></code></pre></div><p>Unique id among the current active manipulators.</p><h3 id="variable-m-node" tabindex="-1">variable m_node <a class="header-anchor" href="#variable-m-node" aria-label="Permalink to &quot;variable m_node&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">WPtr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::Transform </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_node;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">WPtr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::Transform </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_node;</span></span></code></pre></div><p>Reference to the selected/manipulated node.</p><h3 id="variable-m-referencespace" tabindex="-1">variable m_referenceSpace <a class="header-anchor" href="#variable-m-referencespace" aria-label="Permalink to &quot;variable m_referenceSpace&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::mat4 m_referenceSpace {</span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">mat4</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::mat4 m_referenceSpace {</span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">mat4</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)};</span></span></code></pre></div><p>Combined matrix of all transformations prior to selection.</p><h3 id="variable-m-type" tabindex="-1">variable m_type <a class="header-anchor" href="#variable-m-type" aria-label="Permalink to &quot;variable m_type&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">ManipulatorType m_type {</span><span style="color:#B392F0;">ManipulatorType</span><span style="color:#E1E4E8;">::UNKNOWN};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">ManipulatorType m_type {</span><span style="color:#6F42C1;">ManipulatorType</span><span style="color:#24292E;">::UNKNOWN};</span></span></code></pre></div><hr><p>Updated on 2024-11-06 at 20:16:53 +0000</p>`,29),p=[n];function o(r,c,i,d,u,m){return s(),e("div",null,p)}const b=a(l,[["render",o]]);export{y as __pageData,b as default};
