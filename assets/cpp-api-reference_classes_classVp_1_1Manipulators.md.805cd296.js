import{_ as a,o as s,c as n,Q as t}from"./chunks/framework.0f749972.js";const h=JSON.parse('{"title":"Vp::Manipulators","description":"","frontmatter":{"title":"Vp::Manipulators"},"headers":[],"relativePath":"cpp-api-reference/classes/classVp_1_1Manipulators.md","filePath":"cpp-api-reference/classes/classVp_1_1Manipulators.md"}'),l={name:"cpp-api-reference/classes/classVp_1_1Manipulators.md"},o=t(`<h1 id="vp-manipulators" tabindex="-1">Vp::Manipulators <a class="header-anchor" href="#vp-manipulators" aria-label="Permalink to &quot;Vp::Manipulators&quot;">​</a></h1><p><code>#include &quot;Viewport/Manipulators.h&quot;</code></p><h2 id="public-classes" tabindex="-1">Public Classes <a class="header-anchor" href="#public-classes" aria-label="Permalink to &quot;Public Classes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Manipulators_1_1Manipulator.html">Manipulator</a></strong></td></tr></tbody></table><h2 id="public-types" tabindex="-1">Public Types <a class="header-anchor" href="#public-types" aria-label="Permalink to &quot;Public Types&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>enum class</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Manipulators.html#enum-manipulatortype">ManipulatorType</a></strong> { UNKNOWN, UNIMPLEMENTED, TRANSLATE, ROTATE_X, ROTATE_Y, ROTATE_Z, ROTATE, SCALE, ORTHO, PERSPECTIVE, FRUSTUM, LOOKAT}</td></tr></tbody></table><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Manipulators.html#function-manipulators">Manipulators</a></strong>(<a href="/cpp-api-reference/classes/classVp_1_1Viewport.html">Viewport</a> * viewport)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Manipulators.html#function-addmanipulator">addManipulator</a></strong>(std::shared_ptr&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Core::Node</a> &gt; node)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Manipulators.html#function-clearmanipulators">clearManipulators</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Manipulators.html#function-drawmanipulators">drawManipulators</a></strong>(glm::vec2 windowPos, glm::vec2 windowSize)</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Manipulators.html#function-drawviewaxes">drawViewAxes</a></strong>(glm::vec2 windowPos, glm::vec2 windowSize)</td></tr></tbody></table><h2 id="public-types-documentation" tabindex="-1">Public Types Documentation <a class="header-anchor" href="#public-types-documentation" aria-label="Permalink to &quot;Public Types Documentation&quot;">​</a></h2><h3 id="enum-manipulatortype" tabindex="-1">enum ManipulatorType <a class="header-anchor" href="#enum-manipulatortype" aria-label="Permalink to &quot;enum ManipulatorType&quot;">​</a></h3><table><thead><tr><th>Enumerator</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>UNKNOWN</td><td></td><td></td></tr><tr><td>UNIMPLEMENTED</td><td></td><td></td></tr><tr><td>TRANSLATE</td><td></td><td></td></tr><tr><td>ROTATE_X</td><td></td><td></td></tr><tr><td>ROTATE_Y</td><td></td><td></td></tr><tr><td>ROTATE_Z</td><td></td><td></td></tr><tr><td>ROTATE</td><td></td><td></td></tr><tr><td>SCALE</td><td></td><td></td></tr><tr><td>ORTHO</td><td></td><td></td></tr><tr><td>PERSPECTIVE</td><td></td><td></td></tr><tr><td>FRUSTUM</td><td></td><td></td></tr><tr><td>LOOKAT</td><td></td><td></td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-manipulators" tabindex="-1">function Manipulators <a class="header-anchor" href="#function-manipulators" aria-label="Permalink to &quot;function Manipulators&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">explicit</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Manipulators</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    Viewport </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> viewport</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">explicit</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Manipulators</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    Viewport </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> viewport</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-addmanipulator" tabindex="-1">function addManipulator <a class="header-anchor" href="#function-addmanipulator" aria-label="Permalink to &quot;function addManipulator&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">addManipulator</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">shared_ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#FFAB70;">node</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">addManipulator</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">shared_ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> &gt; </span><span style="color:#E36209;">node</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-clearmanipulators" tabindex="-1">function clearManipulators <a class="header-anchor" href="#function-clearmanipulators" aria-label="Permalink to &quot;function clearManipulators&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">clearManipulators</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">clearManipulators</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-drawmanipulators" tabindex="-1">function drawManipulators <a class="header-anchor" href="#function-drawmanipulators" aria-label="Permalink to &quot;function drawManipulators&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">drawManipulators</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vec2</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">windowPos</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vec2</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">windowSize</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">drawManipulators</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vec2</span><span style="color:#24292E;"> </span><span style="color:#E36209;">windowPos</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vec2</span><span style="color:#24292E;"> </span><span style="color:#E36209;">windowSize</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p><strong>Parameters</strong>:</p><ul><li><strong>windowPos</strong></li><li><strong>windowSize</strong></li></ul><p><strong>Return</strong>: Whether manipulators have been interacted with.</p><h3 id="function-drawviewaxes" tabindex="-1">function drawViewAxes <a class="header-anchor" href="#function-drawviewaxes" aria-label="Permalink to &quot;function drawViewAxes&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">drawViewAxes</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vec2</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">windowPos</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vec2</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">windowSize</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">drawViewAxes</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vec2</span><span style="color:#24292E;"> </span><span style="color:#E36209;">windowPos</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vec2</span><span style="color:#24292E;"> </span><span style="color:#E36209;">windowSize</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><hr><p>Updated on 2025-01-07 at 12:56:08 +0000</p>`,27),p=[o];function e(r,c,i,d,u,E){return s(),n("div",null,p)}const b=a(l,[["render",e]]);export{h as __pageData,b as default};
