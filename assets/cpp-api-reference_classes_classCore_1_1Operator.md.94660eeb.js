import{_ as e,o as s,c as a,Q as n}from"./chunks/framework.0f749972.js";const E=JSON.parse('{"title":"Core::Operator","description":"","frontmatter":{"title":"Core::Operator","summary":"Implementation of Node class."},"headers":[],"relativePath":"cpp-api-reference/classes/classCore_1_1Operator.md","filePath":"cpp-api-reference/classes/classCore_1_1Operator.md"}'),t={name:"cpp-api-reference/classes/classCore_1_1Operator.md"},p=n(`<h1 id="core-operator" tabindex="-1">Core::Operator <a class="header-anchor" href="#core-operator" aria-label="Permalink to &quot;Core::Operator&quot;">​</a></h1><p>Implementation of <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> class. <a href="#detailed-description">More...</a></p><p><code>#include &quot;Core/Nodes/Operator.h&quot;</code></p><p>Inherits from <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Core::Node</a>, std::enable_shared_from_this&lt; Node &gt;</p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-operator">Operator</a></strong>()&lt;br&gt;Creates an operator of given type (as template parameter).</td></tr><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-~operator">~Operator</a></strong>() override =default</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html#function-updatevalues">updateValues</a></strong>(int inputIndex) override&lt;br&gt;Implementation of virtual function <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Node::updateValues(int)</a>.</td></tr></tbody></table><h2 id="additional-inherited-members" tabindex="-1">Additional inherited members <a class="header-anchor" href="#additional-inherited-members" aria-label="Permalink to &quot;Additional inherited members&quot;">​</a></h2><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Core::Node</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-adddeletecallback">addDeleteCallback</a></strong>(std::function&lt; void(<a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> <em>)&gt; callback)&lt;br&gt; The callback parameters: Node</em> = node that has been deleted</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addplugcallback">addPlugCallback</a></strong>(std::function&lt; void(<a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> *, <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> *, size_t, size_t)&gt; callback)&lt;br&gt;Registers a callback that gets called when the node&#39;s output pins get plugged in.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addunplugcallback">addUnplugCallback</a></strong>(std::function&lt; void(<a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> *, <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> *, size_t, size_t)&gt; callback)&lt;br&gt;Registers a callback that gets called when the node&#39;s input pins get unplugged.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback</a></strong>(std::function&lt; void(<a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> *)&gt; callback)&lt;br&gt;Registers a callback that gets called on any <a href="./.html">updateValues()</a> call.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-appendchildnode">appendChildNode</a></strong>(<a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> &gt; node)</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-areallinputsplugged">areAllInputsPlugged</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-areallinputsunplugged">areAllInputsUnplugged</a></strong>() const</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-areinputsplugged">areInputsPlugged</a></strong>(int numInputs)</td></tr><tr><td>template &lt;typename T &amp;gt; &lt;br&gt;<a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; T &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-as">as</a></strong>()</td></tr><tr><td>const <a href="/cpp-api-reference/classes/classCore_1_1Data.html">Data</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-data">data</a></strong>(size_t index =0) const&lt;br&gt;Get <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> contents, read only.</td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1Data.html">Data</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-datamut">dataMut</a></strong>(size_t index)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-finalize">finalize</a></strong>()&lt;br&gt;Prepares node for its destruction, after that the destructor can be called.</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceCore.html#typedef-id">ID</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getid">getId</a></strong>() const</td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1Pin.html">Pin</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getinput">getInput</a></strong>(size_t i)</td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classCore_1_1Pin.html">Pin</a> &gt; &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getinputpins">getInputPins</a></strong>()</td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1Data.html">Data</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getinternaldata">getInternalData</a></strong>(size_t index =0)&lt;br&gt;Get data storage for read and write purposes.</td></tr><tr><td>const char *</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getlabel">getLabel</a></strong>() const</td></tr><tr><td>const <a href="/cpp-api-reference/classes/structCore_1_1Operation.html">Operation</a> *</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getoperation">getOperation</a></strong>() const</td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1Pin.html">Pin</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getoutput">getOutput</a></strong>(size_t i)</td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classCore_1_1Pin.html">Pin</a> &gt; &amp;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getoutputpins">getOutputPins</a></strong>()</td></tr><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getowner">getOwner</a></strong>() const&lt;br&gt;Get direct owner of this node.</td></tr><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getptr">getPtr</a></strong>()&lt;br&gt;Get reference to this node instance.</td></tr><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getrootowner">getRootOwner</a></strong>()&lt;br&gt;Get the topmost owner of this node.</td></tr><tr><td>std::string</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getsignature">getSignature</a></strong>()&lt;br&gt;&quot;{node type} #{node ID}&quot;</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-evaluestate">EValueState</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-getstate">getState</a></strong>(size_t pinIndex =0)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-init">init</a></strong>()&lt;br&gt;Initialize node id, inputs, and outputs according to the preset node type.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-notifyowner">notifyOwner</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-oninit">onInit</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-operator!=">operator!=</a></strong>(const <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> &amp; other) const</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-operator==">operator==</a></strong>(const <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> &amp; other) const</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-enodeplugresult">ENodePlugResult</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-plug">plug</a></strong>(const <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> &gt; &amp; childNode, unsigned fromIndex, unsigned toIndex)&lt;br&gt;Connect this (parent) node output to the <code>childNode</code> input.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-pulse">pulse</a></strong>(size_t index)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal</a></strong>(int inputIndex)&lt;br&gt;Implements the operator reaction to the change of its <em>inputIndex</em> input.</td></tr><tr><td>virtual <a href="/cpp-api-reference/classes/structCore_1_1SetValueResult.html">SetValueResult</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-setvalue">setValue</a></strong>(const glm::mat4 &amp; mat)</td></tr><tr><td>virtual <a href="/cpp-api-reference/classes/structCore_1_1SetValueResult.html">SetValueResult</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-setvalue">setValue</a></strong>(const glm::mat4 &amp; mat, const <a href="/cpp-api-reference/classes/classCore_1_1DataMap.html">DataMap</a> &amp; map)&lt;br&gt;Smart set function, used with constrained transformation for value checking.</td></tr><tr><td>virtual <a href="/cpp-api-reference/classes/structCore_1_1SetValueResult.html">SetValueResult</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-setvalue">setValue</a></strong>(const glm::quat &amp; q)</td></tr><tr><td>virtual <a href="/cpp-api-reference/classes/structCore_1_1SetValueResult.html">SetValueResult</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-setvalue">setValue</a></strong>(const glm::vec3 &amp; vec)</td></tr><tr><td>virtual <a href="/cpp-api-reference/classes/structCore_1_1SetValueResult.html">SetValueResult</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-setvalue">setValue</a></strong>(const glm::vec4 &amp; vec)</td></tr><tr><td>template &lt;typename T &amp;gt; &lt;br&gt;<a href="/cpp-api-reference/classes/structCore_1_1SetValueResult.html">SetValueResult</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-setvalue">setValue</a></strong>(const T &amp; value, unsigned index)</td></tr><tr><td>virtual <a href="/cpp-api-reference/classes/structCore_1_1SetValueResult.html">SetValueResult</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-setvalue">setValue</a></strong>(float val)&lt;br&gt;Set the value of the node.</td></tr><tr><td>virtual <a href="/cpp-api-reference/classes/structCore_1_1SetValueResult.html">SetValueResult</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-setvalue">setValue</a></strong>(float val, glm::ivec2 coords)</td></tr><tr><td>virtual <a href="/cpp-api-reference/classes/structCore_1_1SetValueResult.html">SetValueResult</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-setvalue">setValue</a></strong>(void * ptr)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-spreadsignal">spreadSignal</a></strong>()&lt;br&gt;Spread signal to all outputs.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-spreadsignal">spreadSignal</a></strong>(size_t outIndex)&lt;br&gt;Spread signal to the selected output <em>outIndex</em> only.</td></tr></tbody></table><p><strong>Protected Functions inherited from <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Core::Node</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-node">Node</a></strong>(const <a href="/cpp-api-reference/classes/structCore_1_1Operation.html">Operation</a> * operation)&lt;br&gt;<a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> is never constructed directory.</td></tr><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-~node">~Node</a></strong>()</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-enodeplugresult">ENodePlugResult</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-isplugcorrect">isPlugCorrect</a></strong>(const <a href="/cpp-api-reference/classes/classCore_1_1Pin.html">Pin</a> &amp; input, const <a href="/cpp-api-reference/classes/classCore_1_1Pin.html">Pin</a> &amp; output)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-onunpluginput">onUnplugInput</a></strong>(size_t index)</td></tr><tr><td>template &lt;typename T &amp;gt; &lt;br&gt;void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-setinternalvalue">setInternalValue</a></strong>(const T &amp; value, size_t index =0)&lt;br&gt;Sets the node value without validation.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-setinternalvalue">setInternalValue</a></strong>(float value, glm::ivec2 coordinates, size_t index =0)</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-shouldpulse">shouldPulse</a></strong>(size_t inputIndex, size_t updatedInputIndex)&lt;br&gt;Tests if the <code>updatedInputIndex</code> should be pulsed.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-triggerdeletecallback">triggerDeleteCallback</a></strong>(<a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> * node)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-triggerplugcallback">triggerPlugCallback</a></strong>(<a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> * fromNode, <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> * toNode, size_t fromIndex, size_t toIndex)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-triggerunplugcallback">triggerUnplugCallback</a></strong>(<a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> * fromNode, <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> * toNode, size_t fromIndex, size_t toIndex)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-triggerupdatecallback">triggerUpdateCallback</a></strong>(<a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> * node)</td></tr></tbody></table><p><strong>Public Attributes inherited from <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Core::Node</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>std::vector&lt; <a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-evaluestate">EValueState</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#variable-m-operatorstate">m_OperatorState</a></strong></td></tr></tbody></table><p><strong>Protected Attributes inherited from <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Core::Node</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> * &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#variable-m-children">m_children</a></strong> &lt;br&gt;Nested nodes.</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceCore.html#typedef-id">ID</a></td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#variable-m-id">m_id</a></strong></td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classCore_1_1Pin.html">Pin</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#variable-m-inputs">m_inputs</a></strong> &lt;br&gt;Inputs of the box: Input tabs with glyphs.</td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classCore_1_1Data.html">Data</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#variable-m-internaldata">m_internalData</a></strong> &lt;br&gt;Results of operations.</td></tr><tr><td>const <a href="/cpp-api-reference/classes/structCore_1_1Operation.html">Operation</a> *</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#variable-m-operation">m_operation</a></strong> &lt;br&gt;<a href="./.html">Operator</a> node properties.</td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classCore_1_1Pin.html">Pin</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#variable-m-outputs">m_outputs</a></strong> &lt;br&gt;Outputs of the box: output tabs with glyphs.</td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> *</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#variable-m-owner">m_owner</a></strong> &lt;br&gt;Owner of the node, used in complex type of nodes, such as sequence or camera.</td></tr></tbody></table><p><strong>Friends inherited from <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Core::Node</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#friend-graphmanager">GraphManager</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html#friend-pin">Pin</a></strong></td></tr></tbody></table><h2 id="detailed-description" tabindex="-1">Detailed Description <a class="header-anchor" href="#detailed-description" aria-label="Permalink to &quot;Detailed Description&quot;">​</a></h2><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">template</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">EOperatorType</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Operator</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">template</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">EOperatorType</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">Operator</span><span style="color:#24292E;">;</span></span></code></pre></div><p>Implementation of <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> class.</p><p><strong>Template Parameters</strong>:</p><ul><li><strong>T</strong> Type of node to be created.</li></ul><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-operator" tabindex="-1">function Operator <a class="header-anchor" href="#function-operator" aria-label="Permalink to &quot;function Operator&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Operator</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Operator</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Creates an operator of given type (as template parameter).</p><p><strong>DON&#39;T</strong> construct object directly, use <a href="/cpp-api-reference/namespaces/namespaceCore_1_1Builder.html#function-createoperator">Core::Builder::createOperator()</a> function.</p><p>Code taken from <a href="/cpp-api-reference/namespaces/namespaceI3T.html">I3T</a> v1 Operator&lt;OperatorType&gt;::Operator(...). <a href="/cpp-api-reference/classes/classCore_1_1Operator.html">Operator</a> is no more associated with <a href="/cpp-api-reference/namespaces/namespaceGUI.html">GUI</a>, as used to be, so no input or output names are assigned here.</p><h3 id="function-operator-1" tabindex="-1">function ~Operator <a class="header-anchor" href="#function-operator-1" aria-label="Permalink to &quot;function ~Operator&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">~</span><span style="color:#B392F0;">Operator</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=default</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">~</span><span style="color:#6F42C1;">Operator</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=default</span></span></code></pre></div><h3 id="function-updatevalues" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-1" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-1" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-2" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-2" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-3" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-3" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-4" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-4" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-5" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-5" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-6" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-6" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-7" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-7" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-8" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-8" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-9" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-9" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-10" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-10" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-11" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-11" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-12" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-12" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-13" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-13" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-14" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-14" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-15" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-15" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-16" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-16" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-17" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-17" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-18" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-18" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-19" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-19" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-20" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-20" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-21" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-21" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-22" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-22" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-23" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-23" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-24" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-24" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-25" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-25" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-26" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-26" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-27" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-27" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-28" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-28" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-29" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-29" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-30" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-30" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-31" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-31" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-32" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-32" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-33" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-33" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-34" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-34" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-35" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-35" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-36" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-36" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-37" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-37" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-38" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-38" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-39" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-39" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-40" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-40" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-41" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-41" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-42" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-42" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-43" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-43" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-44" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-44" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-45" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-45" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-46" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-46" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-47" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-47" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-48" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-48" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-49" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-49" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-50" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-50" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-51" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-51" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-52" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-52" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-53" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-53" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-54" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-54" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-55" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-55" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-56" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-56" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-57" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-57" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-58" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-58" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-59" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-59" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-60" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-60" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-61" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-61" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-62" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-62" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-63" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-63" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-64" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-64" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-65" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-65" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-66" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-66" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-67" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-67" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-68" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-68" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-69" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-69" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-70" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-70" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-71" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-71" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-72" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-72" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-73" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-73" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-74" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-74" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-75" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-75" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-76" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-76" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-77" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-77" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-78" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-78" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-79" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-79" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-80" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-80" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-81" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-81" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-82" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-82" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-83" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-83" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> FORCE_INLINE </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> FORCE_INLINE </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-updatevalues-84" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues-84" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">inputIndex</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">override</span></span></code></pre></div><p>Implementation of virtual function <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Node::updateValues(int)</a>.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> ???</li></ul><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classCore_1_1Node.html#function-updatevalues">Core::Node::updateValues</a></p><p>Implementation differs for each template parameter. See end of the file for more details.</p><hr><p>Updated on 2024-10-16 at 16:58:01 +0000</p>`,711),l=[p];function o(r,c,i,d,u,h){return s(),a("div",null,l)}const y=e(t,[["render",o]]);export{E as __pageData,y as default};
