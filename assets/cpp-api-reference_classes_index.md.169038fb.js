import{_ as e,o as s,c as a,Q as r}from"./chunks/framework.0f749972.js";const u=JSON.parse('{"title":"Classes","description":"","frontmatter":{"title":"Classes"},"headers":[],"relativePath":"cpp-api-reference/classes/index.md","filePath":"cpp-api-reference/classes/index.md"}'),t={name:"cpp-api-reference/classes/index.md"},l=r('<h1 id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-label="Permalink to &quot;Classes&quot;">â€‹</a></h1><ul><li><strong>class <a href="/cpp-api-reference/classes/classaboutwindow.html">AboutWindow</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classapplication.html">Application</a></strong> &lt;br&gt;<a href="./.html">Application</a> class.</li><li><strong>class <a href="/cpp-api-reference/classes/classbeforeclosecommand.html">BeforeCloseCommand</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classbeforeexitscenestrategy.html">BeforeExitSceneStrategy</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classbeforenewtutmodal.html">BeforeNewTutModal</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structcoutredirect.html">COutRedirect</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structchoicetask.html">ChoiceTask</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classclosecommand.html">CloseCommand</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structcolor.html">Color</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classcommand.html">Command</a></strong> &lt;br&gt;Base class for all commands.</li><li><strong>struct <a href="/cpp-api-reference/classes/structconfig.html">Config</a></strong> &lt;br&gt;A configuration structure.</li><li><strong>struct <a href="/cpp-api-reference/classes/structconfiguration.html">Configuration</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classconfirmmodal.html">ConfirmModal</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classconfirmmodalstrategy.html">ConfirmModalStrategy</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classconsolecommand.html">ConsoleCommand</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespacecore.html">Core</a></strong> &lt;br&gt;File with operations table. <ul><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespacecore_1_1builder.html">Builder</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1camera.html">Camera</a></strong> &lt;br&gt;<a href="./.html">Camera</a> has following outputs 0 -&gt; screen output 1 -&gt; proj * view matrix output 2 -&gt; mul output.</li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1cycle.html">Cycle</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1data.html">Data</a></strong> &lt;br&gt;Representation of the interconnection wire value (Shared piece of memory - union of all data types passed along the wire) and of the value stored in the defaultValues map (such as fovy for Perspective)</li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1datamap.html">DataMap</a></strong> &lt;br&gt;In column-major order.</li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1graphmanager.html">GraphManager</a></strong> &lt;br&gt;You must manage <a href="./.html">GraphManager</a> lifecycle.</li><li><strong>struct <a href="/cpp-api-reference/classes/structcore_1_1halfspacesign.html">HalfspaceSign</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1imodelproxy.html">IModelProxy</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1idgenerator.html">IdGenerator</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1managedresource.html">ManagedResource</a></strong> &lt;br&gt;Base class for objects that are the actual data managed by a <a href="./.html">ResourceManager</a>.</li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1matrixtracker.html">MatrixTracker</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1mesh.html">Mesh</a></strong> &lt;br&gt;<a href="./.html">Mesh</a> represents a complete 3D model. <ul><li><strong>struct <a href="/cpp-api-reference/classes/structcore_1_1mesh_1_1material.html">Material</a></strong> &lt;br&gt;<a href="/cpp-api-reference/classes/classcore_1_1data.html">Data</a> class holding basic material information.</li><li><strong>struct <a href="/cpp-api-reference/classes/structcore_1_1mesh_1_1meshpart.html">MeshPart</a></strong> &lt;br&gt;Individual part of the bigger mesh containing separate geometry, material and textures.</li><li><strong>struct <a href="/cpp-api-reference/classes/structcore_1_1mesh_1_1textureset.html">TextureSet</a></strong> &lt;br&gt;A set of textures for multi-mapping.</li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1model.html">Model</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1modelresourcefiles.html">ModelResourceFiles</a></strong> &lt;br&gt;A set a of 3D file format files located somewhere in the filesystem.</li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a></strong> &lt;br&gt;Base class interface for all boxes.</li><li><strong>struct <a href="/cpp-api-reference/classes/structcore_1_1operation.html">Operation</a></strong> &lt;br&gt;Description of each graph node (operation enum, default label, input and output pin names and types)</li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1operator.html">Operator</a></strong> &lt;br&gt;Implementation of <a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> class.</li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1pin.html">Pin</a></strong> &lt;br&gt;<a href="./.html">Pin</a> used for connecting nodes.</li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1resource.html">Resource</a></strong> &lt;br&gt;Object holding information about a resource.</li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1resourcefiles.html">ResourceFiles</a></strong> &lt;br&gt;A collection of file paths in the filesystem that are together required to load a single resource like a model.</li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1resourcemanager.html">ResourceManager</a></strong> &lt;br&gt;<a href="/cpp-api-reference/classes/classcore_1_1resource.html">Resource</a> manager for loading resources from the filesystem. <ul><li><strong>struct <a href="/cpp-api-reference/classes/structcore_1_1resourcemanager_1_1resfilescmp.html">ResFilesCmp</a></strong></li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1sequence.html">Sequence</a></strong> &lt;br&gt;<a href="./.html">Sequence</a> of matrices. <ul><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1sequence_1_1storage.html">Storage</a></strong> &lt;br&gt;Structure for storing transform matrices.</li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1sequencetree.html">SequenceTree</a></strong><ul><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1sequencetree_1_1matrixiterator.html">MatrixIterator</a></strong> &lt;br&gt;Iterator for traversing sequence tree.</li></ul></li><li><strong>struct <a href="/cpp-api-reference/classes/structcore_1_1trackingresult.html">TrackingResult</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1transform.html">Transform</a></strong><ul><li><strong>struct <a href="/cpp-api-reference/classes/structcore_1_1transform_1_1defaultvaluepair.html">DefaultValuePair</a></strong></li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1transformimpl.html">TransformImpl</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1axisangle_01_4.html">TransformImpl&lt; ETransformType::AxisAngle &gt;</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1eulerx_01_4.html">TransformImpl&lt; ETransformType::EulerX &gt;</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1eulery_01_4.html">TransformImpl&lt; ETransformType::EulerY &gt;</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1eulerz_01_4.html">TransformImpl&lt; ETransformType::EulerZ &gt;</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1free_01_4.html">TransformImpl&lt; ETransformType::Free &gt;</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1frustum_01_4.html">TransformImpl&lt; ETransformType::Frustum &gt;</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1lookat_01_4.html">TransformImpl&lt; ETransformType::LookAt &gt;</a></strong> &lt;br&gt;Same as perspective projection node, but all values are locked.</li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1ortho_01_4.html">TransformImpl&lt; ETransformType::Ortho &gt;</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1perspective_01_4.html">TransformImpl&lt; ETransformType::Perspective &gt;</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1quat_01_4.html">TransformImpl&lt; ETransformType::Quat &gt;</a></strong> &lt;br&gt;Quaternion class Quaternion represents the matrix, crated from quaternion.</li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1scale_01_4.html">TransformImpl&lt; ETransformType::Scale &gt;</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1translation_01_4.html">TransformImpl&lt; ETransformType::Translation &gt;</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structcore_1_1transforminfo.html">TransformInfo</a></strong> &lt;br&gt;Cannot outlive the sequence.</li><li><strong>struct <a href="/cpp-api-reference/classes/structcore_1_1transformoperation.html">TransformOperation</a></strong> &lt;br&gt;Extends <a href="/cpp-api-reference/classes/structcore_1_1operation.html">Operation</a> - adds properties to transform nodes. <ul><li><strong>struct <a href="/cpp-api-reference/classes/structcore_1_1transformoperation_1_1nametypepair.html">NameTypePair</a></strong></li></ul></li><li><strong>struct <a href="/cpp-api-reference/classes/structcore_1_1valuesetresult.html">ValueSetResult</a></strong></li></ul></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespacediwne.html">DIWNE</a></strong><ul><li><strong>class <a href="/cpp-api-reference/classes/classdiwne_1_1diwne.html">Diwne</a></strong> &lt;br&gt;Object of node editor In ancestor of this object you will probably store your nodes (links, pins) It store inter-object interactions Every <a href="./.html">DiwneObject</a> has reference to this object.</li><li><strong>class <a href="/cpp-api-reference/classes/classdiwne_1_1diwneobject.html">DiwneObject</a></strong> &lt;br&gt;All objects in <a href="/cpp-api-reference/namespaces/namespacediwne.html">DIWNE</a> are inherited from <a href="./.html">DiwneObject</a><a href="./.html">DiwneObject</a> covers the functionality common to all Objects in the node editor - such as selecting, dragging, hovering,...</li><li><strong>class <a href="/cpp-api-reference/classes/classdiwne_1_1link.html">Link</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classdiwne_1_1node.html">Node</a></strong> &lt;br&gt;graphical representation od a box in the workspace node editor</li><li><strong>class <a href="/cpp-api-reference/classes/classdiwne_1_1pin.html">Pin</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structdiwne_1_1settingsdiwne.html">SettingsDiwne</a></strong> &lt;br&gt;Storage of all values.</li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classdescriptiondialog.html">DescriptionDialog</a></strong> &lt;br&gt;Scene description dialog.</li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespacedetail.html">Detail</a></strong><ul><li><strong>struct <a href="/cpp-api-reference/classes/structdetail_1_1randinitializer.html">RandInitializer</a></strong></li></ul></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceenumutils.html">EnumUtils</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structerror.html">Error</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structexplanation.html">Explanation</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespacefilesystemutils.html">FilesystemUtils</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespacegui.html">GUI</a></strong><ul><li><strong>struct <a href="/cpp-api-reference/classes/structgui_1_1inputtextcallback__userdata.html">InputTextCallback_UserData</a></strong></li></ul></li><li><strong>struct <a href="/cpp-api-reference/classes/structguiimage.html">GUIImage</a></strong> &lt;br&gt;A class for holding an image texture id with properties of the image.</li><li><strong>class <a href="/cpp-api-reference/classes/classhslcolor.html">HSLColor</a></strong> &lt;br&gt;Utility class for managing a HSL color.</li><li><strong>struct <a href="/cpp-api-reference/classes/structheadline.html">Headline</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classhidewindowcommand.html">HideWindowCommand</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structhint.html">Hint</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespacei3t.html">I3T</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classi3tapplication.html">I3TApplication</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classicommand.html">ICommand</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classistateful.html">IStateful</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classitutorialrenderer.html">ITutorialRenderer</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classivisitable.html">IVisitable</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classiwindow.html">IWindow</a></strong> &lt;br&gt;ImGui <a href="./.html">GUI</a><a href="/cpp-api-reference/classes/classwindow.html">Window</a> abstract class.</li><li><strong>class <a href="/cpp-api-reference/classes/classimportedmodelsdialog.html">ImportedModelsDialog</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structinputbindings.html">InputBindings</a></strong><ul><li><strong>struct <a href="/cpp-api-reference/classes/structinputbindings_1_1actionmapping.html">ActionMapping</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structinputbindings_1_1axismapping.html">AxisMapping</a></strong></li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classinputcontroller.html">InputController</a></strong><ul><li><strong>struct <a href="/cpp-api-reference/classes/structinputcontroller_1_1action.html">Action</a></strong></li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classinputmanager.html">InputManager</a></strong> &lt;br&gt;Class handling all GLUT interaction events (mouse and keyboard) and starting the label editor.</li><li><strong>struct <a href="/cpp-api-reference/classes/structinputtask.html">InputTask</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespacejson.html">JSON</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespacejsonrttr.html">JSONRTTR</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classkeys.html">Keys</a></strong> &lt;br&gt;Status of the keyboard keys and also mouse keys.</li><li><strong>class <a href="/cpp-api-reference/classes/classlogwindow.html">LogWindow</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classlogger.html">Logger</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structloggingtoggle.html">LoggingToggle</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classmainmenubar.html">MainMenuBar</a></strong> &lt;br&gt;Top menu bar.</li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespacemath.html">Math</a></strong> &lt;br&gt;Approximate double comparison.</li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespacemenubardialogs.html">MenuBarDialogs</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classmodalwindow.html">ModalWindow</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classmodule.html">Module</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structmultichoicetask.html">MultiChoiceTask</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classnewprojectcommand.html">NewProjectCommand</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespacenodedeserializer.html">NodeDeserializer</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classnodevisitor.html">NodeVisitor</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classoperatorbuilder.html">OperatorBuilder</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classremovemodelmodal.html">RemoveModelModal</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classscriptingmodule.html">ScriptingModule</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classserializationvisitor.html">SerializationVisitor</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classsetfocusedwindowcommand.html">SetFocusedWindowCommand</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classsettutorialcommand.html">SetTutorialCommand</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classsetupdialog.html">SetupDialog</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classstartwindow.html">StartWindow</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespacestate.html">State</a></strong><ul><li><strong>class <a href="/cpp-api-reference/classes/classstate_1_1scene.html">Scene</a></strong></li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classstatemanager.html">StateManager</a></strong> &lt;br&gt;Handles app state management.</li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespacestring.html">String</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespacesystemdialogs.html">SystemDialogs</a></strong> &lt;br&gt;A bunch of system dialogs.</li><li><strong>struct <a href="/cpp-api-reference/classes/structtstep.html">TStep</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structtask.html">Task</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classtheme.html">Theme</a></strong> &lt;br&gt;Global color scheme.</li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespacetimeutils.html">TimeUtils</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classtransformbuilder.html">TransformBuilder</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structtutorial.html">Tutorial</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structtutorialelement.html">TutorialElement</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structtutorialheader.html">TutorialHeader</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classtutorialloader.html">TutorialLoader</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classtutorialwindow.html">TutorialWindow</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceui.html">UI</a></strong><ul><li><strong>class <a href="/cpp-api-reference/classes/classui_1_1console.html">Console</a></strong> &lt;br&gt;The stdout is redirected to the console.</li><li><strong>class <a href="/cpp-api-reference/classes/classui_1_1styleeditor.html">StyleEditor</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classui_1_1viewportwindow.html">ViewportWindow</a></strong></li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classuimodule.html">UIModule</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structuserdata.html">UserData</a></strong> &lt;br&gt;This struct is reflected by RTTR.</li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceutils.html">Utils</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classviewporthighlightresolver.html">ViewportHighlightResolver</a></strong> &lt;br&gt;Manager class responsible for updating viewport model highlights based on current workspace node selection.</li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespacevp.html">Vp</a></strong><ul><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1abstractcamera.html">AbstractCamera</a></strong> &lt;br&gt;Abstract camera base class.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1abstractorbitcamera.html">AbstractOrbitCamera</a></strong> &lt;br&gt;Abstract camera that turns around a point (pivot) at a certain distance (radius).</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1aggregatecamera.html">AggregateCamera</a></strong> &lt;br&gt;Camera with multiple modes that it can seamlessly switch between.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1boxblurshader.html">BoxBlurShader</a></strong> &lt;br&gt;Two pass box blur with alpha support.</li><li><strong>struct <a href="/cpp-api-reference/classes/structvp_1_1camerasettings.html">CameraSettings</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1colorattachment.html">ColorAttachment</a></strong> &lt;br&gt;<a href="/cpp-api-reference/classes/structcolor.html">Color</a> attachment using a 2D Texture.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1colorshader.html">ColorShader</a></strong> &lt;br&gt;Basic shader to display unlit colored primitives.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1coloredobject.html">ColoredObject</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1depthattachment.html">DepthAttachment</a></strong> &lt;br&gt;Depth attachment using a Renderbuffer.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1displayoptions.html">DisplayOptions</a></strong> &lt;br&gt;Various viewport display settings.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1entity.html">Entity</a></strong> &lt;br&gt;A scene entity base class.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1framebuffer.html">Framebuffer</a></strong> &lt;br&gt;A utility class for managing an OpenGL FrameBufferObject.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1frustumobject.html">FrustumObject</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1frustumshader.html">FrustumShader</a></strong> &lt;br&gt;<a href="./.html">Shader</a> for displaying projection frustums.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1gameobject.html">GameObject</a></strong> &lt;br&gt;Regular world object entity.</li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespacevp_1_1gfxutils.html">GfxUtils</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structvp_1_1globalcamerasettings.html">GlobalCameraSettings</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structvp_1_1gridsettings.html">GridSettings</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1gridshader.html">GridShader</a></strong> &lt;br&gt;<a href="./.html">Shader</a> for the infinite grid.</li><li><strong>struct <a href="/cpp-api-reference/classes/structvp_1_1highlightsettings.html">HighlightSettings</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1light.html">Light</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1lighting.html">Lighting</a></strong> &lt;br&gt;Class that manages passing of light information to shaders.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1mainscene.html">MainScene</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structvp_1_1mainscenesettings.html">MainSceneSettings</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1manipulators.html">Manipulators</a></strong><ul><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1manipulators_1_1manipulator.html">Manipulator</a></strong></li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1objectshader.html">ObjectShader</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1orbitcamera.html">OrbitCamera</a></strong> &lt;br&gt;Camera turning around a point using an azimuth and elevation angle.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1phongshader.html">PhongShader</a></strong> &lt;br&gt;<a href="./.html">Shader</a> for lit objects with textures.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1pointlight.html">PointLight</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1previewscene.html">PreviewScene</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1renderoptions.html">RenderOptions</a></strong> &lt;br&gt;Options specifying how a scene should be rendered.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1scene.html">Scene</a></strong> &lt;br&gt;A scene representing a &quot;game world&quot; that contains entities and is viewed by a camera.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1scenecamera.html">SceneCamera</a></strong> &lt;br&gt;<a href="./.html">Viewport</a> entity representing a Camera node in Core/GUI.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1scenemodel.html">SceneModel</a></strong> &lt;br&gt;<a href="./.html">Viewport</a> entity representing a Model node in Core/GUI.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1scenerendertarget.html">SceneRenderTarget</a></strong> &lt;br&gt;A set of framebuffers and their settings into which a <a href="/cpp-api-reference/classes/classvp_1_1scene.html">Scene</a> can draw.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1screenoverlayshader.html">ScreenOverlayShader</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1selectstencil.html">SelectStencil</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1selectioncompositeshader.html">SelectionCompositeShader</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1shader.html">Shader</a></strong> &lt;br&gt;Base class for shaders.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1shaders.html">Shaders</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1shaper.html">Shaper</a></strong> &lt;br&gt;A utility class for constructing simple shapes.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1spotlight.html">SpotLight</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1sunlight.html">SunLight</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1texturedobject.html">TexturedObject</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1trackball.html">Trackball</a></strong> &lt;br&gt;Static utility class for trackball interaction.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1trackballcamera.html">TrackballCamera</a></strong> &lt;br&gt;Camera turning around a point using a virtual screen-space trackball.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1viewport.html">Viewport</a></strong> &lt;br&gt;<a href="/cpp-api-reference/classes/classvp_1_1scene.html">Scene</a> viewport class.</li><li><strong>struct <a href="/cpp-api-reference/classes/structvp_1_1viewportglobalsettings.html">ViewportGlobalSettings</a></strong> &lt;br&gt;Global viewport settings, some used only for initialisation, some used during runtime.</li><li><strong>struct <a href="/cpp-api-reference/classes/structvp_1_1viewportscenesettings.html">ViewportSceneSettings</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structvp_1_1viewportsettings.html">ViewportSettings</a></strong> &lt;br&gt;A collection of viewport settings.</li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1wboitcompositeshader.html">WBOITCompositeShader</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classvp_1_1worldshader.html">WorldShader</a></strong> &lt;br&gt;Abstract shader that provides PVM matrices uniforms.</li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classwindow.html">Window</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classwindowmanager.html">WindowManager</a></strong> &lt;br&gt;<a href="./.html">Application</a> window manager.</li><li><strong>class <a href="/cpp-api-reference/classes/classworkspaceangleaxistoquat.html">WorkspaceAngleAxisToQuat</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacecamera.html">WorkspaceCamera</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacecoreinputpin.html">WorkspaceCoreInputPin</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacecoreinputpinmatrixmul.html">WorkspaceCoreInputPinMatrixMul</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacecorelink.html">WorkspaceCoreLink</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacecoreoutputpin.html">WorkspaceCoreOutputPin</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacecoreoutputpinfloat.html">WorkspaceCoreOutputPinFloat</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacecoreoutputpinmatrix4x4.html">WorkspaceCoreOutputPinMatrix4x4</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacecoreoutputpinmatrixmul.html">WorkspaceCoreOutputPinMatrixMul</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacecoreoutputpinpulse.html">WorkspaceCoreOutputPinPulse</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacecoreoutputpinquaternion.html">WorkspaceCoreOutputPinQuaternion</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacecoreoutputpinscreen.html">WorkspaceCoreOutputPinScreen</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacecoreoutputpinvector3.html">WorkspaceCoreOutputPinVector3</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacecoreoutputpinvector4.html">WorkspaceCoreOutputPinVector4</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacecoreoutputpinwithdata.html">WorkspaceCoreOutputPinWithData</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacecorepin.html">WorkspaceCorePin</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacecorepinproperties.html">WorkspaceCorePinProperties</a></strong> &lt;br&gt;Information of Pin for graphic.</li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacecycle.html">WorkspaceCycle</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacediwne.html">WorkspaceDiwne</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacemodel.html">WorkspaceModel</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacemodelproxy.html">WorkspaceModelProxy</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacenode.html">WorkspaceNode</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacenodewithcoredata.html">WorkspaceNodeWithCoreData</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacenodewithcoredatawithpins.html">WorkspaceNodeWithCoreDataWithPins</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspaceoperator.html">WorkspaceOperator</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacepin.html">WorkspacePin</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacescreen.html">WorkspaceScreen</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacesequence.html">WorkspaceSequence</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacetransformation.html">WorkspaceTransformation</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacetransformation__s.html">WorkspaceTransformation_s</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classworkspacewindow.html">WorkspaceWindow</a></strong> &lt;br&gt;Class for Workspace window object, stores everything what Workspace window need.</li></ul><hr><p>Updated on 2024-03-16 at 18:59:45 +0000</p>',4),c=[l];function n(i,o,p,g,h,f){return s(),a("div",null,c)}const _=e(t,[["render",n]]);export{u as __pageData,_ as default};
