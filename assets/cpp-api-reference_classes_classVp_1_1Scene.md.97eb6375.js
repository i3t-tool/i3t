import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.0f749972.js";const g=JSON.parse('{"title":"Vp::Scene","description":"","frontmatter":{"title":"Vp::Scene","summary":"A scene representing a \\"game world\\" that contains entities and is viewed by a camera."},"headers":[],"relativePath":"cpp-api-reference/classes/classVp_1_1Scene.md","filePath":"cpp-api-reference/classes/classVp_1_1Scene.md"}'),l={name:"cpp-api-reference/classes/classVp_1_1Scene.md"},t=e(`<h1 id="vp-scene" tabindex="-1">Vp::Scene <a class="header-anchor" href="#vp-scene" aria-label="Permalink to &quot;Vp::Scene&quot;">​</a></h1><p>A scene representing a &quot;game world&quot; that contains entities and is viewed by a camera. <a href="#detailed-description">More...</a></p><p><code>#include &quot;Viewport/scene/Scene.h&quot;</code></p><p>Inherited by <a href="/cpp-api-reference/classes/classVp_1_1MainScene.html">Vp::MainScene</a>, <a href="/cpp-api-reference/classes/classVp_1_1PreviewScene.html">Vp::PreviewScene</a></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#function-scene">Scene</a></strong>(<a href="/cpp-api-reference/classes/classVp_1_1Viewport.html">Viewport</a> * viewport)</td></tr><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#function-~scene">~Scene</a></strong>() =default</td></tr><tr><td>template &lt;typename T ,typename std::enable_if&lt; std::is_base_of&lt; Entity, T &gt;::value, bool &gt;::type =true&amp;gt; &lt;br&gt;std::weak_ptr&lt; T &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#function-addentity">addEntity</a></strong>(std::shared_ptr&lt; T &gt; entity)&lt;br&gt;Adds entity to the scene.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#function-addselectioncallback">addSelectionCallback</a></strong>(std::function&lt; void(<a href="/cpp-api-reference/classes/classVp_1_1Entity.html">Entity</a> *)&gt; callback)</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classVp_1_1SceneRenderTarget.html">SceneRenderTarget</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#function-createrendertarget">createRenderTarget</a></strong>(const <a href="/cpp-api-reference/classes/classVp_1_1RenderOptions.html">RenderOptions</a> &amp; options)&lt;br&gt;Create and populates a <a href="./.html">SceneRenderTarget</a> object with expected framebuffer objects for the scenes render pass.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#function-draw">draw</a></strong>(int width, int height, glm::mat4 view, glm::mat4 projection, <a href="/cpp-api-reference/classes/classVp_1_1SceneRenderTarget.html">SceneRenderTarget</a> &amp; renderTarget, const <a href="/cpp-api-reference/classes/classVp_1_1DisplayOptions.html">DisplayOptions</a> &amp; displayOptions)&lt;br&gt;Draw the scene using the provided view and projection matrices.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#function-draw">draw</a></strong>(int width, int height, <a href="/cpp-api-reference/classes/classVp_1_1SceneRenderTarget.html">SceneRenderTarget</a> &amp; renderTarget, const <a href="/cpp-api-reference/classes/classVp_1_1DisplayOptions.html">DisplayOptions</a> &amp; displayOptions)&lt;br&gt;Draw the scene using the scene&#39;s camera.</td></tr><tr><td>const std::vector&lt; std::shared_ptr&lt; <a href="/cpp-api-reference/classes/classVp_1_1Entity.html">Entity</a> &gt; &gt; &amp;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#function-getentities">getEntities</a></strong>() const</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#function-init">init</a></strong>()&lt;br&gt;Initialises the scene.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#function-loadsettings">loadSettings</a></strong>(<a href="/cpp-api-reference/classes/structVp_1_1ViewportSettings.html">ViewportSettings</a> &amp; stg, bool scene, bool global)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#function-processinput">processInput</a></strong>(double dt, glm::vec2 mousePos, glm::ivec2 windowSize)&lt;br&gt;Update input logic.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#function-processselection">processSelection</a></strong>(<a href="/cpp-api-reference/classes/classVp_1_1SceneRenderTarget.html">SceneRenderTarget</a> &amp; renderTarget, glm::vec2 mousePos, glm::ivec2 windowSize)&lt;br&gt;Update selection logic.</td></tr><tr><td>template &lt;typename T ,typename std::enable_if&lt; std::is_base_of&lt; Entity, T &gt;::value, bool &gt;::type =true&amp;gt; &lt;br&gt;void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#function-removeentity">removeEntity</a></strong>(std::weak_ptr&lt; T &gt; entity)&lt;br&gt;Remove entity from the scene.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#function-savesettings">saveSettings</a></strong>(<a href="/cpp-api-reference/classes/structVp_1_1ViewportSettings.html">ViewportSettings</a> &amp; stg, bool scene, bool global)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#function-triggerselectioncallbacks">triggerSelectionCallbacks</a></strong>(<a href="/cpp-api-reference/classes/classVp_1_1Entity.html">Entity</a> * entity)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#function-update">update</a></strong>(double dt)&lt;br&gt;Update entity logic.</td></tr></tbody></table><h2 id="protected-functions" tabindex="-1">Protected Functions <a class="header-anchor" href="#protected-functions" aria-label="Permalink to &quot;Protected Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#function-rendersortedtransparententities">renderSortedTransparentEntities</a></strong>(glm::mat4 view, glm::mat4 projection, const std::vector&lt; <a href="/cpp-api-reference/classes/classVp_1_1Entity.html">Entity</a> * &gt; &amp; entities) const</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#function-sortexplicitlyorderedtransparententities">sortExplicitlyOrderedTransparentEntities</a></strong>(std::vector&lt; <a href="/cpp-api-reference/classes/classVp_1_1Entity.html">Entity</a> * &gt; &amp; entities)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#function-sortunorderedtransparententities">sortUnorderedTransparentEntities</a></strong>(glm::mat4 view, std::vector&lt; <a href="/cpp-api-reference/classes/classVp_1_1Entity.html">Entity</a> * &gt; &amp; entities)</td></tr></tbody></table><h2 id="public-attributes" tabindex="-1">Public Attributes <a class="header-anchor" href="#public-attributes" aria-label="Permalink to &quot;Public Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>std::shared_ptr&lt; <a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html">AbstractCamera</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#variable-m-camera">m_camera</a></strong></td></tr><tr><td>std::shared_ptr&lt; <a href="/cpp-api-reference/classes/classVp_1_1Lighting.html">Lighting</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#variable-m-lighting">m_lighting</a></strong></td></tr><tr><td>std::shared_ptr&lt; <a href="/cpp-api-reference/classes/classVp_1_1SelectStencil.html">SelectStencil</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#variable-m-selectstencil">m_selectStencil</a></strong></td></tr><tr><td><a href="/cpp-api-reference/classes/classVp_1_1Viewport.html">Viewport</a> *</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#variable-m-viewport">m_viewport</a></strong></td></tr></tbody></table><h2 id="protected-attributes" tabindex="-1">Protected Attributes <a class="header-anchor" href="#protected-attributes" aria-label="Permalink to &quot;Protected Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>std::vector&lt; std::shared_ptr&lt; <a href="/cpp-api-reference/classes/classVp_1_1Entity.html">Entity</a> &gt; &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#variable-m-entities">m_entities</a></strong></td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classVp_1_1Entity.html">Entity</a> * &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#variable-m-explicittransparencyorderentitiesfirst">m_explicitTransparencyOrderEntitiesFirst</a></strong></td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classVp_1_1Entity.html">Entity</a> * &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#variable-m-explicittransparencyorderentitieslast">m_explicitTransparencyOrderEntitiesLast</a></strong></td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classVp_1_1Entity.html">Entity</a> * &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#variable-m-highlightedentities">m_highlightedEntities</a></strong></td></tr><tr><td><a href="/cpp-api-reference/classes/classVp_1_1Entity.html">Entity</a> *</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#variable-m-selectedentity">m_selectedEntity</a></strong></td></tr><tr><td>std::vector&lt; std::function&lt; void(<a href="/cpp-api-reference/classes/classVp_1_1Entity.html">Entity</a> *)&gt; &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#variable-m-selectioncallbacks">m_selectionCallbacks</a></strong> &lt;br&gt;Callbacks that get triggered on entity selection.</td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classVp_1_1Entity.html">Entity</a> * &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#variable-m-unorderedtransparententities">m_unorderedTransparentEntities</a></strong></td></tr></tbody></table><h2 id="friends" tabindex="-1">Friends <a class="header-anchor" href="#friends" aria-label="Permalink to &quot;Friends&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Scene.html#friend-viewport">Viewport</a></strong></td></tr></tbody></table><h2 id="detailed-description" tabindex="-1">Detailed Description <a class="header-anchor" href="#detailed-description" aria-label="Permalink to &quot;Detailed Description&quot;">​</a></h2><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Vp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Scene</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Vp</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">Scene</span><span style="color:#24292E;">;</span></span></code></pre></div><p>A scene representing a &quot;game world&quot; that contains entities and is viewed by a camera.</p><p>Handles drawing and logic updates.</p><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-scene" tabindex="-1">function Scene <a class="header-anchor" href="#function-scene" aria-label="Permalink to &quot;function Scene&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">explicit</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Scene</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    Viewport </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> viewport</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">explicit</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Scene</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    Viewport </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> viewport</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-scene-1" tabindex="-1">function ~Scene <a class="header-anchor" href="#function-scene-1" aria-label="Permalink to &quot;function ~Scene&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">~</span><span style="color:#B392F0;">Scene</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">=default</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">~</span><span style="color:#6F42C1;">Scene</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">=default</span></span></code></pre></div><h3 id="function-addentity" tabindex="-1">function addEntity <a class="header-anchor" href="#function-addentity" aria-label="Permalink to &quot;function addEntity&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">template</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">typename</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> ,</span></span>
<span class="line"><span style="color:#F97583;">typename</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">enable_if</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">is_base_of</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Entity</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> &gt;::</span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> &gt;::</span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">=true</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">weak_ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">addEntity</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">shared_ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#FFAB70;">entity</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">template</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">typename</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> ,</span></span>
<span class="line"><span style="color:#D73A49;">typename</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">enable_if</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">is_base_of</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Entity</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> &gt;::</span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> &gt;::</span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">=true</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">weak_ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">addEntity</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">shared_ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> &gt; </span><span style="color:#E36209;">entity</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Adds entity to the scene.</p><p><strong>Parameters</strong>:</p><ul><li><strong>entity</strong> A shared pointer to the entity to add. This pointer should be destroyed afterwards.</li></ul><p><strong>Template Parameters</strong>:</p><ul><li><strong>T</strong> Any derived type of <a href="/cpp-api-reference/classes/classVp_1_1Entity.html">Entity</a></li></ul><p><strong>Return</strong>: A weak pointer to the added entity of said type.</p><p><a href="/cpp-api-reference/classes/classVp_1_1Entity.html">Entity</a> is added via a shared pointer which is copied and stored. The original pointer should be discarded after this call and the weak reference can be further used.</p><h3 id="function-addselectioncallback" tabindex="-1">function addSelectionCallback <a class="header-anchor" href="#function-addselectioncallback" aria-label="Permalink to &quot;function addSelectionCallback&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">addSelectionCallback</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">function</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Entity</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">)&gt; </span><span style="color:#FFAB70;">callback</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">addSelectionCallback</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">function</span><span style="color:#24292E;">&lt; </span><span style="color:#D73A49;">void</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Entity</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)&gt; </span><span style="color:#E36209;">callback</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-createrendertarget" tabindex="-1">function createRenderTarget <a class="header-anchor" href="#function-createrendertarget" aria-label="Permalink to &quot;function createRenderTarget&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">SceneRenderTarget</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">createRenderTarget</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RenderOptions</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">options</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">SceneRenderTarget</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">createRenderTarget</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RenderOptions</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">options</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Create and populates a <a href="./.html">SceneRenderTarget</a> object with expected framebuffer objects for the scenes render pass.</p><p><strong>Parameters</strong>:</p><ul><li><strong>options</strong> Relevant render options to take into account during render target creation</li></ul><p><strong>Return</strong>: Owning pointer to the created render target object</p><p>Individual framebuffers are only identified by their index in the render target framebuffer array. It is expected that these indexes are kept track of somewhere else, or just expected to be a certain way.</p><h3 id="function-draw" tabindex="-1">function draw <a class="header-anchor" href="#function-draw" aria-label="Permalink to &quot;function draw&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">draw</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">width</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">height</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">mat4</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">view</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">mat4</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">projection</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">SceneRenderTarget</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">renderTarget</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DisplayOptions</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">displayOptions</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">draw</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">width</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">height</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">mat4</span><span style="color:#24292E;"> </span><span style="color:#E36209;">view</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">mat4</span><span style="color:#24292E;"> </span><span style="color:#E36209;">projection</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">SceneRenderTarget</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">renderTarget</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DisplayOptions</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">displayOptions</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Draw the scene using the provided view and projection matrices.</p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classVp_1_1MainScene.html#function-draw">Vp::MainScene::draw</a></p><h3 id="function-draw-1" tabindex="-1">function draw <a class="header-anchor" href="#function-draw-1" aria-label="Permalink to &quot;function draw&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">draw</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">width</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">height</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">SceneRenderTarget</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">renderTarget</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DisplayOptions</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">displayOptions</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">draw</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">width</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">height</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">SceneRenderTarget</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">renderTarget</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DisplayOptions</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">displayOptions</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Draw the scene using the scene&#39;s camera.</p><p><strong>Parameters</strong>:</p><ul><li><strong>width</strong> Width of the</li></ul><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classVp_1_1MainScene.html#function-draw">Vp::MainScene::draw</a></p><h3 id="function-getentities" tabindex="-1">function getEntities <a class="header-anchor" href="#function-getentities" aria-label="Permalink to &quot;function getEntities&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vector</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">shared_ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Entity</span><span style="color:#E1E4E8;"> &gt; &gt; </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getEntities</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vector</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">shared_ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Entity</span><span style="color:#24292E;"> &gt; &gt; </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getEntities</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-init" tabindex="-1">function init <a class="header-anchor" href="#function-init" aria-label="Permalink to &quot;function init&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">init</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">init</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Initialises the scene.</p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classVp_1_1MainScene.html#function-init">Vp::MainScene::init</a>, <a href="/cpp-api-reference/classes/classVp_1_1PreviewScene.html#function-init">Vp::PreviewScene::init</a></p><p>Should be called before any draw operations.</p><h3 id="function-loadsettings" tabindex="-1">function loadSettings <a class="header-anchor" href="#function-loadsettings" aria-label="Permalink to &quot;function loadSettings&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">loadSettings</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">ViewportSettings</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">stg</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">scene</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">global</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">loadSettings</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">ViewportSettings</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">stg</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">scene</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">global</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classVp_1_1MainScene.html#function-loadsettings">Vp::MainScene::loadSettings</a></p><h3 id="function-processinput" tabindex="-1">function processInput <a class="header-anchor" href="#function-processinput" aria-label="Permalink to &quot;function processInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processInput</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">double</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">dt</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vec2</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">mousePos</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">ivec2</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">windowSize</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processInput</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> </span><span style="color:#E36209;">dt</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vec2</span><span style="color:#24292E;"> </span><span style="color:#E36209;">mousePos</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">ivec2</span><span style="color:#24292E;"> </span><span style="color:#E36209;">windowSize</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Update input logic.</p><p><strong>Parameters</strong>:</p><ul><li><strong>dt</strong> Time since last frame</li><li><strong>mousePos</strong> Current mouse position relative to the window</li><li><strong>windowSize</strong> Current window size</li></ul><h3 id="function-processselection" tabindex="-1">function processSelection <a class="header-anchor" href="#function-processselection" aria-label="Permalink to &quot;function processSelection&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processSelection</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">SceneRenderTarget</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">renderTarget</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vec2</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">mousePos</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">ivec2</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">windowSize</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processSelection</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">SceneRenderTarget</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">renderTarget</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vec2</span><span style="color:#24292E;"> </span><span style="color:#E36209;">mousePos</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">ivec2</span><span style="color:#24292E;"> </span><span style="color:#E36209;">windowSize</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Update selection logic.</p><p><strong>Parameters</strong>:</p><ul><li><strong>diwne</strong></li><li><strong>renderTarget</strong> <a href="/cpp-api-reference/classes/classVp_1_1Scene.html">Scene</a>&#39;s render target</li><li><strong>mousePos</strong> Current mouse position relative to the window</li><li><strong>windowSize</strong> Current window size</li></ul><h3 id="function-removeentity" tabindex="-1">function removeEntity <a class="header-anchor" href="#function-removeentity" aria-label="Permalink to &quot;function removeEntity&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">template</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">typename</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> ,</span></span>
<span class="line"><span style="color:#F97583;">typename</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">enable_if</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">is_base_of</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Entity</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> &gt;::</span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> &gt;::</span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">=true</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">removeEntity</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">weak_ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#FFAB70;">entity</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">template</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">typename</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> ,</span></span>
<span class="line"><span style="color:#D73A49;">typename</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">enable_if</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">is_base_of</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Entity</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> &gt;::</span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> &gt;::</span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">=true</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">removeEntity</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">weak_ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> &gt; </span><span style="color:#E36209;">entity</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Remove entity from the scene.</p><p><strong>Parameters</strong>:</p><ul><li><strong>entity</strong></li></ul><p><strong>Template Parameters</strong>:</p><ul><li><strong>T</strong> Any derived type of <a href="/cpp-api-reference/classes/classVp_1_1Entity.html">Entity</a></li></ul><p>The entity is passed as a weak pointer previously acquired by <a href="/cpp-api-reference/classes/classVp_1_1Scene.html#function-addentity">addEntity()</a></p><h3 id="function-savesettings" tabindex="-1">function saveSettings <a class="header-anchor" href="#function-savesettings" aria-label="Permalink to &quot;function saveSettings&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">saveSettings</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">ViewportSettings</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">stg</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">scene</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">global</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">saveSettings</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">ViewportSettings</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">stg</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">scene</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">global</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classVp_1_1MainScene.html#function-savesettings">Vp::MainScene::saveSettings</a></p><h3 id="function-triggerselectioncallbacks" tabindex="-1">function triggerSelectionCallbacks <a class="header-anchor" href="#function-triggerselectioncallbacks" aria-label="Permalink to &quot;function triggerSelectionCallbacks&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">triggerSelectionCallbacks</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Entity</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">entity</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">triggerSelectionCallbacks</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Entity</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">entity</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-update" tabindex="-1">function update <a class="header-anchor" href="#function-update" aria-label="Permalink to &quot;function update&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">double</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">dt</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">update</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> </span><span style="color:#E36209;">dt</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Update entity logic.</p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classVp_1_1MainScene.html#function-update">Vp::MainScene::update</a></p><h2 id="protected-functions-documentation" tabindex="-1">Protected Functions Documentation <a class="header-anchor" href="#protected-functions-documentation" aria-label="Permalink to &quot;Protected Functions Documentation&quot;">​</a></h2><h3 id="function-rendersortedtransparententities" tabindex="-1">function renderSortedTransparentEntities <a class="header-anchor" href="#function-rendersortedtransparententities" aria-label="Permalink to &quot;function renderSortedTransparentEntities&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">renderSortedTransparentEntities</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">mat4</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">view</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">mat4</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">projection</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vector</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Entity</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">entities</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">renderSortedTransparentEntities</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">mat4</span><span style="color:#24292E;"> </span><span style="color:#E36209;">view</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">mat4</span><span style="color:#24292E;"> </span><span style="color:#E36209;">projection</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vector</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Entity</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> &gt; </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">entities</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-sortexplicitlyorderedtransparententities" tabindex="-1">function sortExplicitlyOrderedTransparentEntities <a class="header-anchor" href="#function-sortexplicitlyorderedtransparententities" aria-label="Permalink to &quot;function sortExplicitlyOrderedTransparentEntities&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sortExplicitlyOrderedTransparentEntities</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vector</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Entity</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">entities</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sortExplicitlyOrderedTransparentEntities</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vector</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Entity</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> &gt; </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">entities</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-sortunorderedtransparententities" tabindex="-1">function sortUnorderedTransparentEntities <a class="header-anchor" href="#function-sortunorderedtransparententities" aria-label="Permalink to &quot;function sortUnorderedTransparentEntities&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sortUnorderedTransparentEntities</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">mat4</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">view</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vector</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Entity</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">entities</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sortUnorderedTransparentEntities</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">mat4</span><span style="color:#24292E;"> </span><span style="color:#E36209;">view</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vector</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Entity</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> &gt; </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">entities</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="public-attributes-documentation" tabindex="-1">Public Attributes Documentation <a class="header-anchor" href="#public-attributes-documentation" aria-label="Permalink to &quot;Public Attributes Documentation&quot;">​</a></h2><h3 id="variable-m-camera" tabindex="-1">variable m_camera <a class="header-anchor" href="#variable-m-camera" aria-label="Permalink to &quot;variable m_camera&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::shared_ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> AbstractCamera </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_camera;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::shared_ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> AbstractCamera </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_camera;</span></span></code></pre></div><h3 id="variable-m-lighting" tabindex="-1">variable m_lighting <a class="header-anchor" href="#variable-m-lighting" aria-label="Permalink to &quot;variable m_lighting&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::shared_ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> Lighting </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_lighting;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::shared_ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Lighting </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_lighting;</span></span></code></pre></div><h3 id="variable-m-selectstencil" tabindex="-1">variable m_selectStencil <a class="header-anchor" href="#variable-m-selectstencil" aria-label="Permalink to &quot;variable m_selectStencil&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::shared_ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> SelectStencil </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_selectStencil;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::shared_ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> SelectStencil </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_selectStencil;</span></span></code></pre></div><h3 id="variable-m-viewport" tabindex="-1">variable m_viewport <a class="header-anchor" href="#variable-m-viewport" aria-label="Permalink to &quot;variable m_viewport&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Viewport </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> m_viewport;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Viewport </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> m_viewport;</span></span></code></pre></div><h2 id="protected-attributes-documentation" tabindex="-1">Protected Attributes Documentation <a class="header-anchor" href="#protected-attributes-documentation" aria-label="Permalink to &quot;Protected Attributes Documentation&quot;">​</a></h2><h3 id="variable-m-entities" tabindex="-1">variable m_entities <a class="header-anchor" href="#variable-m-entities" aria-label="Permalink to &quot;variable m_entities&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::shared_ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> Entity </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_entities;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::shared_ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Entity </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_entities;</span></span></code></pre></div><h3 id="variable-m-explicittransparencyorderentitiesfirst" tabindex="-1">variable m_explicitTransparencyOrderEntitiesFirst <a class="header-anchor" href="#variable-m-explicittransparencyorderentitiesfirst" aria-label="Permalink to &quot;variable m_explicitTransparencyOrderEntitiesFirst&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> Entity </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_explicitTransparencyOrderEntitiesFirst;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Entity </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_explicitTransparencyOrderEntitiesFirst;</span></span></code></pre></div><h3 id="variable-m-explicittransparencyorderentitieslast" tabindex="-1">variable m_explicitTransparencyOrderEntitiesLast <a class="header-anchor" href="#variable-m-explicittransparencyorderentitieslast" aria-label="Permalink to &quot;variable m_explicitTransparencyOrderEntitiesLast&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> Entity </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_explicitTransparencyOrderEntitiesLast;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Entity </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_explicitTransparencyOrderEntitiesLast;</span></span></code></pre></div><h3 id="variable-m-highlightedentities" tabindex="-1">variable m_highlightedEntities <a class="header-anchor" href="#variable-m-highlightedentities" aria-label="Permalink to &quot;variable m_highlightedEntities&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> Entity </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_highlightedEntities;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Entity </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_highlightedEntities;</span></span></code></pre></div><h3 id="variable-m-selectedentity" tabindex="-1">variable m_selectedEntity <a class="header-anchor" href="#variable-m-selectedentity" aria-label="Permalink to &quot;variable m_selectedEntity&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Entity </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> m_selectedEntity </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nullptr</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Entity </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> m_selectedEntity </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nullptr</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-m-selectioncallbacks" tabindex="-1">variable m_selectionCallbacks <a class="header-anchor" href="#variable-m-selectioncallbacks" aria-label="Permalink to &quot;variable m_selectionCallbacks&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::function</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">(Entity </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_selectionCallbacks;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::function</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;">(Entity </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_selectionCallbacks;</span></span></code></pre></div><p>Callbacks that get triggered on entity selection.</p><h3 id="variable-m-unorderedtransparententities" tabindex="-1">variable m_unorderedTransparentEntities <a class="header-anchor" href="#variable-m-unorderedtransparententities" aria-label="Permalink to &quot;variable m_unorderedTransparentEntities&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> Entity </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_unorderedTransparentEntities;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Entity </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_unorderedTransparentEntities;</span></span></code></pre></div><h2 id="friends-1" tabindex="-1">Friends <a class="header-anchor" href="#friends-1" aria-label="Permalink to &quot;Friends&quot;">​</a></h2><h3 id="friend-viewport" tabindex="-1">friend Viewport <a class="header-anchor" href="#friend-viewport" aria-label="Permalink to &quot;friend Viewport&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">friend</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Viewport</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Viewport</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">friend</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Viewport</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Viewport</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre></div><hr><p>Updated on 2025-01-23 at 08:58:54 +0000</p>`,125),p=[t];function o(r,c,i,y,E,d){return a(),n("div",null,p)}const u=s(l,[["render",o]]);export{g as __pageData,u as default};
