import{_ as t,o as a,c as e,Q as r}from"./chunks/framework.0f749972.js";const g=JSON.parse('{"title":"LoadWindowLayoutFromStringCommand","description":"","frontmatter":{"title":"LoadWindowLayoutFromStringCommand"},"headers":[],"relativePath":"cpp-api-reference/classes/classLoadWindowLayoutFromStringCommand.md","filePath":"cpp-api-reference/classes/classLoadWindowLayoutFromStringCommand.md"}'),o={name:"cpp-api-reference/classes/classLoadWindowLayoutFromStringCommand.md"},d=r('<h1 id="loadwindowlayoutfromstringcommand" tabindex="-1">LoadWindowLayoutFromStringCommand <a class="header-anchor" href="#loadwindowlayoutfromstringcommand" aria-label="Permalink to &quot;LoadWindowLayoutFromStringCommand&quot;">​</a></h1><p><code>#include &quot;Commands/ApplicationCommands.h&quot;</code></p><p>Inherits from <a href="/cpp-api-reference/classes/classCommand.html">Command&lt; LoadWindowLayoutFromStringCommand, std::string &gt;</a>, <a href="/cpp-api-reference/classes/classICommand.html">ICommand</a></p><h2 id="additional-inherited-members" tabindex="-1">Additional inherited members <a class="header-anchor" href="#additional-inherited-members" aria-label="Permalink to &quot;Additional inherited members&quot;">​</a></h2><p><strong>Public Types inherited from <a href="/cpp-api-reference/classes/classCommand.html">Command&lt; LoadWindowLayoutFromStringCommand, std::string &gt;</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>typedef std::function&lt; void(Args &amp;...)&gt;</td><td><strong><a href="/cpp-api-reference/classes/classCommand.html#typedef-callback">Callback</a></strong></td></tr></tbody></table><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/classCommand.html">Command&lt; LoadWindowLayoutFromStringCommand, std::string &gt;</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classCommand.html#function-command">Command</a></strong>() =default</td></tr><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/classCommand.html#function-~command">~Command</a></strong>() =default</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classCommand.html#function-execute">execute</a></strong>() override&lt;br&gt;Call all callbacks.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCommand.html#function-addlistener">addListener</a></strong>(<a href="/cpp-api-reference/classes/classCommand.html#typedef-callback">Callback</a> function)&lt;br&gt;Add a listener for a command.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCommand.html#function-dispatch">dispatch</a></strong>(Args... args)&lt;br&gt;Tell application that command was issued.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classCommand.html#function-dispatchimmediate">dispatchImmediate</a></strong>(Args... args)</td></tr></tbody></table><p><strong>Protected Functions inherited from <a href="/cpp-api-reference/classes/classCommand.html">Command&lt; LoadWindowLayoutFromStringCommand, std::string &gt;</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classCommand.html#function-command">Command</a></strong>(const std::tuple&lt; Args... &gt; &amp; args)&lt;br&gt;Copy a command and its arguments.</td></tr></tbody></table><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/classICommand.html">ICommand</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/classICommand.html#function-~icommand">~ICommand</a></strong>() =default</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classICommand.html#function-execute">execute</a></strong>() =0</td></tr></tbody></table><hr><p>Updated on 2025-01-07 at 10:31:20 +0000</p>',14),n=[d];function s(m,c,i,l,p,h){return a(),e("div",null,n)}const u=t(o,[["render",s]]);export{g as __pageData,u as default};
