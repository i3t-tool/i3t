import{_ as s,o as t,c as a,Q as e}from"./chunks/framework.0f749972.js";const f=JSON.parse('{"title":"ScriptingModule","description":"","frontmatter":{"title":"ScriptingModule"},"headers":[],"relativePath":"cpp-api-reference/classes/classScriptingModule.md","filePath":"cpp-api-reference/classes/classScriptingModule.md"}'),n={name:"cpp-api-reference/classes/classScriptingModule.md"},o=e(`<h1 id="scriptingmodule" tabindex="-1">ScriptingModule <a class="header-anchor" href="#scriptingmodule" aria-label="Permalink to &quot;ScriptingModule&quot;">​</a></h1><p><code>#include &quot;Scripting/ScriptingModule.h&quot;</code></p><p>Inherits from <a href="/cpp-api-reference/classes/classmodule.html">Module</a></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>std::ostringstream &amp;</td><td><strong><a href="/cpp-api-reference/classes/classscriptingmodule.html#function-outputstream">outputStream</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classscriptingmodule.html#function-runscript">runScript</a></strong>(const char * luaSource)</td></tr></tbody></table><h2 id="additional-inherited-members" tabindex="-1">Additional inherited members <a class="header-anchor" href="#additional-inherited-members" aria-label="Permalink to &quot;Additional inherited members&quot;">​</a></h2><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/classmodule.html">Module</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classmodule.html#function-module">Module</a></strong>() =default</td></tr><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/classmodule.html#function-~module">~Module</a></strong>() =default</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classmodule.html#function-onbeginframe">onBeginFrame</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classmodule.html#function-onclose">onClose</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classmodule.html#function-onendframe">onEndFrame</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classmodule.html#function-onupdate">onUpdate</a></strong>(double delta)</td></tr></tbody></table><p><strong>Friends inherited from <a href="/cpp-api-reference/classes/classmodule.html">Module</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classmodule.html#friend-application">Application</a></strong></td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-outputstream" tabindex="-1">function outputStream <a class="header-anchor" href="#function-outputstream" aria-label="Permalink to &quot;function outputStream&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">ostringstream</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">outputStream</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">ostringstream</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">outputStream</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-runscript" tabindex="-1">function runScript <a class="header-anchor" href="#function-runscript" aria-label="Permalink to &quot;function runScript&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">runScript</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">luaSource</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">runScript</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">luaSource</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><hr><p>Updated on 2024-03-16 at 18:59:45 +0000</p>`,17),l=[o];function r(c,p,i,d,u,h){return t(),a("div",null,l)}const g=s(n,[["render",r]]);export{f as __pageData,g as default};
