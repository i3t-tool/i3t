import{_ as s,o as e,c as a,Q as n}from"./chunks/framework.0f749972.js";const E=JSON.parse('{"title":"DIWNE::DiwneObject","description":"","frontmatter":{"title":"DIWNE::DiwneObject","summary":"All objects in DIWNE are inherited from DiwneObjectDiwneObject covers the functionality common to all Objects in the node editor - such as selecting, dragging, hovering,..."},"headers":[],"relativePath":"cpp-api-reference/classes/classDIWNE_1_1DiwneObject.md","filePath":"cpp-api-reference/classes/classDIWNE_1_1DiwneObject.md"}'),o={name:"cpp-api-reference/classes/classDIWNE_1_1DiwneObject.md"},t=n(`<h1 id="diwne-diwneobject" tabindex="-1">DIWNE::DiwneObject <a class="header-anchor" href="#diwne-diwneobject" aria-label="Permalink to &quot;DIWNE::DiwneObject&quot;">​</a></h1><p>All objects in <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html">DIWNE</a> are inherited from <a href="./.html">DiwneObject</a><a href="./.html">DiwneObject</a> covers the functionality common to all Objects in the node editor - such as selecting, dragging, hovering,...</p><p><code>#include &quot;DIWNE/DiwneObject.h&quot;</code></p><p>Inherits from std::enable_shared_from_this&lt; DiwneObject &gt;</p><p>Inherited by <a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html">DIWNE::Diwne</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Link.html">DIWNE::Link</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html">DIWNE::Node</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Pin.html">DIWNE::Pin</a></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-diwneobject">DiwneObject</a></strong>(<a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html">DIWNE::Diwne</a> &amp; diwne, <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#typedef-id">DIWNE::ID</a> id, std::string const labelDiwne)&lt;br&gt;Constructor.</td></tr><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-~diwneobject">~DiwneObject</a></strong>() =default</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-aftercontent">afterContent</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-aftercontentdiwne">afterContentDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-afterend">afterEnd</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-afterenddiwne">afterEndDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowdrawing">allowDrawing</a></strong>()&lt;br&gt;Decision maker whether object should be drawn (not outside of window for example)</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowinteraction">allowInteraction</a></strong>()&lt;br&gt;Decision maker whether object can interact (not include content elements)</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowprocessdrag">allowProcessDrag</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowprocessfocused">allowProcessFocused</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowprocessfocusedforinteraction">allowProcessFocusedForInteraction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowprocesshold">allowProcessHold</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowprocessraisepopup">allowProcessRaisePopup</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowprocessselect">allowProcessSelect</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowprocessunhold">allowProcessUnhold</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowprocessunselect">allowProcessUnselect</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-beforebegin">beforeBegin</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-beforebegindiwne">beforeBeginDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-beforecontent">beforeContent</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-beforecontentdiwne">beforeContentDiwne</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-begin">begin</a></strong>() =0</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-bypassdragaction">bypassDragAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-bypassfocusaction">bypassFocusAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-bypassfocusforinteractionaction">bypassFocusForInteractionAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-bypassholdaction">bypassHoldAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-bypassraisepopupaction">bypassRaisePopupAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-bypassselectaction">bypassSelectAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-bypasstouchaction">bypassTouchAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-bypassunholdaction">bypassUnholdAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-bypassunselectaction">bypassUnselectAction</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-content">content</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-contentdiwne">contentDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-drawdiwne">drawDiwne</a></strong>(<a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#enum-drawmode">DrawMode</a> drawMode =DrawMode::Interacting)&lt;br&gt;Main function for drawing object and deal with interactions.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-end">end</a></strong>() =0</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-finalize">finalize</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-finalizediwne">finalizeDiwne</a></strong>()</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#enum-diwneaction">DIWNE::DiwneAction</a></td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-getdragactiontype">getDragActionType</a></strong>() const =0</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#enum-diwneaction">DIWNE::DiwneAction</a></td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-getholdactiontype">getHoldActionType</a></strong>() const =0</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#typedef-id">DIWNE::ID</a> const</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-getiddiwne">getIdDiwne</a></strong>() const</td></tr><tr><td>virtual ImRect</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-getrectdiwne">getRectDiwne</a></strong>() const =0</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-getselectable">getSelectable</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-getselected">getSelected</a></strong>() const&lt;br&gt;Getter of selection state.</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#enum-diwneaction">DIWNE::DiwneAction</a></td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-gettouchactiontype">getTouchActionType</a></strong>() const =0</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-initialize">initialize</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-initializediwne">initializeDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-interactionbegininlastdraw">interactionBeginInLastDraw</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-interactionendinlastdraw">interactionEndInLastDraw</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-popupcontent">popupContent</a></strong>()&lt;br&gt;Content of popup menu raise on this object.</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processdrag">processDrag</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processdragdiwne">processDragDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processfocused">processFocused</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processfocuseddiwne">processFocusedDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processfocusedforinteraction">processFocusedForInteraction</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processfocusedforinteractiondiwne">processFocusedForInteractionDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processhold">processHold</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processholddiwne">processHoldDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processinteractions">processInteractions</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processinteractionsalways">processInteractionsAlways</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processinteractionsdiwne">processInteractionsDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processraisepopupdiwne">processRaisePopupDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processselect">processSelect</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processselectdiwne">processSelectDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processshowpopupdiwne">processShowPopupDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processunhold">processUnhold</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processunholddiwne">processUnholdDiwne</a></strong>()</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processunselect">processUnselect</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-processunselectdiwne">processUnselectDiwne</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-setselectable">setSelectable</a></strong>(bool const selectable)</td></tr><tr><td>virtual bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-setselected">setSelected</a></strong>(bool const selected)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-showtooltiplabel">showTooltipLabel</a></strong>(std::string const &amp; label, ImColor const &amp;&amp; color)&lt;br&gt;Show a colored text for example for immediate hints.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-updatesizes">updateSizes</a></strong>()</td></tr></tbody></table><h2 id="public-attributes" tabindex="-1">Public Attributes <a class="header-anchor" href="#public-attributes" aria-label="Permalink to &quot;Public Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td><a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html">DIWNE::Diwne</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-diwne">diwne</a></strong></td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#enum-drawmode">DrawMode</a></td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-drawmode">m_drawMode</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-focused">m_focused</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-focusedforinteraction">m_focusedForInteraction</a></strong></td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#typedef-id">DIWNE::ID</a> const</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-iddiwne">m_idDiwne</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-inner-interaction-happen">m_inner_interaction_happen</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-inner-interaction-happen-previous-draw">m_inner_interaction_happen_previous_draw</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-isactive">m_isActive</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-isdragged">m_isDragged</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-isheld">m_isHeld</a></strong></td></tr><tr><td>std::string const</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-labeldiwne">m_labelDiwne</a></strong></td></tr><tr><td>std::string const</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-popupiddiwne">m_popupIDDiwne</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-selectable">m_selectable</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#variable-m-selected">m_selected</a></strong></td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-diwneobject" tabindex="-1">function DiwneObject <a class="header-anchor" href="#function-diwneobject" aria-label="Permalink to &quot;function DiwneObject&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">DiwneObject</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::Diwne </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> diwne,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::ID id,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> labelDiwne</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">DiwneObject</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::Diwne </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> diwne,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::ID id,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> labelDiwne</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Constructor.</p><p><strong>Parameters</strong>:</p><ul><li><strong>diwne</strong> is node editor object that this object belongs to</li><li><strong>id</strong> used to identification</li><li><strong>labelDiwne</strong> used to identification</li></ul><h3 id="function-diwneobject-1" tabindex="-1">function ~DiwneObject <a class="header-anchor" href="#function-diwneobject-1" aria-label="Permalink to &quot;function ~DiwneObject&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">~</span><span style="color:#B392F0;">DiwneObject</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">=default</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">~</span><span style="color:#6F42C1;">DiwneObject</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">=default</span></span></code></pre></div><h3 id="function-aftercontent" tabindex="-1">function afterContent <a class="header-anchor" href="#function-aftercontent" aria-label="Permalink to &quot;function afterContent&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">afterContent</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">afterContent</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspace_1_1Sequence.html#function-aftercontent">Workspace::Sequence::afterContent</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1TransformationBase.html#function-aftercontent">Workspace::TransformationBase::afterContent</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1WorkspaceDiwne.html#function-aftercontent">Workspace::WorkspaceDiwne::afterContent</a></p><p>is called as last inside object</p><h3 id="function-aftercontentdiwne" tabindex="-1">function afterContentDiwne <a class="header-anchor" href="#function-aftercontentdiwne" aria-label="Permalink to &quot;function afterContentDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">afterContentDiwne</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">afterContentDiwne</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html#function-aftercontentdiwne">DIWNE::Diwne::afterContentDiwne</a></p><p><a href="/cpp-api-reference/namespaces/namespaceDIWNE.html">DIWNE</a> wrapper</p><h3 id="function-afterend" tabindex="-1">function afterEnd <a class="header-anchor" href="#function-afterend" aria-label="Permalink to &quot;function afterEnd&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">afterEnd</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">afterEnd</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspace_1_1WorkspaceDiwne.html#function-afterend">Workspace::WorkspaceDiwne::afterEnd</a></p><p>is called after closing object, sizes are updated already</p><h3 id="function-afterenddiwne" tabindex="-1">function afterEndDiwne <a class="header-anchor" href="#function-afterenddiwne" aria-label="Permalink to &quot;function afterEndDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">afterEndDiwne</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">afterEndDiwne</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html#function-afterenddiwne">DIWNE::Diwne::afterEndDiwne</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-afterenddiwne">DIWNE::Node::afterEndDiwne</a></p><p><a href="/cpp-api-reference/namespaces/namespaceDIWNE.html">DIWNE</a> wrapper</p><h3 id="function-allowdrawing" tabindex="-1">function allowDrawing <a class="header-anchor" href="#function-allowdrawing" aria-label="Permalink to &quot;function allowDrawing&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">allowDrawing</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">allowDrawing</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Decision maker whether object should be drawn (not outside of window for example)</p><p><strong>Return</strong>: draw object on its position?</p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html#function-allowdrawing">DIWNE::Diwne::allowDrawing</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-allowdrawing">DIWNE::Node::allowDrawing</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1Sequence.html#function-allowdrawing">Workspace::Sequence::allowDrawing</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1TransformationBase.html#function-allowdrawing">Workspace::TransformationBase::allowDrawing</a></p><h3 id="function-allowinteraction" tabindex="-1">function allowInteraction <a class="header-anchor" href="#function-allowinteraction" aria-label="Permalink to &quot;function allowInteraction&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">allowInteraction</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">allowInteraction</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Decision maker whether object can interact (not include content elements)</p><p><strong>Return</strong>: can this object interact?</p><h3 id="function-allowprocessdrag" tabindex="-1">function allowProcessDrag <a class="header-anchor" href="#function-allowprocessdrag" aria-label="Permalink to &quot;function allowProcessDrag&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">allowProcessDrag</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">allowProcessDrag</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-allowprocessfocused" tabindex="-1">function allowProcessFocused <a class="header-anchor" href="#function-allowprocessfocused" aria-label="Permalink to &quot;function allowProcessFocused&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">allowProcessFocused</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">allowProcessFocused</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html#function-allowprocessfocused">DIWNE::Diwne::allowProcessFocused</a></p><h3 id="function-allowprocessfocusedforinteraction" tabindex="-1">function allowProcessFocusedForInteraction <a class="header-anchor" href="#function-allowprocessfocusedforinteraction" aria-label="Permalink to &quot;function allowProcessFocusedForInteraction&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">allowProcessFocusedForInteraction</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">allowProcessFocusedForInteraction</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-allowprocesshold" tabindex="-1">function allowProcessHold <a class="header-anchor" href="#function-allowprocesshold" aria-label="Permalink to &quot;function allowProcessHold&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">allowProcessHold</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">allowProcessHold</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-allowprocessraisepopup" tabindex="-1">function allowProcessRaisePopup <a class="header-anchor" href="#function-allowprocessraisepopup" aria-label="Permalink to &quot;function allowProcessRaisePopup&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">allowProcessRaisePopup</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">allowProcessRaisePopup</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-allowprocessselect" tabindex="-1">function allowProcessSelect <a class="header-anchor" href="#function-allowprocessselect" aria-label="Permalink to &quot;function allowProcessSelect&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">allowProcessSelect</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">allowProcessSelect</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-allowprocessunhold" tabindex="-1">function allowProcessUnhold <a class="header-anchor" href="#function-allowprocessunhold" aria-label="Permalink to &quot;function allowProcessUnhold&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">allowProcessUnhold</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">allowProcessUnhold</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-allowprocessunselect" tabindex="-1">function allowProcessUnselect <a class="header-anchor" href="#function-allowprocessunselect" aria-label="Permalink to &quot;function allowProcessUnselect&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">allowProcessUnselect</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">allowProcessUnselect</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-beforebegin" tabindex="-1">function beforeBegin <a class="header-anchor" href="#function-beforebegin" aria-label="Permalink to &quot;function beforeBegin&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">beforeBegin</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">beforeBegin</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspace_1_1TransformationBase.html#function-beforebegin">Workspace::TransformationBase::beforeBegin</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1WorkspaceDiwne.html#function-beforebegin">Workspace::WorkspaceDiwne::beforeBegin</a></p><p>is called before begin of object drawing (but after <a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowdrawing">allowDrawing()</a> decision)</p><h3 id="function-beforebegindiwne" tabindex="-1">function beforeBeginDiwne <a class="header-anchor" href="#function-beforebegindiwne" aria-label="Permalink to &quot;function beforeBeginDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">beforeBeginDiwne</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">beforeBeginDiwne</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html#function-beforebegindiwne">DIWNE::Diwne::beforeBeginDiwne</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-beforebegindiwne">DIWNE::Node::beforeBeginDiwne</a></p><p><a href="/cpp-api-reference/namespaces/namespaceDIWNE.html">DIWNE</a> wrapper</p><h3 id="function-beforecontent" tabindex="-1">function beforeContent <a class="header-anchor" href="#function-beforecontent" aria-label="Permalink to &quot;function beforeContent&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">beforeContent</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">beforeContent</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspace_1_1Node.html#function-beforecontent">Workspace::Node::beforeContent</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1Operator.html#function-beforecontent">Workspace::Operator::beforeContent</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1Operator.html#function-beforecontent">Workspace::Operator::beforeContent</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1Sequence.html#function-beforecontent">Workspace::Sequence::beforeContent</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1TransformationBase.html#function-beforecontent">Workspace::TransformationBase::beforeContent</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1WorkspaceDiwne.html#function-beforecontent">Workspace::WorkspaceDiwne::beforeContent</a></p><p>is called first inside of object</p><h3 id="function-beforecontentdiwne" tabindex="-1">function beforeContentDiwne <a class="header-anchor" href="#function-beforecontentdiwne" aria-label="Permalink to &quot;function beforeContentDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">beforeContentDiwne</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">beforeContentDiwne</span><span style="color:#24292E;">()</span></span></code></pre></div><p><a href="/cpp-api-reference/namespaces/namespaceDIWNE.html">DIWNE</a> wrapper</p><h3 id="function-begin" tabindex="-1">function begin <a class="header-anchor" href="#function-begin" aria-label="Permalink to &quot;function begin&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">begin</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">begin</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Link.html#function-begin">DIWNE::Link::begin</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html#function-begin">DIWNE::Diwne::begin</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-begin">DIWNE::Node::begin</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Pin.html#function-begin">DIWNE::Pin::begin</a></p><p>begin of object</p><h3 id="function-bypassdragaction" tabindex="-1">function bypassDragAction <a class="header-anchor" href="#function-bypassdragaction" aria-label="Permalink to &quot;function bypassDragAction&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bypassDragAction</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bypassDragAction</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspace_1_1WorkspaceDiwne.html#function-bypassdragaction">Workspace::WorkspaceDiwne::bypassDragAction</a></p><p>action used for dragging object</p><h3 id="function-bypassfocusaction" tabindex="-1">function bypassFocusAction <a class="header-anchor" href="#function-bypassfocusaction" aria-label="Permalink to &quot;function bypassFocusAction&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bypassFocusAction</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bypassFocusAction</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Link.html#function-bypassfocusaction">DIWNE::Link::bypassFocusAction</a></p><p>action identified as focusing on object (and prevent underlying object from focusing)</p><h3 id="function-bypassfocusforinteractionaction" tabindex="-1">function bypassFocusForInteractionAction <a class="header-anchor" href="#function-bypassfocusforinteractionaction" aria-label="Permalink to &quot;function bypassFocusForInteractionAction&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bypassFocusForInteractionAction</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bypassFocusForInteractionAction</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Link.html#function-bypassfocusforinteractionaction">DIWNE::Link::bypassFocusForInteractionAction</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1CorePin.html#function-bypassfocusforinteractionaction">Workspace::CorePin::bypassFocusForInteractionAction</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1Node.html#function-bypassfocusforinteractionaction">Workspace::Node::bypassFocusForInteractionAction</a></p><p>action identified as focusing on object for interacting with it</p><h3 id="function-bypassholdaction" tabindex="-1">function bypassHoldAction <a class="header-anchor" href="#function-bypassholdaction" aria-label="Permalink to &quot;function bypassHoldAction&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bypassHoldAction</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bypassHoldAction</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspace_1_1WorkspaceDiwne.html#function-bypassholdaction">Workspace::WorkspaceDiwne::bypassHoldAction</a></p><p>action used for holding object (check only if object is not held)</p><h3 id="function-bypassraisepopupaction" tabindex="-1">function bypassRaisePopupAction <a class="header-anchor" href="#function-bypassraisepopupaction" aria-label="Permalink to &quot;function bypassRaisePopupAction&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bypassRaisePopupAction</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bypassRaisePopupAction</span><span style="color:#24292E;">()</span></span></code></pre></div><p>action used for raising popup menu</p><h3 id="function-bypassselectaction" tabindex="-1">function bypassSelectAction <a class="header-anchor" href="#function-bypassselectaction" aria-label="Permalink to &quot;function bypassSelectAction&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bypassSelectAction</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bypassSelectAction</span><span style="color:#24292E;">()</span></span></code></pre></div><p>action used for selecting object</p><h3 id="function-bypasstouchaction" tabindex="-1">function bypassTouchAction <a class="header-anchor" href="#function-bypasstouchaction" aria-label="Permalink to &quot;function bypassTouchAction&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bypassTouchAction</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bypassTouchAction</span><span style="color:#24292E;">()</span></span></code></pre></div><p>action used for touching object - not interact with it, just move it to front of other objects</p><h3 id="function-bypassunholdaction" tabindex="-1">function bypassUnholdAction <a class="header-anchor" href="#function-bypassunholdaction" aria-label="Permalink to &quot;function bypassUnholdAction&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bypassUnholdAction</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bypassUnholdAction</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspace_1_1WorkspaceDiwne.html#function-bypassunholdaction">Workspace::WorkspaceDiwne::bypassUnholdAction</a></p><p>action used for unholding object (check only if object is held)</p><h3 id="function-bypassunselectaction" tabindex="-1">function bypassUnselectAction <a class="header-anchor" href="#function-bypassunselectaction" aria-label="Permalink to &quot;function bypassUnselectAction&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bypassUnselectAction</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bypassUnselectAction</span><span style="color:#24292E;">()</span></span></code></pre></div><p>action used for unselecting object</p><h3 id="function-content" tabindex="-1">function content <a class="header-anchor" href="#function-content" aria-label="Permalink to &quot;function content&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">content</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">content</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Link.html#function-content">DIWNE::Link::content</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Pin.html#function-content">DIWNE::Pin::content</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-content">DIWNE::Node::content</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1CorePin.html#function-content">Workspace::CorePin::content</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1CoreInPin.html#function-content">Workspace::CoreInPin::content</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1CoreOutPin.html#function-content">Workspace::CoreOutPin::content</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1DataOutPin.html#function-content">Workspace::DataOutPin::content</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1WorkspaceDiwne.html#function-content">Workspace::WorkspaceDiwne::content</a></p><p>content of object</p><h3 id="function-contentdiwne" tabindex="-1">function contentDiwne <a class="header-anchor" href="#function-contentdiwne" aria-label="Permalink to &quot;function contentDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">contentDiwne</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">contentDiwne</span><span style="color:#24292E;">()</span></span></code></pre></div><p><a href="/cpp-api-reference/namespaces/namespaceDIWNE.html">DIWNE</a> wrapper</p><h3 id="function-drawdiwne" tabindex="-1">function drawDiwne <a class="header-anchor" href="#function-drawdiwne" aria-label="Permalink to &quot;function drawDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">drawDiwne</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">DrawMode</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">drawMode</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;">DrawMode</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Interacting</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">drawDiwne</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">DrawMode</span><span style="color:#24292E;"> </span><span style="color:#E36209;">drawMode</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">DrawMode</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">Interacting</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Main function for drawing object and deal with interactions.</p><p><strong>Parameters</strong>:</p><ul><li><strong>drawMode</strong> allows interactions with object</li></ul><p><strong>Return</strong>: true if some interaction with object (or inner of this object) happen, false otherwise</p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspace_1_1CoreInPin.html#function-drawdiwne">Workspace::CoreInPin::drawDiwne</a></p><h3 id="function-end" tabindex="-1">function end <a class="header-anchor" href="#function-end" aria-label="Permalink to &quot;function end&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">end</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">end</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Link.html#function-end">DIWNE::Link::end</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html#function-end">DIWNE::Diwne::end</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-end">DIWNE::Node::end</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Pin.html#function-end">DIWNE::Pin::end</a></p><p>closing object</p><h3 id="function-finalize" tabindex="-1">function finalize <a class="header-anchor" href="#function-finalize" aria-label="Permalink to &quot;function finalize&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">finalize</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">finalize</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspace_1_1CoreNodeWithPins.html#function-finalize">Workspace::CoreNodeWithPins::finalize</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1WorkspaceDiwne.html#function-finalize">Workspace::WorkspaceDiwne::finalize</a></p><p>is called every time in <a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-drawdiwne">drawDiwne()</a> do any finalization of your object here</p><h3 id="function-finalizediwne" tabindex="-1">function finalizeDiwne <a class="header-anchor" href="#function-finalizediwne" aria-label="Permalink to &quot;function finalizeDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">finalizeDiwne</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">finalizeDiwne</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html#function-finalizediwne">DIWNE::Diwne::finalizeDiwne</a></p><p><a href="/cpp-api-reference/namespaces/namespaceDIWNE.html">DIWNE</a> wrapper</p><h3 id="function-getdragactiontype" tabindex="-1">function getDragActionType <a class="header-anchor" href="#function-getdragactiontype" aria-label="Permalink to &quot;function getDragActionType&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">DiwneAction</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDragActionType</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">DiwneAction</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDragActionType</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html#function-getdragactiontype">DIWNE::Diwne::getDragActionType</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Link.html#function-getdragactiontype">DIWNE::Link::getDragActionType</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-getdragactiontype">DIWNE::Node::getDragActionType</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Pin.html#function-getdragactiontype">DIWNE::Pin::getDragActionType</a></p><p>return which type of object/action this object is</p><h3 id="function-getholdactiontype" tabindex="-1">function getHoldActionType <a class="header-anchor" href="#function-getholdactiontype" aria-label="Permalink to &quot;function getHoldActionType&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">DiwneAction</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getHoldActionType</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">DiwneAction</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getHoldActionType</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html#function-getholdactiontype">DIWNE::Diwne::getHoldActionType</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Link.html#function-getholdactiontype">DIWNE::Link::getHoldActionType</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-getholdactiontype">DIWNE::Node::getHoldActionType</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Pin.html#function-getholdactiontype">DIWNE::Pin::getHoldActionType</a></p><p>return which type of object/action this object is</p><h3 id="function-getiddiwne" tabindex="-1">function getIdDiwne <a class="header-anchor" href="#function-getiddiwne" aria-label="Permalink to &quot;function getIdDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::ID </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getIdDiwne</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::ID </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getIdDiwne</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-getrectdiwne" tabindex="-1">function getRectDiwne <a class="header-anchor" href="#function-getrectdiwne" aria-label="Permalink to &quot;function getRectDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ImRect</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getRectDiwne</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ImRect</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getRectDiwne</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html#function-getrectdiwne">DIWNE::Diwne::getRectDiwne</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Link.html#function-getrectdiwne">DIWNE::Link::getRectDiwne</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-getrectdiwne">DIWNE::Node::getRectDiwne</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Pin.html#function-getrectdiwne">DIWNE::Pin::getRectDiwne</a></p><p>return rectangle of object</p><h3 id="function-getselectable" tabindex="-1">function getSelectable <a class="header-anchor" href="#function-getselectable" aria-label="Permalink to &quot;function getSelectable&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getSelectable</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getSelectable</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-getselected" tabindex="-1">function getSelected <a class="header-anchor" href="#function-getselected" aria-label="Permalink to &quot;function getSelected&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getSelected</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getSelected</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><p>Getter of selection state.</p><p><strong>Return</strong>: Current selection state of the object.</p><h3 id="function-gettouchactiontype" tabindex="-1">function getTouchActionType <a class="header-anchor" href="#function-gettouchactiontype" aria-label="Permalink to &quot;function getTouchActionType&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">DiwneAction</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getTouchActionType</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">DiwneAction</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getTouchActionType</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html#function-gettouchactiontype">DIWNE::Diwne::getTouchActionType</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Link.html#function-gettouchactiontype">DIWNE::Link::getTouchActionType</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-gettouchactiontype">DIWNE::Node::getTouchActionType</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Pin.html#function-gettouchactiontype">DIWNE::Pin::getTouchActionType</a></p><p>return which type of object/action this object is</p><h3 id="function-initialize" tabindex="-1">function initialize <a class="header-anchor" href="#function-initialize" aria-label="Permalink to &quot;function initialize&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">initialize</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">initialize</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Link.html#function-initialize">DIWNE::Link::initialize</a></p><p>is called every time in <a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-drawdiwne">drawDiwne()</a> do any initialization of your object here</p><h3 id="function-initializediwne" tabindex="-1">function initializeDiwne <a class="header-anchor" href="#function-initializediwne" aria-label="Permalink to &quot;function initializeDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">initializeDiwne</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">initializeDiwne</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Link.html#function-initializediwne">DIWNE::Link::initializeDiwne</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html#function-initializediwne">DIWNE::Diwne::initializeDiwne</a></p><p><a href="/cpp-api-reference/namespaces/namespaceDIWNE.html">DIWNE</a> wrapper</p><h3 id="function-interactionbegininlastdraw" tabindex="-1">function interactionBeginInLastDraw <a class="header-anchor" href="#function-interactionbegininlastdraw" aria-label="Permalink to &quot;function interactionBeginInLastDraw&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">interactionBeginInLastDraw</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">interactionBeginInLastDraw</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-interactionendinlastdraw" tabindex="-1">function interactionEndInLastDraw <a class="header-anchor" href="#function-interactionendinlastdraw" aria-label="Permalink to &quot;function interactionEndInLastDraw&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">interactionEndInLastDraw</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">interactionEndInLastDraw</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-popupcontent" tabindex="-1">function popupContent <a class="header-anchor" href="#function-popupcontent" aria-label="Permalink to &quot;function popupContent&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">popupContent</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">popupContent</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Content of popup menu raise on this object.</p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspace_1_1CoreNode.html#function-popupcontent">Workspace::CoreNode::popupContent</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1CorePin.html#function-popupcontent">Workspace::CorePin::popupContent</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1Node.html#function-popupcontent">Workspace::Node::popupContent</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1Camera.html#function-popupcontent">Workspace::Camera::popupContent</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1Model.html#function-popupcontent">Workspace::Model::popupContent</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1Screen.html#function-popupcontent">Workspace::Screen::popupContent</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1Sequence.html#function-popupcontent">Workspace::Sequence::popupContent</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1TransformationBase.html#function-popupcontent">Workspace::TransformationBase::popupContent</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1WorkspaceDiwne.html#function-popupcontent">Workspace::WorkspaceDiwne::popupContent</a></p><h3 id="function-processdrag" tabindex="-1">function processDrag <a class="header-anchor" href="#function-processdrag" aria-label="Permalink to &quot;function processDrag&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processDrag</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processDrag</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html#function-processdrag">DIWNE::Diwne::processDrag</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-processdrag">DIWNE::Node::processDrag</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Pin.html#function-processdrag">DIWNE::Pin::processDrag</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1CoreNode.html#function-processdrag">Workspace::CoreNode::processDrag</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1CorePin.html#function-processdrag">Workspace::CorePin::processDrag</a></p><h3 id="function-processdragdiwne" tabindex="-1">function processDragDiwne <a class="header-anchor" href="#function-processdragdiwne" aria-label="Permalink to &quot;function processDragDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processDragDiwne</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processDragDiwne</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-processfocused" tabindex="-1">function processFocused <a class="header-anchor" href="#function-processfocused" aria-label="Permalink to &quot;function processFocused&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processFocused</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processFocused</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Link.html#function-processfocused">DIWNE::Link::processFocused</a></p><h3 id="function-processfocuseddiwne" tabindex="-1">function processFocusedDiwne <a class="header-anchor" href="#function-processfocuseddiwne" aria-label="Permalink to &quot;function processFocusedDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processFocusedDiwne</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processFocusedDiwne</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-processfocusedforinteraction" tabindex="-1">function processFocusedForInteraction <a class="header-anchor" href="#function-processfocusedforinteraction" aria-label="Permalink to &quot;function processFocusedForInteraction&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processFocusedForInteraction</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processFocusedForInteraction</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Link.html#function-processfocusedforinteraction">DIWNE::Link::processFocusedForInteraction</a></p><h3 id="function-processfocusedforinteractiondiwne" tabindex="-1">function processFocusedForInteractionDiwne <a class="header-anchor" href="#function-processfocusedforinteractiondiwne" aria-label="Permalink to &quot;function processFocusedForInteractionDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processFocusedForInteractionDiwne</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processFocusedForInteractionDiwne</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-processhold" tabindex="-1">function processHold <a class="header-anchor" href="#function-processhold" aria-label="Permalink to &quot;function processHold&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processHold</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processHold</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-processholddiwne" tabindex="-1">function processHoldDiwne <a class="header-anchor" href="#function-processholddiwne" aria-label="Permalink to &quot;function processHoldDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processHoldDiwne</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processHoldDiwne</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-processinteractions" tabindex="-1">function processInteractions <a class="header-anchor" href="#function-processinteractions" aria-label="Permalink to &quot;function processInteractions&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processInteractions</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processInteractions</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html#function-processinteractions">DIWNE::Diwne::processInteractions</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1CoreInPin.html#function-processinteractions">Workspace::CoreInPin::processInteractions</a></p><p>react to interactions with this object</p><h3 id="function-processinteractionsalways" tabindex="-1">function processInteractionsAlways <a class="header-anchor" href="#function-processinteractionsalways" aria-label="Permalink to &quot;function processInteractionsAlways&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processInteractionsAlways</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processInteractionsAlways</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Pin.html#function-processinteractionsalways">DIWNE::Pin::processInteractionsAlways</a></p><p>processes that happen even in <a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html#function-allowinteraction">allowInteraction()</a> return false, but object still has to be in DrawMode::Interaction</p><h3 id="function-processinteractionsdiwne" tabindex="-1">function processInteractionsDiwne <a class="header-anchor" href="#function-processinteractionsdiwne" aria-label="Permalink to &quot;function processInteractionsDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processInteractionsDiwne</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processInteractionsDiwne</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html#function-processinteractionsdiwne">DIWNE::Diwne::processInteractionsDiwne</a></p><p><a href="/cpp-api-reference/namespaces/namespaceDIWNE.html">DIWNE</a> wrapper</p><h3 id="function-processraisepopupdiwne" tabindex="-1">function processRaisePopupDiwne <a class="header-anchor" href="#function-processraisepopupdiwne" aria-label="Permalink to &quot;function processRaisePopupDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processRaisePopupDiwne</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processRaisePopupDiwne</span><span style="color:#24292E;">()</span></span></code></pre></div><p>processing raising popup menu</p><h3 id="function-processselect" tabindex="-1">function processSelect <a class="header-anchor" href="#function-processselect" aria-label="Permalink to &quot;function processSelect&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processSelect</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processSelect</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-processselect">DIWNE::Node::processSelect</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1CoreNode.html#function-processselect">Workspace::CoreNode::processSelect</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1Camera.html#function-processselect">Workspace::Camera::processSelect</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1Model.html#function-processselect">Workspace::Model::processSelect</a></p><h3 id="function-processselectdiwne" tabindex="-1">function processSelectDiwne <a class="header-anchor" href="#function-processselectdiwne" aria-label="Permalink to &quot;function processSelectDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processSelectDiwne</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processSelectDiwne</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-processshowpopupdiwne" tabindex="-1">function processShowPopupDiwne <a class="header-anchor" href="#function-processshowpopupdiwne" aria-label="Permalink to &quot;function processShowPopupDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processShowPopupDiwne</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processShowPopupDiwne</span><span style="color:#24292E;">()</span></span></code></pre></div><p>processing showing popup menu</p><h3 id="function-processunhold" tabindex="-1">function processUnhold <a class="header-anchor" href="#function-processunhold" aria-label="Permalink to &quot;function processUnhold&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processUnhold</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processUnhold</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-processunholddiwne" tabindex="-1">function processUnholdDiwne <a class="header-anchor" href="#function-processunholddiwne" aria-label="Permalink to &quot;function processUnholdDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processUnholdDiwne</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processUnholdDiwne</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-processunselect" tabindex="-1">function processUnselect <a class="header-anchor" href="#function-processunselect" aria-label="Permalink to &quot;function processUnselect&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processUnselect</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processUnselect</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-processunselect">DIWNE::Node::processUnselect</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1CoreNode.html#function-processunselect">Workspace::CoreNode::processUnselect</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1Camera.html#function-processunselect">Workspace::Camera::processUnselect</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1Model.html#function-processunselect">Workspace::Model::processUnselect</a></p><h3 id="function-processunselectdiwne" tabindex="-1">function processUnselectDiwne <a class="header-anchor" href="#function-processunselectdiwne" aria-label="Permalink to &quot;function processUnselectDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">processUnselectDiwne</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">processUnselectDiwne</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-setselectable" tabindex="-1">function setSelectable <a class="header-anchor" href="#function-setselectable" aria-label="Permalink to &quot;function setSelectable&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setSelectable</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">selectable</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setSelectable</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#E36209;">selectable</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-setselected" tabindex="-1">function setSelected <a class="header-anchor" href="#function-setselected" aria-label="Permalink to &quot;function setSelected&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setSelected</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">selected</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setSelected</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#E36209;">selected</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p><strong>Parameters</strong>:</p><ul><li><strong>selected</strong> is the new requested state of the object</li></ul><p><strong>Return</strong>: New state of selection</p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-setselected">DIWNE::Node::setSelected</a></p><p>Setter of selection state</p><h3 id="function-showtooltiplabel" tabindex="-1">function showTooltipLabel <a class="header-anchor" href="#function-showtooltiplabel" aria-label="Permalink to &quot;function showTooltipLabel&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">showTooltipLabel</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">label</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">ImColor</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">color</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">showTooltipLabel</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">label</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">ImColor</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">color</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Show a colored text for example for immediate hints.</p><p><strong>Parameters</strong>:</p><ul><li><strong>label</strong> is the text to show</li><li><strong>color</strong> is the color of the tooltip</li></ul><h3 id="function-updatesizes" tabindex="-1">function updateSizes <a class="header-anchor" href="#function-updatesizes" aria-label="Permalink to &quot;function updateSizes&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateSizes</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateSizes</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html#function-updatesizes">DIWNE::Node::updateSizes</a>, <a href="/cpp-api-reference/classes/classDIWNE_1_1Pin.html#function-updatesizes">DIWNE::Pin::updateSizes</a>, <a href="/cpp-api-reference/classes/classWorkspace_1_1TransformationBase.html#function-updatesizes">Workspace::TransformationBase::updateSizes</a></p><p>store object size and position after this frame</p><h2 id="public-attributes-documentation" tabindex="-1">Public Attributes Documentation <a class="header-anchor" href="#public-attributes-documentation" aria-label="Permalink to &quot;Public Attributes Documentation&quot;">​</a></h2><h3 id="variable-diwne" tabindex="-1">variable diwne <a class="header-anchor" href="#variable-diwne" aria-label="Permalink to &quot;variable diwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::Diwne </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> diwne;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::Diwne </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> diwne;</span></span></code></pre></div><p>Every object have access to <a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html">Diwne</a> - is used for share information if needed</p><h3 id="variable-m-drawmode" tabindex="-1">variable m_drawMode <a class="header-anchor" href="#variable-m-drawmode" aria-label="Permalink to &quot;variable m_drawMode&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">DrawMode m_drawMode;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">DrawMode m_drawMode;</span></span></code></pre></div><p><strong>See</strong>: enum <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#enum-drawmode">DrawMode</a></p><h3 id="variable-m-focused" tabindex="-1">variable m_focused <a class="header-anchor" href="#variable-m-focused" aria-label="Permalink to &quot;variable m_focused&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_focused;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_focused;</span></span></code></pre></div><p>Is object focused anywhere (and for example can not be¨focus other underlying object)</p><h3 id="variable-m-focusedforinteraction" tabindex="-1">variable m_focusedForInteraction <a class="header-anchor" href="#variable-m-focusedforinteraction" aria-label="Permalink to &quot;variable m_focusedForInteraction&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_focusedForInteraction;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_focusedForInteraction;</span></span></code></pre></div><p>Is object focus on area that allow interaction with object</p><h3 id="variable-m-iddiwne" tabindex="-1">variable m_idDiwne <a class="header-anchor" href="#variable-m-iddiwne" aria-label="Permalink to &quot;variable m_idDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::ID </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> m_idDiwne;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::ID </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> m_idDiwne;</span></span></code></pre></div><p>Used for creating ImGui id/labels</p><h3 id="variable-m-inner-interaction-happen" tabindex="-1">variable m_inner_interaction_happen <a class="header-anchor" href="#variable-m-inner-interaction-happen" aria-label="Permalink to &quot;variable m_inner_interaction_happen&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_inner_interaction_happen;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_inner_interaction_happen;</span></span></code></pre></div><h3 id="variable-m-inner-interaction-happen-previous-draw" tabindex="-1">variable m_inner_interaction_happen_previous_draw <a class="header-anchor" href="#variable-m-inner-interaction-happen-previous-draw" aria-label="Permalink to &quot;variable m_inner_interaction_happen_previous_draw&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_inner_interaction_happen_previous_draw;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_inner_interaction_happen_previous_draw;</span></span></code></pre></div><p>If some interaction happen with inner elements (DragFloat, Button, ...) it block interaction with this object</p><h3 id="variable-m-isactive" tabindex="-1">variable m_isActive <a class="header-anchor" href="#variable-m-isactive" aria-label="Permalink to &quot;variable m_isActive&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_isActive;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_isActive;</span></span></code></pre></div><p>Something happen with object</p><h3 id="variable-m-isdragged" tabindex="-1">variable m_isDragged <a class="header-anchor" href="#variable-m-isdragged" aria-label="Permalink to &quot;variable m_isDragged&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_isDragged;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_isDragged;</span></span></code></pre></div><p>Is object dragged</p><h3 id="variable-m-isheld" tabindex="-1">variable m_isHeld <a class="header-anchor" href="#variable-m-isheld" aria-label="Permalink to &quot;variable m_isHeld&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_isHeld;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_isHeld;</span></span></code></pre></div><p>Is object held. When dragged it is still held.</p><h3 id="variable-m-labeldiwne" tabindex="-1">variable m_labelDiwne <a class="header-anchor" href="#variable-m-labeldiwne" aria-label="Permalink to &quot;variable m_labelDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> m_labelDiwne;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> m_labelDiwne;</span></span></code></pre></div><p>Used for identifying object and creating ImGui id/labels</p><h3 id="variable-m-popupiddiwne" tabindex="-1">variable m_popupIDDiwne <a class="header-anchor" href="#variable-m-popupiddiwne" aria-label="Permalink to &quot;variable m_popupIDDiwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> m_popupIDDiwne;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> m_popupIDDiwne;</span></span></code></pre></div><p>Used for identifying what element raise popup</p><h3 id="variable-m-selectable" tabindex="-1">variable m_selectable <a class="header-anchor" href="#variable-m-selectable" aria-label="Permalink to &quot;variable m_selectable&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_selectable;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_selectable;</span></span></code></pre></div><h3 id="variable-m-selected" tabindex="-1">variable m_selected <a class="header-anchor" href="#variable-m-selected" aria-label="Permalink to &quot;variable m_selected&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> m_selected;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> m_selected;</span></span></code></pre></div><p>Is object selected</p><hr><p>Updated on 2024-10-16 at 16:58:01 +0000</p>`,288),p=[t];function l(c,r,i,d,h,u){return e(),a("div",null,p)}const b=s(o,[["render",l]]);export{E as __pageData,b as default};
