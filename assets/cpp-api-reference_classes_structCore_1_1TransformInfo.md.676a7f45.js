import{_ as e,o as a,c as s,Q as t}from"./chunks/framework.0f749972.js";const b=JSON.parse('{"title":"Core::TransformInfo","description":"","frontmatter":{"title":"Core::TransformInfo","summary":"Cannot outlive the sequence."},"headers":[],"relativePath":"cpp-api-reference/classes/structCore_1_1TransformInfo.md","filePath":"cpp-api-reference/classes/structCore_1_1TransformInfo.md"}'),n={name:"cpp-api-reference/classes/structCore_1_1TransformInfo.md"},o=t('<h1 id="core-transforminfo" tabindex="-1">Core::TransformInfo <a class="header-anchor" href="#core-transforminfo" aria-label="Permalink to &quot;Core::TransformInfo&quot;">​</a></h1><p>Cannot outlive the sequence.</p><p><code>#include &quot;Core/Nodes/Tracking.h&quot;</code></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td><a href="/cpp-api-reference/namespaces/namespaceCore.html#typedef-id">ID</a></td><td><strong><a href="/cpp-api-reference/classes/structCore_1_1TransformInfo.html#function-gettrackingid">getTrackingID</a></strong>() const</td></tr></tbody></table><h2 id="public-attributes" tabindex="-1">Public Attributes <a class="header-anchor" href="#public-attributes" aria-label="Permalink to &quot;Public Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/structCore_1_1TransformInfo.html#variable-currentnode">currentNode</a></strong> &lt;br&gt;<a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> with matrix output.</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/structCore_1_1TransformInfo.html#variable-isexternal">isExternal</a></strong></td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1Sequence.html">Sequence</a> *</td><td><strong><a href="/cpp-api-reference/classes/structCore_1_1TransformInfo.html#variable-sequence">sequence</a></strong> &lt;br&gt;<a href="/cpp-api-reference/classes/classCore_1_1Sequence.html">Sequence</a> which contains the transform.</td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-gettrackingid" tabindex="-1">function getTrackingID <a class="header-anchor" href="#function-gettrackingid" aria-label="Permalink to &quot;function getTrackingID&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ID</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getTrackingID</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ID</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getTrackingID</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><p><strong>Return</strong>: !isExternal ? currentNode-&gt;getId() : sequence-&gt;getId(); If isExternal, then sequence is the sequence with currentNode as input.</p><h2 id="public-attributes-documentation" tabindex="-1">Public Attributes Documentation <a class="header-anchor" href="#public-attributes-documentation" aria-label="Permalink to &quot;Public Attributes Documentation&quot;">​</a></h2><h3 id="variable-currentnode" tabindex="-1">variable currentNode <a class="header-anchor" href="#variable-currentnode" aria-label="Permalink to &quot;variable currentNode&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> Node </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> currentNode </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nullptr</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Node </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> currentNode </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nullptr</span><span style="color:#24292E;">;</span></span></code></pre></div><p><a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> with matrix output.</p><h3 id="variable-isexternal" tabindex="-1">variable isExternal <a class="header-anchor" href="#variable-isexternal" aria-label="Permalink to &quot;variable isExternal&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> isExternal </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> isExternal </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-sequence" tabindex="-1">variable sequence <a class="header-anchor" href="#variable-sequence" aria-label="Permalink to &quot;variable sequence&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Sequence </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> sequence </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nullptr</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Sequence </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> sequence </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nullptr</span><span style="color:#24292E;">;</span></span></code></pre></div><p><a href="/cpp-api-reference/classes/classCore_1_1Sequence.html">Sequence</a> which contains the transform.</p><hr><p>Updated on 2025-01-07 at 12:46:15 +0000</p>',22),r=[o];function l(c,p,i,d,u,h){return a(),s("div",null,r)}const y=e(n,[["render",l]]);export{b as __pageData,y as default};
