import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.0f749972.js";const y=JSON.parse('{"title":"Timer","description":"","frontmatter":{"title":"Timer"},"headers":[],"relativePath":"cpp-api-reference/classes/classTimer.md","filePath":"cpp-api-reference/classes/classTimer.md"}'),t={name:"cpp-api-reference/classes/classTimer.md"},l=e(`<h1 id="timer" tabindex="-1">Timer <a class="header-anchor" href="#timer" aria-label="Permalink to &quot;Timer&quot;">​</a></h1><p><code>#include &quot;Scripting/Timer.h&quot;</code></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classTimer.html#function-timer">Timer</a></strong>() =default</td></tr><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classTimer.html#function-timer">Timer</a></strong>(uint64_t intervalMs, sol::protected_function callback)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classTimer.html#function-tick">tick</a></strong>(double dt)</td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-timer" tabindex="-1">function Timer <a class="header-anchor" href="#function-timer" aria-label="Permalink to &quot;function Timer&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Timer</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">=default</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Timer</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">=default</span></span></code></pre></div><h3 id="function-timer-1" tabindex="-1">function Timer <a class="header-anchor" href="#function-timer-1" aria-label="Permalink to &quot;function Timer&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Timer</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">uint64_t</span><span style="color:#E1E4E8;"> intervalMs,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">sol</span><span style="color:#E1E4E8;">::protected_function callback</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Timer</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">uint64_t</span><span style="color:#24292E;"> intervalMs,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">sol</span><span style="color:#24292E;">::protected_function callback</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-tick" tabindex="-1">function tick <a class="header-anchor" href="#function-tick" aria-label="Permalink to &quot;function tick&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">tick</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">double</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">dt</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">tick</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> </span><span style="color:#E36209;">dt</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><hr><p>Updated on 2024-11-06 at 20:16:53 +0000</p>`,13),o=[l];function c(p,i,r,d,u,h){return a(),n("div",null,o)}const m=s(t,[["render",c]]);export{y as __pageData,m as default};
