import{_ as a,o as e,c as s,Q as n}from"./chunks/framework.0f749972.js";const f=JSON.parse('{"title":"ICommand","description":"","frontmatter":{"title":"ICommand"},"headers":[],"relativePath":"cpp-api-reference/classes/classICommand.md","filePath":"cpp-api-reference/classes/classICommand.md"}'),t={name:"cpp-api-reference/classes/classICommand.md"},o=n('<h1 id="icommand" tabindex="-1">ICommand <a class="header-anchor" href="#icommand" aria-label="Permalink to &quot;ICommand&quot;">​</a></h1><p><code>#include &quot;Commands/ICommand.h&quot;</code></p><p>Inherited by <a href="/cpp-api-reference/classes/classCommand.html">Command&lt; BeforeCloseCommand &gt;</a>, <a href="/cpp-api-reference/classes/classCommand.html">Command&lt; CloseCommand, int &gt;</a>, <a href="/cpp-api-reference/classes/classCommand.html">Command&lt; ConsoleCommand, std::string &gt;</a>, <a href="/cpp-api-reference/classes/classCommand.html">Command&lt; HideWindowCommand, std::string &gt;</a>, <a href="/cpp-api-reference/classes/classCommand.html">Command&lt; LoadWindowLayoutFromFileCommand, std::string &gt;</a>, <a href="/cpp-api-reference/classes/classCommand.html">Command&lt; LoadWindowLayoutFromStringCommand, std::string &gt;</a>, <a href="/cpp-api-reference/classes/classCommand.html">Command&lt; NewProjectCommand &gt;</a>, <a href="/cpp-api-reference/classes/classCommand.html">Command&lt; SetFocusedWindowCommand, Ptr&lt; IWindow &gt; &gt;</a>, <a href="/cpp-api-reference/classes/classCommand.html">Command&lt; SetTutorialCommand, std::shared_ptr&lt; Tutorial &gt; &gt;</a>, <a href="/cpp-api-reference/classes/classCommand.html">Command&lt; SetTutorialStepCommand, int &gt;</a>, <a href="/cpp-api-reference/classes/classCommand.html">Command&lt; Type, Args &gt;</a></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/classICommand.html#function-~icommand">~ICommand</a></strong>() =default</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classICommand.html#function-execute">execute</a></strong>() =0</td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-icommand" tabindex="-1">function ~ICommand <a class="header-anchor" href="#function-icommand" aria-label="Permalink to &quot;function ~ICommand&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">~</span><span style="color:#B392F0;">ICommand</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">=default</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">~</span><span style="color:#6F42C1;">ICommand</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">=default</span></span></code></pre></div><h3 id="function-execute" tabindex="-1">function execute <a class="header-anchor" href="#function-execute" aria-label="Permalink to &quot;function execute&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">execute</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">execute</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classCommand.html#function-execute">Command::execute</a>, <a href="/cpp-api-reference/classes/classCommand.html#function-execute">Command::execute</a>, <a href="/cpp-api-reference/classes/classCommand.html#function-execute">Command::execute</a>, <a href="/cpp-api-reference/classes/classCommand.html#function-execute">Command::execute</a>, <a href="/cpp-api-reference/classes/classCommand.html#function-execute">Command::execute</a>, <a href="/cpp-api-reference/classes/classCommand.html#function-execute">Command::execute</a></p><hr><p>Updated on 2025-01-07 at 13:25:50 +0000</p>',13),c=[o];function l(p,r,m,d,i,u){return e(),s("div",null,c)}const C=a(t,[["render",l]]);export{f as __pageData,C as default};
