import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.0f749972.js";const u=JSON.parse('{"title":"Workspace","description":"","frontmatter":{"title":"Workspace","summary":"GUI nodes."},"headers":[],"relativePath":"cpp-api-reference/namespaces/namespaceWorkspace.md","filePath":"cpp-api-reference/namespaces/namespaceWorkspace.md"}'),o={name:"cpp-api-reference/namespaces/namespaceWorkspace.md"},l=e(`<h1 id="workspace" tabindex="-1">Workspace <a class="header-anchor" href="#workspace" aria-label="Permalink to &quot;Workspace&quot;">​</a></h1><p><a href="./.html">GUI</a> nodes.</p><h2 id="namespaces" tabindex="-1">Namespaces <a class="header-anchor" href="#namespaces" aria-label="Permalink to &quot;Namespaces&quot;">​</a></h2><table><thead><tr><th>Name</th></tr></thead><tbody><tr><td><strong><a href="/cpp-api-reference/namespaces/namespaceWorkspace_1_1Tools.html">Workspace::Tools</a></strong></td></tr></tbody></table><h2 id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-label="Permalink to &quot;Classes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1AngleAxisToQuatOperator.html">Workspace::AngleAxisToQuatOperator</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1Camera.html">Workspace::Camera</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1CoreInPin.html">Workspace::CoreInPin</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1CoreInPinMatrixMultiply.html">Workspace::CoreInPinMatrixMultiply</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1CoreNode.html">Workspace::CoreNode</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1CoreNodeWithPins.html">Workspace::CoreNodeWithPins</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1CoreOutPin.html">Workspace::CoreOutPin</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1CoreOutPinMatrixMultiply.html">Workspace::CoreOutPinMatrixMultiply</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1CorePin.html">Workspace::CorePin</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1Cycle.html">Workspace::Cycle</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1DataOutPin.html">Workspace::DataOutPin</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1DataOutPinFloat.html">Workspace::DataOutPinFloat</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1DataOutPinMatrix.html">Workspace::DataOutPinMatrix</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1DataOutPinPulse.html">Workspace::DataOutPinPulse</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1DataOutPinQuat.html">Workspace::DataOutPinQuat</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1DataOutPinScreen.html">Workspace::DataOutPinScreen</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1DataOutPinVector3.html">Workspace::DataOutPinVector3</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1DataOutPinVector4.html">Workspace::DataOutPinVector4</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1DataRenderer.html">Workspace::DataRenderer</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1Model.html">Workspace::Model</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1ModelProxy.html">Workspace::ModelProxy</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1Node.html">Workspace::Node</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1Operator.html">Workspace::Operator</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1OperatorBuilder.html">Workspace::OperatorBuilder</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1Screen.html">Workspace::Screen</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1Sequence.html">Workspace::Sequence</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1Transformation.html">Workspace::Transformation</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1TransformationBase.html">Workspace::TransformationBase</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1TransformBuilder.html">Workspace::TransformBuilder</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1ViewportHighlightResolver.html">Workspace::ViewportHighlightResolver</a></strong> &lt;br&gt;Manager class responsible for updating viewport model highlights based on current workspace node selection.</td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWorkspace_1_1WorkspaceDiwne.html">Workspace::WorkspaceDiwne</a></strong></td></tr></tbody></table><h2 id="types" tabindex="-1">Types <a class="header-anchor" href="#types" aria-label="Permalink to &quot;Types&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>enum</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceWorkspace.html#enum-floatpopupmode">FloatPopupMode</a></strong> { Angle, Value}&lt;br&gt;Values in the popup menu for floats.</td></tr><tr><td>enum class</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceWorkspace.html#enum-levelofdetail">LevelOfDetail</a></strong> { Full, SetValues, Label, LightCycle}</td></tr><tr><td>enum class</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceWorkspace.html#enum-pinkind">PinKind</a></strong> { Output, Input}&lt;br&gt;kinds (in/out) of <a href="/cpp-api-reference/namespaces/namespaceWorkspace.html">Workspace</a> Pin</td></tr><tr><td>enum</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceWorkspace.html#enum-workspacediwneaction">WorkspaceDiwneAction</a></strong> { None, CreateAndPlugTypeConstructor, NOTunselectAllNodes}</td></tr><tr><td>typedef std::vector&lt; <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classWorkspace_1_1CoreNode.html">CoreNode</a> &gt; &gt;::iterator</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceWorkspace.html#typedef-corenodeiter">coreNodeIter</a></strong></td></tr></tbody></table><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>template &lt;typename T &amp;gt; &lt;br&gt;auto</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceWorkspace.html#function-addnodetonodeeditor">addNodeToNodeEditor</a></strong>(ImVec2 const position =ImVec2(0, 0))&lt;br&gt;This function takes snapshot of current state.</td></tr><tr><td>template &lt;typename T &amp;gt; &lt;br&gt;auto</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceWorkspace.html#function-addnodetonodeeditornosave">addNodeToNodeEditorNoSave</a></strong>(ImVec2 const position =ImVec2(0, 0))</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceWorkspace.html#function-connectnodes">connectNodes</a></strong>(<a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classWorkspace_1_1CoreNode.html">CoreNode</a> &gt; lhs, <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classWorkspace_1_1CoreNode.html">CoreNode</a> &gt; rhs, int lhsPin, int rhsPin)</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceWorkspace.html#function-connectnodesnosave">connectNodesNoSave</a></strong>(<a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classWorkspace_1_1CoreNode.html">CoreNode</a> &gt; lhs, <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classWorkspace_1_1CoreNode.html">CoreNode</a> &gt; rhs, int lhsPin, int rhsPin)</td></tr></tbody></table><h2 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-label="Permalink to &quot;Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td><a href="/cpp-api-reference/classes/classWorkspace_1_1WorkspaceDiwne.html">WorkspaceDiwne</a> *</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceWorkspace.html#variable-g-diwne">g_diwne</a></strong></td></tr><tr><td>std::map&lt; <a href="/cpp-api-reference/namespaces/namespaceWorkspace.html#enum-levelofdetail">LevelOfDetail</a>, std::string &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceWorkspace.html#variable-levelofdetailname">LevelOfDetailName</a></strong></td></tr><tr><td>std::map&lt; <a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-evaluetype">Core::EValueType</a>, <a href="/cpp-api-reference/files/Theme_8h.html#enum-ecolor">EColor</a> &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceWorkspace.html#variable-pincolorbackground">PinColorBackground</a></strong></td></tr><tr><td>std::map&lt; <a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-evaluetype">Core::EValueType</a>, <a href="/cpp-api-reference/files/Theme_8h.html#enum-ecolor">EColor</a> &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceWorkspace.html#variable-pincolorforeground">PinColorForeground</a></strong></td></tr><tr><td>std::map&lt; <a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-evaluetype">Core::EValueType</a>, <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#enum-icontype">DIWNE::IconType</a> &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceWorkspace.html#variable-pinshapebackground">PinShapeBackground</a></strong></td></tr><tr><td>std::map&lt; <a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-evaluetype">Core::EValueType</a>, <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html#enum-icontype">DIWNE::IconType</a> &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceWorkspace.html#variable-pinshapeforeground">PinShapeForeground</a></strong></td></tr></tbody></table><h2 id="types-documentation" tabindex="-1">Types Documentation <a class="header-anchor" href="#types-documentation" aria-label="Permalink to &quot;Types Documentation&quot;">​</a></h2><h3 id="enum-floatpopupmode" tabindex="-1">enum FloatPopupMode <a class="header-anchor" href="#enum-floatpopupmode" aria-label="Permalink to &quot;enum FloatPopupMode&quot;">​</a></h3><table><thead><tr><th>Enumerator</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>Angle</td><td></td><td>angles in radians (and degs in the brackets)</td></tr><tr><td>Value</td><td></td><td>selected sin and cos values and numbers from 0 to 4</td></tr></tbody></table><p>Values in the popup menu for floats.</p><h3 id="enum-levelofdetail" tabindex="-1">enum LevelOfDetail <a class="header-anchor" href="#enum-levelofdetail" aria-label="Permalink to &quot;enum LevelOfDetail&quot;">​</a></h3><table><thead><tr><th>Enumerator</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>Full</td><td></td><td></td></tr><tr><td>SetValues</td><td></td><td></td></tr><tr><td>Label</td><td></td><td></td></tr><tr><td>LightCycle</td><td></td><td></td></tr></tbody></table><h3 id="enum-pinkind" tabindex="-1">enum PinKind <a class="header-anchor" href="#enum-pinkind" aria-label="Permalink to &quot;enum PinKind&quot;">​</a></h3><table><thead><tr><th>Enumerator</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>Output</td><td></td><td>on the box right hand side</td></tr><tr><td>Input</td><td></td><td>on the box left hand side</td></tr></tbody></table><p>kinds (in/out) of <a href="/cpp-api-reference/namespaces/namespaceWorkspace.html">Workspace</a> Pin</p><h3 id="enum-workspacediwneaction" tabindex="-1">enum WorkspaceDiwneAction <a class="header-anchor" href="#enum-workspacediwneaction" aria-label="Permalink to &quot;enum WorkspaceDiwneAction&quot;">​</a></h3><table><thead><tr><th>Enumerator</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>None</td><td></td><td></td></tr><tr><td>CreateAndPlugTypeConstructor</td><td></td><td></td></tr><tr><td>NOTunselectAllNodes</td><td></td><td></td></tr></tbody></table><h3 id="typedef-corenodeiter" tabindex="-1">typedef coreNodeIter <a class="header-anchor" href="#typedef-corenodeiter" aria-label="Permalink to &quot;typedef coreNodeIter&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">typedef</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vector</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">CoreNode</span><span style="color:#E1E4E8;">&gt; &gt;::iterator </span><span style="color:#B392F0;">Workspace</span><span style="color:#E1E4E8;">::coreNodeIter;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">typedef</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vector</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">CoreNode</span><span style="color:#24292E;">&gt; &gt;::iterator </span><span style="color:#6F42C1;">Workspace</span><span style="color:#24292E;">::coreNodeIter;</span></span></code></pre></div><h2 id="functions-documentation" tabindex="-1">Functions Documentation <a class="header-anchor" href="#functions-documentation" aria-label="Permalink to &quot;Functions Documentation&quot;">​</a></h2><h3 id="function-addnodetonodeeditor" tabindex="-1">function addNodeToNodeEditor <a class="header-anchor" href="#function-addnodetonodeeditor" aria-label="Permalink to &quot;function addNodeToNodeEditor&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">template</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">typename</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> &gt;</span></span>
<span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">auto</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">addNodeToNodeEditor</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">ImVec2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">position</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;">ImVec2</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">template</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">typename</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> &gt;</span></span>
<span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">auto</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">addNodeToNodeEditor</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">ImVec2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#E36209;">position</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">ImVec2</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>This function takes snapshot of current state.</p><h3 id="function-addnodetonodeeditornosave" tabindex="-1">function addNodeToNodeEditorNoSave <a class="header-anchor" href="#function-addnodetonodeeditornosave" aria-label="Permalink to &quot;function addNodeToNodeEditorNoSave&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">template</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">typename</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> &gt;</span></span>
<span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">auto</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">addNodeToNodeEditorNoSave</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">ImVec2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">position</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;">ImVec2</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">template</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">typename</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> &gt;</span></span>
<span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">auto</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">addNodeToNodeEditorNoSave</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">ImVec2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#E36209;">position</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">ImVec2</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-connectnodes" tabindex="-1">function connectNodes <a class="header-anchor" href="#function-connectnodes" aria-label="Permalink to &quot;function connectNodes&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">connectNodes</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">CoreNode</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#FFAB70;">lhs</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">CoreNode</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#FFAB70;">rhs</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">lhsPin</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">rhsPin</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">connectNodes</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">CoreNode</span><span style="color:#24292E;"> &gt; </span><span style="color:#E36209;">lhs</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">CoreNode</span><span style="color:#24292E;"> &gt; </span><span style="color:#E36209;">rhs</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">lhsPin</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">rhsPin</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-connectnodesnosave" tabindex="-1">function connectNodesNoSave <a class="header-anchor" href="#function-connectnodesnosave" aria-label="Permalink to &quot;function connectNodesNoSave&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">connectNodesNoSave</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">CoreNode</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#FFAB70;">lhs</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">CoreNode</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#FFAB70;">rhs</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">lhsPin</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">rhsPin</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">connectNodesNoSave</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">CoreNode</span><span style="color:#24292E;"> &gt; </span><span style="color:#E36209;">lhs</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">CoreNode</span><span style="color:#24292E;"> &gt; </span><span style="color:#E36209;">rhs</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">lhsPin</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">rhsPin</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="attributes-documentation" tabindex="-1">Attributes Documentation <a class="header-anchor" href="#attributes-documentation" aria-label="Permalink to &quot;Attributes Documentation&quot;">​</a></h2><h3 id="variable-g-diwne" tabindex="-1">variable g_diwne <a class="header-anchor" href="#variable-g-diwne" aria-label="Permalink to &quot;variable g_diwne&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">WorkspaceDiwne </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> g_diwne </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nullptr</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">WorkspaceDiwne </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> g_diwne </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nullptr</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-levelofdetailname" tabindex="-1">variable LevelOfDetailName <a class="header-anchor" href="#variable-levelofdetailname" aria-label="Permalink to &quot;variable LevelOfDetailName&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::map</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> LevelOfDetail, </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> LevelOfDetailName </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {{</span><span style="color:#B392F0;">LevelOfDetail</span><span style="color:#E1E4E8;">::Full, </span><span style="color:#9ECBFF;">&quot;Full&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">                                                                     {</span><span style="color:#B392F0;">LevelOfDetail</span><span style="color:#E1E4E8;">::SetValues, </span><span style="color:#9ECBFF;">&quot;Set values&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">                                                                     {</span><span style="color:#B392F0;">LevelOfDetail</span><span style="color:#E1E4E8;">::Label, </span><span style="color:#9ECBFF;">&quot;Label&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">                                                                     {</span><span style="color:#B392F0;">LevelOfDetail</span><span style="color:#E1E4E8;">::LightCycle, </span><span style="color:#9ECBFF;">&quot;Light cycle&quot;</span><span style="color:#E1E4E8;">}};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::map</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> LevelOfDetail, </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> LevelOfDetailName </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {{</span><span style="color:#6F42C1;">LevelOfDetail</span><span style="color:#24292E;">::Full, </span><span style="color:#032F62;">&quot;Full&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">                                                                     {</span><span style="color:#6F42C1;">LevelOfDetail</span><span style="color:#24292E;">::SetValues, </span><span style="color:#032F62;">&quot;Set values&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">                                                                     {</span><span style="color:#6F42C1;">LevelOfDetail</span><span style="color:#24292E;">::Label, </span><span style="color:#032F62;">&quot;Label&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">                                                                     {</span><span style="color:#6F42C1;">LevelOfDetail</span><span style="color:#24292E;">::LightCycle, </span><span style="color:#032F62;">&quot;Light cycle&quot;</span><span style="color:#24292E;">}};</span></span></code></pre></div><h3 id="variable-pincolorbackground" tabindex="-1">variable PinColorBackground <a class="header-anchor" href="#variable-pincolorbackground" aria-label="Permalink to &quot;variable PinColorBackground&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::map</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::EValueType, EColor </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> PinColorBackground </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EColor</span><span style="color:#E1E4E8;">::FloatPin},         {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Matrix, </span><span style="color:#B392F0;">EColor</span><span style="color:#E1E4E8;">::MatrixPin},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::MatrixMul, </span><span style="color:#B392F0;">EColor</span><span style="color:#E1E4E8;">::MatrixMulPin}, {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Pulse, </span><span style="color:#B392F0;">EColor</span><span style="color:#E1E4E8;">::PulsePin},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Quat, </span><span style="color:#B392F0;">EColor</span><span style="color:#E1E4E8;">::QuatPin},           {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Screen, </span><span style="color:#B392F0;">EColor</span><span style="color:#E1E4E8;">::ScreenPin},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec3, </span><span style="color:#B392F0;">EColor</span><span style="color:#E1E4E8;">::Vec3Pin},           {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec4, </span><span style="color:#B392F0;">EColor</span><span style="color:#E1E4E8;">::Vec4Pin}};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::map</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::EValueType, EColor </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> PinColorBackground </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EColor</span><span style="color:#24292E;">::FloatPin},         {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Matrix, </span><span style="color:#6F42C1;">EColor</span><span style="color:#24292E;">::MatrixPin},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::MatrixMul, </span><span style="color:#6F42C1;">EColor</span><span style="color:#24292E;">::MatrixMulPin}, {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Pulse, </span><span style="color:#6F42C1;">EColor</span><span style="color:#24292E;">::PulsePin},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Quat, </span><span style="color:#6F42C1;">EColor</span><span style="color:#24292E;">::QuatPin},           {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Screen, </span><span style="color:#6F42C1;">EColor</span><span style="color:#24292E;">::ScreenPin},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec3, </span><span style="color:#6F42C1;">EColor</span><span style="color:#24292E;">::Vec3Pin},           {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec4, </span><span style="color:#6F42C1;">EColor</span><span style="color:#24292E;">::Vec4Pin}};</span></span></code></pre></div><p><strong>Todo</strong>: Remove these.</p><h3 id="variable-pincolorforeground" tabindex="-1">variable PinColorForeground <a class="header-anchor" href="#variable-pincolorforeground" aria-label="Permalink to &quot;variable PinColorForeground&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::map</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::EValueType, EColor </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> PinColorForeground </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EColor</span><span style="color:#E1E4E8;">::InnerFloatPin},         {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Matrix, </span><span style="color:#B392F0;">EColor</span><span style="color:#E1E4E8;">::InnerMatrixPin},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::MatrixMul, </span><span style="color:#B392F0;">EColor</span><span style="color:#E1E4E8;">::InnerMatrixMulPin}, {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Pulse, </span><span style="color:#B392F0;">EColor</span><span style="color:#E1E4E8;">::InnerPulsePin},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Quat, </span><span style="color:#B392F0;">EColor</span><span style="color:#E1E4E8;">::InnerQuatPin},           {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Screen, </span><span style="color:#B392F0;">EColor</span><span style="color:#E1E4E8;">::InnerScreenPin},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec3, </span><span style="color:#B392F0;">EColor</span><span style="color:#E1E4E8;">::InnerVec3Pin},           {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec4, </span><span style="color:#B392F0;">EColor</span><span style="color:#E1E4E8;">::InnerVec4Pin}};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::map</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::EValueType, EColor </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> PinColorForeground </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EColor</span><span style="color:#24292E;">::InnerFloatPin},         {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Matrix, </span><span style="color:#6F42C1;">EColor</span><span style="color:#24292E;">::InnerMatrixPin},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::MatrixMul, </span><span style="color:#6F42C1;">EColor</span><span style="color:#24292E;">::InnerMatrixMulPin}, {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Pulse, </span><span style="color:#6F42C1;">EColor</span><span style="color:#24292E;">::InnerPulsePin},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Quat, </span><span style="color:#6F42C1;">EColor</span><span style="color:#24292E;">::InnerQuatPin},           {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Screen, </span><span style="color:#6F42C1;">EColor</span><span style="color:#24292E;">::InnerScreenPin},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec3, </span><span style="color:#6F42C1;">EColor</span><span style="color:#24292E;">::InnerVec3Pin},           {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec4, </span><span style="color:#6F42C1;">EColor</span><span style="color:#24292E;">::InnerVec4Pin}};</span></span></code></pre></div><h3 id="variable-pinshapebackground" tabindex="-1">variable PinShapeBackground <a class="header-anchor" href="#variable-pinshapebackground" aria-label="Permalink to &quot;variable PinShapeBackground&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::map</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::EValueType, </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::IconType </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> PinShapeBackground </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">IconType</span><span style="color:#E1E4E8;">::Rectangle},     {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Matrix, </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">IconType</span><span style="color:#E1E4E8;">::Rectangle},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::MatrixMul, </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">IconType</span><span style="color:#E1E4E8;">::Rectangle}, {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Pulse, </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">IconType</span><span style="color:#E1E4E8;">::Rectangle},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Quat, </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">IconType</span><span style="color:#E1E4E8;">::Rectangle},      {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Screen, </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">IconType</span><span style="color:#E1E4E8;">::Rectangle},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec3, </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">IconType</span><span style="color:#E1E4E8;">::Rectangle},      {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec4, </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">IconType</span><span style="color:#E1E4E8;">::Rectangle}};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::map</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::EValueType, </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::IconType </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> PinShapeBackground </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">IconType</span><span style="color:#24292E;">::Rectangle},     {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Matrix, </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">IconType</span><span style="color:#24292E;">::Rectangle},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::MatrixMul, </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">IconType</span><span style="color:#24292E;">::Rectangle}, {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Pulse, </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">IconType</span><span style="color:#24292E;">::Rectangle},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Quat, </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">IconType</span><span style="color:#24292E;">::Rectangle},      {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Screen, </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">IconType</span><span style="color:#24292E;">::Rectangle},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec3, </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">IconType</span><span style="color:#24292E;">::Rectangle},      {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec4, </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">IconType</span><span style="color:#24292E;">::Rectangle}};</span></span></code></pre></div><h3 id="variable-pinshapeforeground" tabindex="-1">variable PinShapeForeground <a class="header-anchor" href="#variable-pinshapeforeground" aria-label="Permalink to &quot;variable PinShapeForeground&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::map</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::EValueType, </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::IconType </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> PinShapeForeground </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">IconType</span><span style="color:#E1E4E8;">::TriangleRight},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Matrix, </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">IconType</span><span style="color:#E1E4E8;">::TriangleRight},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::MatrixMul, </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">IconType</span><span style="color:#E1E4E8;">::Cross},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Pulse, </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">IconType</span><span style="color:#E1E4E8;">::TriangleRight},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Quat, </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">IconType</span><span style="color:#E1E4E8;">::TriangleRight},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Screen, </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">IconType</span><span style="color:#E1E4E8;">::TriangleRight},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec3, </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">IconType</span><span style="color:#E1E4E8;">::TriangleRight},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec4, </span><span style="color:#B392F0;">DIWNE</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">IconType</span><span style="color:#E1E4E8;">::TriangleRight}};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::map</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::EValueType, </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::IconType </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> PinShapeForeground </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">IconType</span><span style="color:#24292E;">::TriangleRight},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Matrix, </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">IconType</span><span style="color:#24292E;">::TriangleRight},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::MatrixMul, </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">IconType</span><span style="color:#24292E;">::Cross},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Pulse, </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">IconType</span><span style="color:#24292E;">::TriangleRight},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Quat, </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">IconType</span><span style="color:#24292E;">::TriangleRight},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Screen, </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">IconType</span><span style="color:#24292E;">::TriangleRight},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec3, </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">IconType</span><span style="color:#24292E;">::TriangleRight},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec4, </span><span style="color:#6F42C1;">DIWNE</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">IconType</span><span style="color:#24292E;">::TriangleRight}};</span></span></code></pre></div><hr><p>Updated on 2024-11-06 at 20:16:53 +0000</p>`,51),p=[l];function t(r,c,E,y,i,d){return a(),n("div",null,p)}const F=s(o,[["render",t]]);export{u as __pageData,F as default};
