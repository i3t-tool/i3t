import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.0f749972.js";const f=JSON.parse('{"title":"ConfirmModalStrategy","description":"","frontmatter":{"title":"ConfirmModalStrategy"},"headers":[],"relativePath":"cpp-api-reference/classes/classConfirmModalStrategy.md","filePath":"cpp-api-reference/classes/classConfirmModalStrategy.md"}'),e={name:"cpp-api-reference/classes/classConfirmModalStrategy.md"},t=o(`<h1 id="confirmmodalstrategy" tabindex="-1">ConfirmModalStrategy <a class="header-anchor" href="#confirmmodalstrategy" aria-label="Permalink to &quot;ConfirmModalStrategy&quot;">​</a></h1><p><code>#include &quot;GUI/Elements/Modals/ConfirmModal.h&quot;</code></p><p>Inherited by <a href="/cpp-api-reference/classes/classBeforeExitSceneStrategy.html">BeforeExitSceneStrategy</a></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classConfirmModalStrategy.html#function-confirmmodalstrategy">ConfirmModalStrategy</a></strong>(std::string title, std::string message, std::string yesText =&quot;Yes&quot;, std::string noText =&quot;No&quot;)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classConfirmModalStrategy.html#function-beforeopen">beforeOpen</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classConfirmModalStrategy.html#function-onno">onNo</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classConfirmModalStrategy.html#function-onyes">onYes</a></strong>()</td></tr></tbody></table><h2 id="protected-attributes" tabindex="-1">Protected Attributes <a class="header-anchor" href="#protected-attributes" aria-label="Permalink to &quot;Protected Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>class <a href="/cpp-api-reference/classes/classConfirmModal.html">ConfirmModal</a> *</td><td><strong><a href="/cpp-api-reference/classes/classConfirmModalStrategy.html#variable-m-modal">m_modal</a></strong> &lt;br&gt;Non-owning pointer to the modal window set by <a href="./.html">ConfirmModal</a> to point to itself.</td></tr></tbody></table><h2 id="friends" tabindex="-1">Friends <a class="header-anchor" href="#friends" aria-label="Permalink to &quot;Friends&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classConfirmModalStrategy.html#friend-confirmmodal">ConfirmModal</a></strong></td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-confirmmodalstrategy" tabindex="-1">function ConfirmModalStrategy <a class="header-anchor" href="#function-confirmmodalstrategy" aria-label="Permalink to &quot;function ConfirmModalStrategy&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ConfirmModalStrategy</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string title,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string message,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string yesText </span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;Yes&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string noText </span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;No&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ConfirmModalStrategy</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string title,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string message,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string yesText </span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;Yes&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string noText </span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;No&quot;</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-beforeopen" tabindex="-1">function beforeOpen <a class="header-anchor" href="#function-beforeopen" aria-label="Permalink to &quot;function beforeOpen&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">beforeOpen</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">beforeOpen</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classBeforeExitSceneStrategy.html#function-beforeopen">BeforeExitSceneStrategy::beforeOpen</a></p><h3 id="function-onno" tabindex="-1">function onNo <a class="header-anchor" href="#function-onno" aria-label="Permalink to &quot;function onNo&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onNo</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onNo</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classBeforeExitSceneStrategy.html#function-onno">BeforeExitSceneStrategy::onNo</a></p><h3 id="function-onyes" tabindex="-1">function onYes <a class="header-anchor" href="#function-onyes" aria-label="Permalink to &quot;function onYes&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onYes</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onYes</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classBeforeExitSceneStrategy.html#function-onyes">BeforeExitSceneStrategy::onYes</a></p><h2 id="protected-attributes-documentation" tabindex="-1">Protected Attributes Documentation <a class="header-anchor" href="#protected-attributes-documentation" aria-label="Permalink to &quot;Protected Attributes Documentation&quot;">​</a></h2><h3 id="variable-m-modal" tabindex="-1">variable m_modal <a class="header-anchor" href="#variable-m-modal" aria-label="Permalink to &quot;variable m_modal&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ConfirmModal</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> m_modal </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nullptr</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ConfirmModal</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> m_modal </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nullptr</span><span style="color:#24292E;">;</span></span></code></pre></div><p>Non-owning pointer to the modal window set by <a href="./.html">ConfirmModal</a> to point to itself.</p><h2 id="friends-1" tabindex="-1">Friends <a class="header-anchor" href="#friends-1" aria-label="Permalink to &quot;Friends&quot;">​</a></h2><h3 id="friend-confirmmodal" tabindex="-1">friend ConfirmModal <a class="header-anchor" href="#friend-confirmmodal" aria-label="Permalink to &quot;friend ConfirmModal&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">friend</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ConfirmModal</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">ConfirmModal</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">friend</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ConfirmModal</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">ConfirmModal</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre></div><hr><p>Updated on 2025-01-07 at 10:31:20 +0000</p>`,30),l=[t];function p(r,c,i,d,y,h){return a(),n("div",null,l)}const u=s(e,[["render",p]]);export{f as __pageData,u as default};
