import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.0f749972.js";const u=JSON.parse('{"title":"WindowManager","description":"","frontmatter":{"title":"WindowManager","summary":"Application window manager."},"headers":[],"relativePath":"cpp-api-reference/classes/classWindowManager.md","filePath":"cpp-api-reference/classes/classWindowManager.md"}'),l={name:"cpp-api-reference/classes/classWindowManager.md"},e=o(`<h1 id="windowmanager" tabindex="-1">WindowManager <a class="header-anchor" href="#windowmanager" aria-label="Permalink to &quot;WindowManager&quot;">​</a></h1><p><a href="./.html">Application</a> window manager. <a href="#detailed-description">More...</a></p><p><code>#include &quot;GUI/WindowManager.h&quot;</code></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-windowmanager">WindowManager</a></strong>() =default</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-addwindow">addWindow</a></strong>(<a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classIWindow.html">IWindow</a> &gt; window)&lt;br&gt;Add a dockable window.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-clear">clear</a></strong>()&lt;br&gt;Remove all managed windows.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-draw">draw</a></strong>()&lt;br&gt;Draw all managed windows.</td></tr><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classIWindow.html">IWindow</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-finddockablewindowbyid">findDockableWindowByID</a></strong>(const char * ID)</td></tr><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classIWindow.html">IWindow</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-findimguiwindow">findImGuiWindow</a></strong>(ImGuiWindow * window)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-focuswindow">focusWindow</a></strong>(<a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classIWindow.html">IWindow</a> &gt; window, bool updateImGuiFocus =true)</td></tr><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classIWindow.html">IWindow</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-getcurrentwindow">getCurrentWindow</a></strong>()&lt;br&gt;Returns the last window that started being constructed (eg.</td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classIWindow.html">IWindow</a> &gt; &gt;</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-getdockablewindows">getDockableWindows</a></strong>() const</td></tr><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classIWindow.html">IWindow</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-getfocusedwindow">getFocusedWindow</a></strong>()</td></tr><tr><td>template &lt;typename T &amp;gt; &lt;br&gt;<a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; T &gt;</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-getwindowptr">getWindowPtr</a></strong>()&lt;br&gt;Find a dockable window of type T and return a shared pointer to it.</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-haswindow">hasWindow</a></strong>(const std::string &amp; id)</td></tr><tr><td>template &lt;typename T &amp;gt; &lt;br&gt;bool</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-isfocused">isFocused</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-loadlayout">loadLayout</a></strong>(std::string path)</td></tr><tr><td>template &lt;typename TStrategy &amp;gt; &lt;br&gt;void</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-openconfirmmodal">openConfirmModal</a></strong>()</td></tr><tr><td>template &lt;typename T &amp;gt; &lt;br&gt;void</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-openmodal">openModal</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-openmodal">openModal</a></strong>(<a href="/cpp-api-reference/files/Types_8h.html#using-uptr">UPtr</a>&lt; <a href="/cpp-api-reference/classes/classIWindow.html">IWindow</a> &gt; modalInstance)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-removewindow">removeWindow</a></strong>(const std::string &amp; windowId)&lt;br&gt;Hide and remove window.</td></tr><tr><td>template &lt;typename T &amp;gt; &lt;br&gt;void</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-showuniquewindow">showUniqueWindow</a></strong>()&lt;br&gt;Create and show desired window.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-showwindow">showWindow</a></strong>(<a href="/cpp-api-reference/classes/classIWindow.html">IWindow</a> * window, bool show)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-showwindow">showWindow</a></strong>(<a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classIWindow.html">IWindow</a> &gt; window, bool show)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-updatefocus">updateFocus</a></strong>()&lt;br&gt;Handles automatic window focus change.</td></tr><tr><td>glm::vec2</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#function-getmousepositionforwindow">getMousePositionForWindow</a></strong>(const <a href="/cpp-api-reference/classes/classIWindow.html">IWindow</a> * window)&lt;br&gt;Returns relative mouse position for a specified window.</td></tr></tbody></table><h2 id="friends" tabindex="-1">Friends <a class="header-anchor" href="#friends" aria-label="Permalink to &quot;Friends&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classWindowManager.html#friend-iwindow">IWindow</a></strong></td></tr></tbody></table><h2 id="detailed-description" tabindex="-1">Detailed Description <a class="header-anchor" href="#detailed-description" aria-label="Permalink to &quot;Detailed Description&quot;">​</a></h2><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WindowManager</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WindowManager</span><span style="color:#24292E;">;</span></span></code></pre></div><p><a href="./.html">Application</a> window manager.</p><p>Handles window lifetime, visibility, focus and drawing. As well as some utility methods. Also holds a reference to the last drawn window (See below).</p><p>Each window should call its <a href="/cpp-api-reference/classes/classIWindow.html#function-updatewindowinfo">IWindow::updateWindowInfo()</a> method after its ImGui::Begin() call. This method updates its window dimension/position information and marks itself as the current window of its assigned <a href="/cpp-api-reference/classes/classWindowManager.html">WindowManager</a>. With access to window manager any code can retrieve window information without an explicit reference to the window being constructed.</p><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-windowmanager" tabindex="-1">function WindowManager <a class="header-anchor" href="#function-windowmanager" aria-label="Permalink to &quot;function WindowManager&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">WindowManager</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">=default</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">WindowManager</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">=default</span></span></code></pre></div><h3 id="function-addwindow" tabindex="-1">function addWindow <a class="header-anchor" href="#function-addwindow" aria-label="Permalink to &quot;function addWindow&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">addWindow</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">IWindow</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#FFAB70;">window</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">addWindow</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">IWindow</span><span style="color:#24292E;"> &gt; </span><span style="color:#E36209;">window</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Add a dockable window.</p><h3 id="function-clear" tabindex="-1">function clear <a class="header-anchor" href="#function-clear" aria-label="Permalink to &quot;function clear&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">clear</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">clear</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Remove all managed windows.</p><h3 id="function-draw" tabindex="-1">function draw <a class="header-anchor" href="#function-draw" aria-label="Permalink to &quot;function draw&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">draw</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">draw</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Draw all managed windows.</p><h3 id="function-finddockablewindowbyid" tabindex="-1">function findDockableWindowByID <a class="header-anchor" href="#function-finddockablewindowbyid" aria-label="Permalink to &quot;function findDockableWindowByID&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">IWindow</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">findDockableWindowByID</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">ID</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">IWindow</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">findDockableWindowByID</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">ID</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-findimguiwindow" tabindex="-1">function findImGuiWindow <a class="header-anchor" href="#function-findimguiwindow" aria-label="Permalink to &quot;function findImGuiWindow&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">IWindow</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">findImGuiWindow</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">ImGuiWindow</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">window</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">IWindow</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">findImGuiWindow</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">ImGuiWindow</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">window</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-focuswindow" tabindex="-1">function focusWindow <a class="header-anchor" href="#function-focuswindow" aria-label="Permalink to &quot;function focusWindow&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">focusWindow</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">IWindow</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#FFAB70;">window</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">updateImGuiFocus</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">focusWindow</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">IWindow</span><span style="color:#24292E;"> &gt; </span><span style="color:#E36209;">window</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">updateImGuiFocus</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-getcurrentwindow" tabindex="-1">function getCurrentWindow <a class="header-anchor" href="#function-getcurrentwindow" aria-label="Permalink to &quot;function getCurrentWindow&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">IWindow</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">getCurrentWindow</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">IWindow</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">getCurrentWindow</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Returns the last window that started being constructed (eg.</p><p>the last window that called <a href="/cpp-api-reference/classes/classIWindow.html#function-updatewindowinfo">IWindow::updateWindowInfo()</a> after its ImGui::Begin() call).</p><h3 id="function-getdockablewindows" tabindex="-1">function getDockableWindows <a class="header-anchor" href="#function-getdockablewindows" aria-label="Permalink to &quot;function getDockableWindows&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vector</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">IWindow</span><span style="color:#E1E4E8;"> &gt; &gt; </span><span style="color:#B392F0;">getDockableWindows</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vector</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">IWindow</span><span style="color:#24292E;"> &gt; &gt; </span><span style="color:#6F42C1;">getDockableWindows</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-getfocusedwindow" tabindex="-1">function getFocusedWindow <a class="header-anchor" href="#function-getfocusedwindow" aria-label="Permalink to &quot;function getFocusedWindow&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">IWindow</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">getFocusedWindow</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">IWindow</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">getFocusedWindow</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-getwindowptr" tabindex="-1">function getWindowPtr <a class="header-anchor" href="#function-getwindowptr" aria-label="Permalink to &quot;function getWindowPtr&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">template</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">typename</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> &gt;</span></span>
<span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">getWindowPtr</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">template</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">typename</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> &gt;</span></span>
<span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">getWindowPtr</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Find a dockable window of type T and return a shared pointer to it.</p><p><strong>Template Parameters</strong>:</p><ul><li><strong>T</strong></li></ul><p><strong>Return</strong>:</p><h3 id="function-haswindow" tabindex="-1">function hasWindow <a class="header-anchor" href="#function-haswindow" aria-label="Permalink to &quot;function hasWindow&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hasWindow</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">id</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hasWindow</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">id</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-isfocused" tabindex="-1">function isFocused <a class="header-anchor" href="#function-isfocused" aria-label="Permalink to &quot;function isFocused&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">template</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">typename</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> &gt;</span></span>
<span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isFocused</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">template</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">typename</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> &gt;</span></span>
<span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isFocused</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-loadlayout" tabindex="-1">function loadLayout <a class="header-anchor" href="#function-loadlayout" aria-label="Permalink to &quot;function loadLayout&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">loadLayout</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">path</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">loadLayout</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;"> </span><span style="color:#E36209;">path</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-openconfirmmodal" tabindex="-1">function openConfirmModal <a class="header-anchor" href="#function-openconfirmmodal" aria-label="Permalink to &quot;function openConfirmModal&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">template</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">typename</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TStrategy</span><span style="color:#E1E4E8;"> &gt;</span></span>
<span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">openConfirmModal</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">template</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">typename</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TStrategy</span><span style="color:#24292E;"> &gt;</span></span>
<span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">openConfirmModal</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-openmodal" tabindex="-1">function openModal <a class="header-anchor" href="#function-openmodal" aria-label="Permalink to &quot;function openModal&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">template</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">typename</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> &gt;</span></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">openModal</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">template</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">typename</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> &gt;</span></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">openModal</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-openmodal-1" tabindex="-1">function openModal <a class="header-anchor" href="#function-openmodal-1" aria-label="Permalink to &quot;function openModal&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">openModal</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">UPtr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">IWindow</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#FFAB70;">modalInstance</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">openModal</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">UPtr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">IWindow</span><span style="color:#24292E;"> &gt; </span><span style="color:#E36209;">modalInstance</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-removewindow" tabindex="-1">function removeWindow <a class="header-anchor" href="#function-removewindow" aria-label="Permalink to &quot;function removeWindow&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">removeWindow</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">windowId</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">removeWindow</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">windowId</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Hide and remove window.</p><p><strong>Parameters</strong>:</p><ul><li><strong>windowId</strong> identification of window to hide.</li></ul><p>Called by <a href="/cpp-api-reference/classes/classHideWindowCommand.html">HideWindowCommand</a>.</p><h3 id="function-showuniquewindow" tabindex="-1">function showUniqueWindow <a class="header-anchor" href="#function-showuniquewindow" aria-label="Permalink to &quot;function showUniqueWindow&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">template</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">typename</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> &gt;</span></span>
<span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">showUniqueWindow</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">template</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">typename</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> &gt;</span></span>
<span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">showUniqueWindow</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Create and show desired window.</p><p><strong>Template Parameters</strong>:</p><ul><li><strong>T</strong> window to create. T must be derived from <a href="/cpp-api-reference/classes/classIWindow.html">IWindow</a> class.</li></ul><h3 id="function-showwindow" tabindex="-1">function showWindow <a class="header-anchor" href="#function-showwindow" aria-label="Permalink to &quot;function showWindow&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">showWindow</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">IWindow</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">window</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">show</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">showWindow</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">IWindow</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">window</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">show</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-showwindow-1" tabindex="-1">function showWindow <a class="header-anchor" href="#function-showwindow-1" aria-label="Permalink to &quot;function showWindow&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">showWindow</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">IWindow</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#FFAB70;">window</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">show</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">showWindow</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">IWindow</span><span style="color:#24292E;"> &gt; </span><span style="color:#E36209;">window</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">show</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-updatefocus" tabindex="-1">function updateFocus <a class="header-anchor" href="#function-updatefocus" aria-label="Permalink to &quot;function updateFocus&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateFocus</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateFocus</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Handles automatic window focus change.</p><h3 id="function-getmousepositionforwindow" tabindex="-1">function getMousePositionForWindow <a class="header-anchor" href="#function-getmousepositionforwindow" aria-label="Permalink to &quot;function getMousePositionForWindow&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vec2</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getMousePositionForWindow</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IWindow</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">window</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vec2</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getMousePositionForWindow</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IWindow</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">window</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Returns relative mouse position for a specified window.</p><p>This is a utility method to fetch current mouse position from <a href="/cpp-api-reference/classes/classInputManager.html">InputManager</a> and then make that position relative to the specified window.</p><h2 id="friends-1" tabindex="-1">Friends <a class="header-anchor" href="#friends-1" aria-label="Permalink to &quot;Friends&quot;">​</a></h2><h3 id="friend-iwindow" tabindex="-1">friend IWindow <a class="header-anchor" href="#friend-iwindow" aria-label="Permalink to &quot;friend IWindow&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">friend</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IWindow</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">IWindow</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">friend</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IWindow</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">IWindow</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre></div><hr><p>Updated on 2025-01-07 at 13:04:15 +0000</p>`,83),p=[e];function t(c,r,i,d,y,E){return a(),n("div",null,p)}const w=s(l,[["render",t]]);export{u as __pageData,w as default};
