import{_ as e,o as s,c as a,Q as r}from"./chunks/framework.0f749972.js";const _=JSON.parse('{"title":"Classes","description":"","frontmatter":{"title":"Classes"},"headers":[],"relativePath":"cpp-api-reference/classes/index.md","filePath":"cpp-api-reference/classes/index.md"}'),t={name:"cpp-api-reference/classes/index.md"},l=r('<h1 id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-label="Permalink to &quot;Classes&quot;">â€‹</a></h1><ul><li><strong>class <a href="/cpp-api-reference/classes/classAboutWindow.html">AboutWindow</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classApplication.html">Application</a></strong> &lt;br&gt;<a href="./.html">Application</a> class.</li><li><strong>class <a href="/cpp-api-reference/classes/classBeforeCloseCommand.html">BeforeCloseCommand</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classBeforeExitSceneStrategy.html">BeforeExitSceneStrategy</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classBeforeNewTutModal.html">BeforeNewTutModal</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structCOutRedirect.html">COutRedirect</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structChoiceTask.html">ChoiceTask</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classChronos.html">Chronos</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classCloseCommand.html">CloseCommand</a></strong> &lt;br&gt;int - exit code</li><li><strong>struct <a href="/cpp-api-reference/classes/structColor.html">Color</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classCommand.html">Command</a></strong> &lt;br&gt;Base class for all commands.</li><li><strong>class <a href="/cpp-api-reference/classes/classCommandDispatcher.html">CommandDispatcher</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structConfig.html">Config</a></strong> &lt;br&gt;A configuration structure.</li><li><strong>struct <a href="/cpp-api-reference/classes/structConfiguration.html">Configuration</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classConfirmModal.html">ConfirmModal</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classConfirmModalStrategy.html">ConfirmModalStrategy</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classConsoleCommand.html">ConsoleCommand</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceCore.html">Core</a></strong> &lt;br&gt;File with operations table. <ul><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceCore_1_1Builder.html">Builder</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1Camera.html">Camera</a></strong> &lt;br&gt;<a href="./.html">Camera</a> has following outputs 0 -&gt; screen output 1 -&gt; proj * view matrix output 2 -&gt; mul output.</li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1Cycle.html">Cycle</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1Data.html">Data</a></strong> &lt;br&gt;Representation of the interconnection wire value (Shared piece of memory - union of all data types passed along the wire) and of the value stored in the defaultValues map (such as fovy for Perspective)</li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1DataMap.html">DataMap</a></strong> &lt;br&gt;In column-major order.</li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1GraphManager.html">GraphManager</a></strong> &lt;br&gt;You must manage <a href="./.html">GraphManager</a> lifecycle.</li><li><strong>struct <a href="/cpp-api-reference/classes/structCore_1_1HalfspaceSign.html">HalfspaceSign</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1IModelProxy.html">IModelProxy</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1IdGenerator.html">IdGenerator</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1ManagedResource.html">ManagedResource</a></strong> &lt;br&gt;Base class for objects that are the actual data managed by a <a href="./.html">ResourceManager</a>.</li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1MatrixTracker.html">MatrixTracker</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1Mesh.html">Mesh</a></strong> &lt;br&gt;<a href="./.html">Mesh</a> represents a complete 3D model. <ul><li><strong>struct <a href="/cpp-api-reference/classes/structCore_1_1Mesh_1_1Material.html">Material</a></strong> &lt;br&gt;<a href="/cpp-api-reference/classes/classCore_1_1Data.html">Data</a> class holding basic material information.</li><li><strong>struct <a href="/cpp-api-reference/classes/structCore_1_1Mesh_1_1MeshPart.html">MeshPart</a></strong> &lt;br&gt;Individual part of the bigger mesh containing separate geometry, material and textures.</li><li><strong>struct <a href="/cpp-api-reference/classes/structCore_1_1Mesh_1_1TextureSet.html">TextureSet</a></strong> &lt;br&gt;A set of textures for multi-mapping.</li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1Model.html">Model</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1ModelResourceFiles.html">ModelResourceFiles</a></strong> &lt;br&gt;A set a of 3D file format files located somewhere in the filesystem.</li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a></strong> &lt;br&gt;Base class interface for all boxes.</li><li><strong>struct <a href="/cpp-api-reference/classes/structCore_1_1Operation.html">Operation</a></strong> &lt;br&gt;Description of each graph node (operation enum, default label, input and output pin names and types)</li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1Operator.html">Operator</a></strong> &lt;br&gt;Implementation of <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> class.</li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1Pin.html">Pin</a></strong> &lt;br&gt;<a href="./.html">Pin</a> used for connecting nodes.</li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1Resource.html">Resource</a></strong> &lt;br&gt;Object holding information about a resource.</li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1ResourceFiles.html">ResourceFiles</a></strong> &lt;br&gt;A collection of file paths in the filesystem that are together required to load a single resource like a model.</li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1ResourceManager.html">ResourceManager</a></strong> &lt;br&gt;<a href="/cpp-api-reference/classes/classCore_1_1Resource.html">Resource</a> manager for loading resources from the filesystem. <ul><li><strong>struct <a href="/cpp-api-reference/classes/structCore_1_1ResourceManager_1_1ModelSaveEntry.html">ModelSaveEntry</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structCore_1_1ResourceManager_1_1ResFilesCmp.html">ResFilesCmp</a></strong></li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1Sequence.html">Sequence</a></strong> &lt;br&gt;<a href="./.html">Sequence</a> of matrices. <ul><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1Sequence_1_1Storage.html">Storage</a></strong> &lt;br&gt;Structure for storing transform matrices.</li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1SequenceTree.html">SequenceTree</a></strong><ul><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1SequenceTree_1_1MatrixIterator.html">MatrixIterator</a></strong> &lt;br&gt;Iterator for traversing sequence tree.</li></ul></li><li><strong>struct <a href="/cpp-api-reference/classes/structCore_1_1SetValueResult.html">SetValueResult</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structCore_1_1TrackingResult.html">TrackingResult</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1Transform.html">Transform</a></strong><ul><li><strong>struct <a href="/cpp-api-reference/classes/structCore_1_1Transform_1_1DefaultValuePair.html">DefaultValuePair</a></strong></li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl.html">TransformImpl</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1AxisAngle_01_4.html">TransformImpl&lt; ETransformType::AxisAngle &gt;</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1EulerX_01_4.html">TransformImpl&lt; ETransformType::EulerX &gt;</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1EulerY_01_4.html">TransformImpl&lt; ETransformType::EulerY &gt;</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1EulerZ_01_4.html">TransformImpl&lt; ETransformType::EulerZ &gt;</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Free_01_4.html">TransformImpl&lt; ETransformType::Free &gt;</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Frustum_01_4.html">TransformImpl&lt; ETransformType::Frustum &gt;</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1LookAt_01_4.html">TransformImpl&lt; ETransformType::LookAt &gt;</a></strong> &lt;br&gt;Same as perspective projection node, but all values are locked.</li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Ortho_01_4.html">TransformImpl&lt; ETransformType::Ortho &gt;</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Perspective_01_4.html">TransformImpl&lt; ETransformType::Perspective &gt;</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Quat_01_4.html">TransformImpl&lt; ETransformType::Quat &gt;</a></strong> &lt;br&gt;Quaternion class Quaternion represents the matrix, crated from quaternion.</li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Scale_01_4.html">TransformImpl&lt; ETransformType::Scale &gt;</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Translation_01_4.html">TransformImpl&lt; ETransformType::Translation &gt;</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structCore_1_1TransformInfo.html">TransformInfo</a></strong> &lt;br&gt;Cannot outlive the sequence.</li><li><strong>struct <a href="/cpp-api-reference/classes/structCore_1_1TransformOperation.html">TransformOperation</a></strong> &lt;br&gt;Extends <a href="/cpp-api-reference/classes/structCore_1_1Operation.html">Operation</a> - adds properties to transform nodes. <ul><li><strong>struct <a href="/cpp-api-reference/classes/structCore_1_1TransformOperation_1_1NameTypePair.html">NameTypePair</a></strong></li></ul></li></ul></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html">DIWNE</a></strong><ul><li><strong>class <a href="/cpp-api-reference/classes/classDIWNE_1_1Diwne.html">Diwne</a></strong> &lt;br&gt;The node editor object In ancestor of this object you will probably store your nodes (links, pins) It store inter-object interactions Every <a href="./.html">DiwneObject</a> has reference to this object.</li><li><strong>class <a href="/cpp-api-reference/classes/classDIWNE_1_1DiwneObject.html">DiwneObject</a></strong> &lt;br&gt;All objects in <a href="/cpp-api-reference/namespaces/namespaceDIWNE.html">DIWNE</a> are inherited from <a href="./.html">DiwneObject</a><a href="./.html">DiwneObject</a> covers the functionality common to all Objects in the node editor - such as selecting, dragging, hovering,...</li><li><strong>class <a href="/cpp-api-reference/classes/classDIWNE_1_1Link.html">Link</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classDIWNE_1_1Node.html">Node</a></strong> &lt;br&gt;graphical representation od a box in the workspace node editor</li><li><strong>class <a href="/cpp-api-reference/classes/classDIWNE_1_1Pin.html">Pin</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structDIWNE_1_1SettingsDiwne.html">SettingsDiwne</a></strong> &lt;br&gt;Storage of all values.</li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classDescriptionDialog.html">DescriptionDialog</a></strong> &lt;br&gt;Scene description dialog.</li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceDetail.html">Detail</a></strong><ul><li><strong>struct <a href="/cpp-api-reference/classes/structDetail_1_1Overloaded.html">Overloaded</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structDetail_1_1RandInitializer.html">RandInitializer</a></strong></li></ul></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceEnumUtils.html">EnumUtils</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classEnvironment.html">Environment</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structError.html">Error</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structExplanation.html">Explanation</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceFilesystemUtils.html">FilesystemUtils</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceGUI.html">GUI</a></strong><ul><li><strong>struct <a href="/cpp-api-reference/classes/structGUI_1_1InputTextCallback__UserData.html">InputTextCallback_UserData</a></strong></li></ul></li><li><strong>struct <a href="/cpp-api-reference/classes/structGUIImage.html">GUIImage</a></strong> &lt;br&gt;A class for holding an image texture id with properties of the image.</li><li><strong>class <a href="/cpp-api-reference/classes/classHSLColor.html">HSLColor</a></strong> &lt;br&gt;Utility class for managing a HSL color.</li><li><strong>struct <a href="/cpp-api-reference/classes/structHeadline.html">Headline</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classHideWindowCommand.html">HideWindowCommand</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structHint.html">Hint</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceI3T.html">I3T</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classI3TApplication.html">I3TApplication</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classICommand.html">ICommand</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classIStateful.html">IStateful</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classITutorialRenderer.html">ITutorialRenderer</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classIVisitable.html">IVisitable</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classIWindow.html">IWindow</a></strong> &lt;br&gt;ImGui <a href="./.html">GUI</a><a href="/cpp-api-reference/classes/classWindow.html">Window</a> abstract class.</li><li><strong>class <a href="/cpp-api-reference/classes/classImportedModelsDialog.html">ImportedModelsDialog</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structInputBindings.html">InputBindings</a></strong><ul><li><strong>struct <a href="/cpp-api-reference/classes/structInputBindings_1_1ActionMapping.html">ActionMapping</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structInputBindings_1_1AxisMapping.html">AxisMapping</a></strong></li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classInputController.html">InputController</a></strong><ul><li><strong>struct <a href="/cpp-api-reference/classes/structInputController_1_1Action.html">Action</a></strong></li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classInputManager.html">InputManager</a></strong> &lt;br&gt;Class handling all GLUT interaction events (mouse and keyboard) and starting the label editor.</li><li><strong>struct <a href="/cpp-api-reference/classes/structInputTask.html">InputTask</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceJSON.html">JSON</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceJSONRTTR.html">JSONRTTR</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classKeys.html">Keys</a></strong> &lt;br&gt;Status of the keyboard keys and also mouse keys.</li><li><strong>class <a href="/cpp-api-reference/classes/classLoadWindowLayoutFromFileCommand.html">LoadWindowLayoutFromFileCommand</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classLoadWindowLayoutFromStringCommand.html">LoadWindowLayoutFromStringCommand</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classLogWindow.html">LogWindow</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classLogger.html">Logger</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structLoggingToggle.html">LoggingToggle</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceLuaSerializer.html">LuaSerializer</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classMainMenuBar.html">MainMenuBar</a></strong> &lt;br&gt;Top menu bar.</li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceMath.html">Math</a></strong> &lt;br&gt;Approximate double comparison.</li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceMenuBarDialogs.html">MenuBarDialogs</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classModalWindow.html">ModalWindow</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classModule.html">Module</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structMultiChoiceTask.html">MultiChoiceTask</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classNewProjectCommand.html">NewProjectCommand</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceNodeDeserializer.html">NodeDeserializer</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classNodeVisitor.html">NodeVisitor</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classRegistry.html">Registry</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classRemoveModelModal.html">RemoveModelModal</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classScriptEditorModal.html">ScriptEditorModal</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structScriptError.html">ScriptError</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classScriptingModule.html">ScriptingModule</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classScriptingNode.html">ScriptingNode</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classSelectLayoutDialog.html">SelectLayoutDialog</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classSerializationVisitor.html">SerializationVisitor</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classSetFocusedWindowCommand.html">SetFocusedWindowCommand</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classSetTutorialCommand.html">SetTutorialCommand</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classSetTutorialStepCommand.html">SetTutorialStepCommand</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classSetupDialog.html">SetupDialog</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classSingleton.html">Singleton</a></strong> &lt;br&gt;<a href="./.html">Singleton</a>.</li><li><strong>class <a href="/cpp-api-reference/classes/classStartWindow.html">StartWindow</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceState.html">State</a></strong><ul><li><strong>class <a href="/cpp-api-reference/classes/classState_1_1Scene.html">Scene</a></strong></li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classStateManager.html">StateManager</a></strong> &lt;br&gt;Handles app state management.</li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceString.html">String</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceSystemDialogs.html">SystemDialogs</a></strong> &lt;br&gt;A bunch of system dialogs.</li><li><strong>struct <a href="/cpp-api-reference/classes/structTask.html">Task</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classTestModule.html">TestModule</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structTestQuestion.html">TestQuestion</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classTheme.html">Theme</a></strong> &lt;br&gt;Global color scheme.</li><li><strong>struct <a href="/cpp-api-reference/classes/structThemeGroup.html">ThemeGroup</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structThemeVariable.html">ThemeVariable</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceTimeUtils.html">TimeUtils</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classTimer.html">Timer</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classToScriptVisitor.html">ToScriptVisitor</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classTutorial.html">Tutorial</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structTutorialElement.html">TutorialElement</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structTutorialHeader.html">TutorialHeader</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classTutorialLoader.html">TutorialLoader</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classTutorialManager.html">TutorialManager</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structTutorialStep.html">TutorialStep</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classTutorialWindow.html">TutorialWindow</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceUI.html">UI</a></strong><ul><li><strong>class <a href="/cpp-api-reference/classes/classUI_1_1Console.html">Console</a></strong> &lt;br&gt;The stdout is redirected to the console.</li><li><strong>class <a href="/cpp-api-reference/classes/classUI_1_1StyleEditor.html">StyleEditor</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classUI_1_1ViewportWindow.html">ViewportWindow</a></strong></li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classUIModule.html">UIModule</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structUserData.html">UserData</a></strong> &lt;br&gt;This struct is reflected by RTTR.</li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceUtils.html">Utils</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceVp.html">Vp</a></strong><ul><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1AbstractCamera.html">AbstractCamera</a></strong> &lt;br&gt;Abstract camera base class.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1AbstractOrbitCamera.html">AbstractOrbitCamera</a></strong> &lt;br&gt;Abstract camera that turns around a point (pivot) at a certain distance (radius).</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1AggregateCamera.html">AggregateCamera</a></strong> &lt;br&gt;Camera with multiple modes that it can seamlessly switch between.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1BoxBlurShader.html">BoxBlurShader</a></strong> &lt;br&gt;Two pass box blur with alpha support.</li><li><strong>struct <a href="/cpp-api-reference/classes/structVp_1_1CameraSettings.html">CameraSettings</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html">ColorAttachment</a></strong> &lt;br&gt;<a href="/cpp-api-reference/classes/structColor.html">Color</a> attachment using a 2D Texture.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1ColorShader.html">ColorShader</a></strong> &lt;br&gt;Basic shader to display unlit colored primitives.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1ColoredObject.html">ColoredObject</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1DepthAttachment.html">DepthAttachment</a></strong> &lt;br&gt;Depth attachment using a Renderbuffer.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1DisplayOptions.html">DisplayOptions</a></strong> &lt;br&gt;Various viewport display settings.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1Entity.html">Entity</a></strong> &lt;br&gt;A scene entity base class.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html">Framebuffer</a></strong> &lt;br&gt;A utility class for managing an OpenGL FrameBufferObject.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1FrustumObject.html">FrustumObject</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1FrustumShader.html">FrustumShader</a></strong> &lt;br&gt;<a href="./.html">Shader</a> for displaying projection frustums.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1GameObject.html">GameObject</a></strong> &lt;br&gt;Regular world object entity.</li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceVp_1_1GfxUtils.html">GfxUtils</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structVp_1_1GlobalCameraSettings.html">GlobalCameraSettings</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structVp_1_1GridSettings.html">GridSettings</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1GridShader.html">GridShader</a></strong> &lt;br&gt;<a href="./.html">Shader</a> for the infinite grid.</li><li><strong>struct <a href="/cpp-api-reference/classes/structVp_1_1HighlightSettings.html">HighlightSettings</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1Light.html">Light</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1Lighting.html">Lighting</a></strong> &lt;br&gt;Class that manages passing of light information to shaders.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1MainScene.html">MainScene</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structVp_1_1MainSceneSettings.html">MainSceneSettings</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1Manipulators.html">Manipulators</a></strong><ul><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1Manipulators_1_1Manipulator.html">Manipulator</a></strong></li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1ObjectShader.html">ObjectShader</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1OrbitCamera.html">OrbitCamera</a></strong> &lt;br&gt;Camera turning around a point using an azimuth and elevation angle.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1PhongShader.html">PhongShader</a></strong> &lt;br&gt;<a href="./.html">Shader</a> for lit objects with textures.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1PointLight.html">PointLight</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1PreviewScene.html">PreviewScene</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1RenderOptions.html">RenderOptions</a></strong> &lt;br&gt;Options specifying how a scene should be rendered.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1Scene.html">Scene</a></strong> &lt;br&gt;A scene representing a &quot;game world&quot; that contains entities and is viewed by a camera.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1SceneCamera.html">SceneCamera</a></strong> &lt;br&gt;<a href="./.html">Viewport</a> entity representing a Camera node in Core/GUI.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1SceneModel.html">SceneModel</a></strong> &lt;br&gt;<a href="./.html">Viewport</a> entity representing a Model node in Core/GUI.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1SceneRenderTarget.html">SceneRenderTarget</a></strong> &lt;br&gt;A set of framebuffers and their settings into which a <a href="/cpp-api-reference/classes/classVp_1_1Scene.html">Scene</a> can draw.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1ScreenOverlayShader.html">ScreenOverlayShader</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1SelectStencil.html">SelectStencil</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1SelectionCompositeShader.html">SelectionCompositeShader</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1Shader.html">Shader</a></strong> &lt;br&gt;Base class for shaders.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1Shaders.html">Shaders</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1Shaper.html">Shaper</a></strong> &lt;br&gt;A utility class for constructing simple shapes.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1SpotLight.html">SpotLight</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1SunLight.html">SunLight</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1TexturedObject.html">TexturedObject</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1Trackball.html">Trackball</a></strong> &lt;br&gt;Static utility class for trackball interaction.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1TrackballCamera.html">TrackballCamera</a></strong> &lt;br&gt;Camera turning around a point using a virtual screen-space trackball.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1Viewport.html">Viewport</a></strong> &lt;br&gt;<a href="/cpp-api-reference/classes/classVp_1_1Scene.html">Scene</a> viewport class.</li><li><strong>struct <a href="/cpp-api-reference/classes/structVp_1_1ViewportGlobalSettings.html">ViewportGlobalSettings</a></strong> &lt;br&gt;Global viewport settings, some used only for initialisation, some used during runtime.</li><li><strong>struct <a href="/cpp-api-reference/classes/structVp_1_1ViewportSceneSettings.html">ViewportSceneSettings</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structVp_1_1ViewportSettings.html">ViewportSettings</a></strong> &lt;br&gt;A collection of viewport settings.</li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1WBOITCompositeShader.html">WBOITCompositeShader</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classVp_1_1WorldShader.html">WorldShader</a></strong> &lt;br&gt;Abstract shader that provides PVM matrices uniforms.</li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classWindow.html">Window</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWindowManager.html">WindowManager</a></strong> &lt;br&gt;<a href="./.html">Application</a> window manager.</li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceWorkspace.html">Workspace</a></strong> &lt;br&gt;<a href="./.html">GUI</a> nodes. <ul><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1AngleAxisToQuatOperator.html">AngleAxisToQuatOperator</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1Camera.html">Camera</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1CoreInPin.html">CoreInPin</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1CoreInPinMatrixMultiply.html">CoreInPinMatrixMultiply</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1CoreNode.html">CoreNode</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1CoreNodeWithPins.html">CoreNodeWithPins</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1CoreOutPin.html">CoreOutPin</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1CoreOutPinMatrixMultiply.html">CoreOutPinMatrixMultiply</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1CorePin.html">CorePin</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1Cycle.html">Cycle</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1DataOutPin.html">DataOutPin</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1DataOutPinFloat.html">DataOutPinFloat</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1DataOutPinMatrix.html">DataOutPinMatrix</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1DataOutPinPulse.html">DataOutPinPulse</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1DataOutPinQuat.html">DataOutPinQuat</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1DataOutPinScreen.html">DataOutPinScreen</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1DataOutPinVector3.html">DataOutPinVector3</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1DataOutPinVector4.html">DataOutPinVector4</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1DataRenderer.html">DataRenderer</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1Model.html">Model</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1ModelProxy.html">ModelProxy</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1Node.html">Node</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1Operator.html">Operator</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1OperatorBuilder.html">OperatorBuilder</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1Screen.html">Screen</a></strong></li><li><strong>struct <a href="/cpp-api-reference/classes/structWorkspace_1_1ScriptInterface.html">ScriptInterface</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1ScriptingNode.html">ScriptingNode</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1Sequence.html">Sequence</a></strong></li><li><strong>namespace <a href="/cpp-api-reference/namespaces/namespaceWorkspace_1_1Tools.html">Tools</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1TransformBuilder.html">TransformBuilder</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1Transformation.html">Transformation</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1TransformationBase.html">TransformationBase</a></strong></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1ViewportHighlightResolver.html">ViewportHighlightResolver</a></strong> &lt;br&gt;Manager class responsible for updating viewport model highlights based on current workspace node selection.</li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspace_1_1WorkspaceDiwne.html">WorkspaceDiwne</a></strong></li></ul></li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspaceCorePinProperties.html">WorkspaceCorePinProperties</a></strong> &lt;br&gt;Information of Pin for graphic.</li><li><strong>class <a href="/cpp-api-reference/classes/classWorkspaceWindow.html">WorkspaceWindow</a></strong> &lt;br&gt;Class for <a href="./.html">Workspace</a> window object, stores everything what <a href="./.html">Workspace</a> window need.</li></ul><hr><p>Updated on 2025-01-23 at 08:58:05 +0000</p>',4),c=[l];function n(i,o,p,g,h,f){return s(),a("div",null,c)}const u=e(t,[["render",n]]);export{_ as __pageData,u as default};
