import{_ as s,o as a,c as e,Q as n}from"./chunks/framework.0f749972.js";const h=JSON.parse('{"title":"Core::Node","description":"","frontmatter":{"title":"Core::Node","summary":"Base class interface for all boxes."},"headers":[],"relativePath":"cpp-api-reference/classes/classCore_1_1Node.md","filePath":"cpp-api-reference/classes/classCore_1_1Node.md"}'),l={name:"cpp-api-reference/classes/classCore_1_1Node.md"},p=n(`<h1 id="core-node" tabindex="-1">Core::Node <a class="header-anchor" href="#core-node" aria-label="Permalink to &quot;Core::Node&quot;">​</a></h1><p>Base class interface for all boxes.</p><p><code>#include &quot;Core/Nodes/Node.h&quot;</code></p><p>Inherits from std::enable_shared_from_this&lt; Node &gt;</p><p>Inherited by <a href="/cpp-api-reference/classes/classcore_1_1camera.html">Core::Camera</a>, <a href="/cpp-api-reference/classes/classcore_1_1cycle.html">Core::Cycle</a>, <a href="/cpp-api-reference/classes/classcore_1_1model.html">Core::Model</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html">Core::Operator&lt; T &gt;</a>, <a href="/cpp-api-reference/classes/classcore_1_1sequence.html">Core::Sequence</a>, <a href="/cpp-api-reference/classes/classcore_1_1transform.html">Core::Transform</a></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-adddeletecallback">addDeleteCallback</a></strong>(std::function&lt; void(<a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> <em>)&gt; callback)&lt;br&gt; The callback parameters: Node</em> = node that has been deleted</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-addplugcallback">addPlugCallback</a></strong>(std::function&lt; void(<a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> *, <a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> *, size_t, size_t)&gt; callback)&lt;br&gt;Registers a callback that gets called when the node&#39;s output pins get plugged in.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-addunplugcallback">addUnplugCallback</a></strong>(std::function&lt; void(<a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> *, <a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> *, size_t, size_t)&gt; callback)&lt;br&gt;Registers a callback that gets called when the node&#39;s input pins get unplugged.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-addupdatecallback">addUpdateCallback</a></strong>(std::function&lt; void(<a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> *)&gt; callback)&lt;br&gt;Registers a callback that gets called on any <a href="./.html">updateValues()</a> call.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-appendchildnode">appendChildNode</a></strong>(<a href="/cpp-api-reference/files/types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> &gt; node)</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-areallinputsplugged">areAllInputsPlugged</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-areallinputsunplugged">areAllInputsUnplugged</a></strong>() const</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-areinputsplugged">areInputsPlugged</a></strong>(int numInputs)</td></tr><tr><td>template &lt;typename T &amp;gt; &lt;br&gt;<a href="/cpp-api-reference/files/types_8h.html#using-ptr">Ptr</a>&lt; T &gt;</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-as">as</a></strong>()</td></tr><tr><td>const <a href="/cpp-api-reference/classes/classcore_1_1data.html">Data</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-data">data</a></strong>(size_t index =0)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-finalize">finalize</a></strong>()&lt;br&gt;Prepares node for its destruction, after that the destructor can be called.</td></tr><tr><td>const <a href="/cpp-api-reference/classes/classcore_1_1data.html">Data</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-getdata">getData</a></strong>(size_t index =0)&lt;br&gt;Get <a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> contents, read only.</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespacecore.html#typedef-id">ID</a></td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-getid">getId</a></strong>() const</td></tr><tr><td><a href="/cpp-api-reference/classes/classcore_1_1pin.html">Pin</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-getinput">getInput</a></strong>(size_t i)</td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classcore_1_1pin.html">Pin</a> &gt; &amp;</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-getinputpins">getInputPins</a></strong>()</td></tr><tr><td><a href="/cpp-api-reference/classes/classcore_1_1data.html">Data</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-getinternaldata">getInternalData</a></strong>(size_t index =0)&lt;br&gt;Get data storage for read and write purposes.</td></tr><tr><td>const char *</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-getlabel">getLabel</a></strong>() const</td></tr><tr><td>const <a href="/cpp-api-reference/classes/structcore_1_1operation.html">Operation</a> *</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-getoperation">getOperation</a></strong>() const</td></tr><tr><td><a href="/cpp-api-reference/classes/classcore_1_1pin.html">Pin</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-getoutput">getOutput</a></strong>(size_t i)</td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classcore_1_1pin.html">Pin</a> &gt; &amp;</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-getoutputpins">getOutputPins</a></strong>()</td></tr><tr><td><a href="/cpp-api-reference/files/types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-getowner">getOwner</a></strong>() const&lt;br&gt;Get direct owner of this node.</td></tr><tr><td><a href="/cpp-api-reference/files/types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-getptr">getPtr</a></strong>()&lt;br&gt;Get reference to this node instance.</td></tr><tr><td><a href="/cpp-api-reference/files/types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-getrootowner">getRootOwner</a></strong>()&lt;br&gt;Get the topmost owner of this node.</td></tr><tr><td>std::string</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-getsignature">getSignature</a></strong>()&lt;br&gt;&quot;{node type} #{node ID}&quot;</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespacecore.html#enum-evaluestate">EValueState</a></td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-getstate">getState</a></strong>(size_t pinIndex =0)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-init">init</a></strong>()&lt;br&gt;Initialize node id, inputs, and outputs according to the preset node type.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-notifyowner">notifyOwner</a></strong>()</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-oninit">onInit</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-operator!=">operator!=</a></strong>(const <a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> &amp; other) const</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-operator==">operator==</a></strong>(const <a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> &amp; other) const</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespacecore.html#enum-enodeplugresult">ENodePlugResult</a></td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-plug">plug</a></strong>(const <a href="/cpp-api-reference/files/types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> &gt; &amp; childNode, unsigned fromIndex, unsigned toIndex)&lt;br&gt;Connect this (parent) node output to the <code>childNode</code> input.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-pulse">pulse</a></strong>(size_t index)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-receivesignal">receiveSignal</a></strong>(int inputIndex)&lt;br&gt;Implements the operator reaction to the change of its <em>inputIndex</em> input.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-setowner">setOwner</a></strong>(<a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> * owner)</td></tr><tr><td>virtual <a href="/cpp-api-reference/classes/structcore_1_1valuesetresult.html">ValueSetResult</a></td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-setvalue">setValue</a></strong>(const glm::mat4 &amp; mat)</td></tr><tr><td>virtual <a href="/cpp-api-reference/classes/structcore_1_1valuesetresult.html">ValueSetResult</a></td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-setvalue">setValue</a></strong>(const glm::mat4 &amp; mat, const <a href="/cpp-api-reference/classes/classcore_1_1datamap.html">DataMap</a> &amp; map)&lt;br&gt;Smart set function, used with constrained transformation for value checking.</td></tr><tr><td>virtual <a href="/cpp-api-reference/classes/structcore_1_1valuesetresult.html">ValueSetResult</a></td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-setvalue">setValue</a></strong>(const glm::quat &amp; q)</td></tr><tr><td>virtual <a href="/cpp-api-reference/classes/structcore_1_1valuesetresult.html">ValueSetResult</a></td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-setvalue">setValue</a></strong>(const glm::vec3 &amp; vec)</td></tr><tr><td>virtual <a href="/cpp-api-reference/classes/structcore_1_1valuesetresult.html">ValueSetResult</a></td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-setvalue">setValue</a></strong>(const glm::vec4 &amp; vec)</td></tr><tr><td>template &lt;typename T &amp;gt; &lt;br&gt;<a href="/cpp-api-reference/classes/structcore_1_1valuesetresult.html">ValueSetResult</a></td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-setvalue">setValue</a></strong>(const T &amp; value, unsigned index)</td></tr><tr><td>virtual <a href="/cpp-api-reference/classes/structcore_1_1valuesetresult.html">ValueSetResult</a></td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-setvalue">setValue</a></strong>(float val)&lt;br&gt;Set the value of the node.</td></tr><tr><td>virtual <a href="/cpp-api-reference/classes/structcore_1_1valuesetresult.html">ValueSetResult</a></td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-setvalue">setValue</a></strong>(float val, glm::ivec2 coords)</td></tr><tr><td>virtual <a href="/cpp-api-reference/classes/structcore_1_1valuesetresult.html">ValueSetResult</a></td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-setvalue">setValue</a></strong>(void * ptr)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-spreadsignal">spreadSignal</a></strong>()&lt;br&gt;Spread signal to all outputs.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-spreadsignal">spreadSignal</a></strong>(size_t outIndex)&lt;br&gt;Spread signal to the selected output <em>outIndex</em> only.</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-updatevalues">updateValues</a></strong>(int inputIndex =0)&lt;br&gt;Computes new values of outputs based on inputs.</td></tr><tr><td>const <a href="/cpp-api-reference/classes/classcore_1_1datamap.html">DataMap</a> *</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-getdatamap">getDataMap</a></strong>()</td></tr><tr><td>const <a href="/cpp-api-reference/classes/classcore_1_1datamap.html">DataMap</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-getdatamapref">getDataMapRef</a></strong>()</td></tr></tbody></table><h2 id="protected-functions" tabindex="-1">Protected Functions <a class="header-anchor" href="#protected-functions" aria-label="Permalink to &quot;Protected Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-node">Node</a></strong>(const <a href="/cpp-api-reference/classes/structcore_1_1operation.html">Operation</a> * operation)&lt;br&gt;<a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> is never constructed directory.</td></tr><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-~node">~Node</a></strong>()&lt;br&gt;Delete node.</td></tr><tr><td>virtual <a href="/cpp-api-reference/namespaces/namespacecore.html#enum-enodeplugresult">ENodePlugResult</a></td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-isplugcorrect">isPlugCorrect</a></strong>(const <a href="/cpp-api-reference/classes/classcore_1_1pin.html">Pin</a> &amp; input, const <a href="/cpp-api-reference/classes/classcore_1_1pin.html">Pin</a> &amp; output)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-onunpluginput">onUnplugInput</a></strong>(size_t index)</td></tr><tr><td>template &lt;typename T &amp;gt; &lt;br&gt;void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-setinternalvalue">setInternalValue</a></strong>(const T &amp; value, size_t index =0)&lt;br&gt;Sets the node value without validation.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-setinternalvalue">setInternalValue</a></strong>(float value, glm::ivec2 coordinates, size_t index =0)</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-shouldpulse">shouldPulse</a></strong>(size_t inputIndex, size_t updatedInputIndex)&lt;br&gt;Tests if the <code>updatedInputIndex</code> should be pulsed.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-triggerdeletecallback">triggerDeleteCallback</a></strong>(<a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> * node)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-triggerplugcallback">triggerPlugCallback</a></strong>(<a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> * fromNode, <a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> * toNode, size_t fromIndex, size_t toIndex)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-triggerunplugcallback">triggerUnplugCallback</a></strong>(<a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> * fromNode, <a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> * toNode, size_t fromIndex, size_t toIndex)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#function-triggerupdatecallback">triggerUpdateCallback</a></strong>(<a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> * node)</td></tr></tbody></table><h2 id="public-attributes" tabindex="-1">Public Attributes <a class="header-anchor" href="#public-attributes" aria-label="Permalink to &quot;Public Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>std::vector&lt; <a href="/cpp-api-reference/namespaces/namespacecore.html#enum-evaluestate">EValueState</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#variable-m-operatorstate">m_OperatorState</a></strong></td></tr></tbody></table><h2 id="protected-attributes" tabindex="-1">Protected Attributes <a class="header-anchor" href="#protected-attributes" aria-label="Permalink to &quot;Protected Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> * &gt;</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#variable-m-children">m_children</a></strong> &lt;br&gt;Nested nodes.</td></tr><tr><td>std::list&lt; std::function&lt; void(<a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> *)&gt; &gt;</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#variable-m-deletecallbacks">m_deleteCallbacks</a></strong></td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespacecore.html#typedef-id">ID</a></td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#variable-m-id">m_id</a></strong></td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classcore_1_1pin.html">Pin</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#variable-m-inputs">m_inputs</a></strong> &lt;br&gt;Inputs of the box: Input tabs with glyphs.</td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classcore_1_1data.html">Data</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#variable-m-internaldata">m_internalData</a></strong> &lt;br&gt;Results of operations.</td></tr><tr><td><a href="/cpp-api-reference/namespaces/namespacecore.html#enum-enodeplugresult">ENodePlugResult</a>(*)(const Pin &amp;input, const Pin &amp;output)</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#variable-m-isplugcorrectfn">m_isPlugCorrectFn</a></strong> &lt;br&gt;Used by <a href="/cpp-api-reference/classes/classcore_1_1camera.html">Camera</a>.</td></tr><tr><td>const <a href="/cpp-api-reference/classes/structcore_1_1operation.html">Operation</a> *</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#variable-m-operation">m_operation</a></strong> &lt;br&gt;<a href="./.html">Operator</a> node properties.</td></tr><tr><td>std::vector&lt; <a href="/cpp-api-reference/classes/classcore_1_1pin.html">Pin</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#variable-m-outputs">m_outputs</a></strong> &lt;br&gt;Outputs of the box: output tabs with glyphs.</td></tr><tr><td><a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> *</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#variable-m-owner">m_owner</a></strong> &lt;br&gt;Owner of the node, used in complex type of nodes, such as sequence or camera.</td></tr><tr><td>std::list&lt; std::function&lt; void(<a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> *, <a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> *, size_t, size_t)&gt; &gt;</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#variable-m-plugcallbacks">m_plugCallbacks</a></strong></td></tr><tr><td>std::list&lt; std::function&lt; void(<a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> *, <a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> *, size_t, size_t)&gt; &gt;</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#variable-m-unplugcallbacks">m_unplugCallbacks</a></strong></td></tr><tr><td>std::list&lt; std::function&lt; void(<a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> *)&gt; &gt;</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#variable-m-updatecallbacks">m_updateCallbacks</a></strong></td></tr></tbody></table><h2 id="friends" tabindex="-1">Friends <a class="header-anchor" href="#friends" aria-label="Permalink to &quot;Friends&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#friend-graphmanager">GraphManager</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1node.html#friend-pin">Pin</a></strong></td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-adddeletecallback" tabindex="-1">function addDeleteCallback <a class="header-anchor" href="#function-adddeletecallback" aria-label="Permalink to &quot;function addDeleteCallback&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">addDeleteCallback</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">function</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">)&gt; </span><span style="color:#FFAB70;">callback</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">addDeleteCallback</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">function</span><span style="color:#24292E;">&lt; </span><span style="color:#D73A49;">void</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)&gt; </span><span style="color:#E36209;">callback</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>The callback parameters: Node* = node that has been deleted</p><h3 id="function-addplugcallback" tabindex="-1">function addPlugCallback <a class="header-anchor" href="#function-addplugcallback" aria-label="Permalink to &quot;function addPlugCallback&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">addPlugCallback</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">function</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;">)&gt; </span><span style="color:#FFAB70;">callback</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">addPlugCallback</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">function</span><span style="color:#24292E;">&lt; </span><span style="color:#D73A49;">void</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;">)&gt; </span><span style="color:#E36209;">callback</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Registers a callback that gets called when the node&#39;s output pins get plugged in.</p><p>The callback parameters:</p><p>Node* = Start node</p><p>Node* = End node</p><p>size_t = Start node&#39;s output pin index</p><p>size_t = End node&#39;s input pin index</p><h3 id="function-addunplugcallback" tabindex="-1">function addUnplugCallback <a class="header-anchor" href="#function-addunplugcallback" aria-label="Permalink to &quot;function addUnplugCallback&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">addUnplugCallback</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">function</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;">)&gt; </span><span style="color:#FFAB70;">callback</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">addUnplugCallback</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">function</span><span style="color:#24292E;">&lt; </span><span style="color:#D73A49;">void</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;">)&gt; </span><span style="color:#E36209;">callback</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Registers a callback that gets called when the node&#39;s input pins get unplugged.</p><p>The callback parameters:</p><p>Node* = Start node</p><p>Node* = End node</p><p>size_t = Start node&#39;s output pin index</p><p>size_t = End node&#39;s input pin index</p><h3 id="function-addupdatecallback" tabindex="-1">function addUpdateCallback <a class="header-anchor" href="#function-addupdatecallback" aria-label="Permalink to &quot;function addUpdateCallback&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">addUpdateCallback</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">function</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">)&gt; </span><span style="color:#FFAB70;">callback</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">addUpdateCallback</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">function</span><span style="color:#24292E;">&lt; </span><span style="color:#D73A49;">void</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)&gt; </span><span style="color:#E36209;">callback</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Registers a callback that gets called on any <a href="./.html">updateValues()</a> call.</p><p>Note that some derived nodes might not always call this callback.</p><p>The callback parameters:</p><p>Node* = node that has been updated</p><h3 id="function-appendchildnode" tabindex="-1">function appendChildNode <a class="header-anchor" href="#function-appendchildnode" aria-label="Permalink to &quot;function appendChildNode&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">appendChildNode</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#FFAB70;">node</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">appendChildNode</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> &gt; </span><span style="color:#E36209;">node</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-areallinputsplugged" tabindex="-1">function areAllInputsPlugged <a class="header-anchor" href="#function-areallinputsplugged" aria-label="Permalink to &quot;function areAllInputsPlugged&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">areAllInputsPlugged</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">areAllInputsPlugged</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-areallinputsunplugged" tabindex="-1">function areAllInputsUnplugged <a class="header-anchor" href="#function-areallinputsunplugged" aria-label="Permalink to &quot;function areAllInputsUnplugged&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">areAllInputsUnplugged</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">areAllInputsUnplugged</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-areinputsplugged" tabindex="-1">function areInputsPlugged <a class="header-anchor" href="#function-areinputsplugged" aria-label="Permalink to &quot;function areInputsPlugged&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">areInputsPlugged</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">numInputs</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">areInputsPlugged</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">numInputs</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-as" tabindex="-1">function as <a class="header-anchor" href="#function-as" aria-label="Permalink to &quot;function as&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">template</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">typename</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> &gt;</span></span>
<span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">as</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">template</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">typename</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> &gt;</span></span>
<span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">as</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-data" tabindex="-1">function data <a class="header-anchor" href="#function-data" aria-label="Permalink to &quot;function data&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Data</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">index</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Data</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">data</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">index</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p><strong>Todo</strong>: MH Replace getData with this function.</p><h3 id="function-finalize" tabindex="-1">function finalize <a class="header-anchor" href="#function-finalize" aria-label="Permalink to &quot;function finalize&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">finalize</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">finalize</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Prepares node for its destruction, after that the destructor can be called.</p><h3 id="function-getdata" tabindex="-1">function getData <a class="header-anchor" href="#function-getdata" aria-label="Permalink to &quot;function getData&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Data</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getData</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">index</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Data</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getData</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">index</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Get <a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> contents, read only.</p><p><strong>Parameters</strong>:</p><ul><li><strong>index</strong> Index of the internal modifiable data field (e.g, 0 or 1 for two vectors). Value of field[0] is returned if this parameter omitted)</li></ul><p><strong>Return</strong>: Struct which holds data</p><h3 id="function-getid" tabindex="-1">function getId <a class="header-anchor" href="#function-getid" aria-label="Permalink to &quot;function getId&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ID</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getId</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ID</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getId</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><p><strong>Return</strong>: <a href="/cpp-api-reference/classes/classapplication.html">Application</a> unique ID.</p><h3 id="function-getinput" tabindex="-1">function getInput <a class="header-anchor" href="#function-getinput" aria-label="Permalink to &quot;function getInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Pin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getInput</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">i</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Pin</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getInput</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">i</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-getinputpins" tabindex="-1">function getInputPins <a class="header-anchor" href="#function-getinputpins" aria-label="Permalink to &quot;function getInputPins&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vector</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Pin</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getInputPins</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vector</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Pin</span><span style="color:#24292E;"> &gt; </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getInputPins</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-getinternaldata" tabindex="-1">function getInternalData <a class="header-anchor" href="#function-getinternaldata" aria-label="Permalink to &quot;function getInternalData&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Data</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getInternalData</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">index</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Data</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getInternalData</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">index</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Get data storage for read and write purposes.</p><p><strong>Todo</strong>: Make this function non public.</p><p>No written value validation is performed.</p><p>Overridden in <a href="/cpp-api-reference/classes/classcore_1_1sequence.html">Sequence</a> class. This function won&#39;t work for mapped pins.</p><h3 id="function-getlabel" tabindex="-1">function getLabel <a class="header-anchor" href="#function-getlabel" aria-label="Permalink to &quot;function getLabel&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getLabel</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getLabel</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-getoperation" tabindex="-1">function getOperation <a class="header-anchor" href="#function-getoperation" aria-label="Permalink to &quot;function getOperation&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Operation</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getOperation</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Operation</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getOperation</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-getoutput" tabindex="-1">function getOutput <a class="header-anchor" href="#function-getoutput" aria-label="Permalink to &quot;function getOutput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Pin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getOutput</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">i</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Pin</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getOutput</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">i</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-getoutputpins" tabindex="-1">function getOutputPins <a class="header-anchor" href="#function-getoutputpins" aria-label="Permalink to &quot;function getOutputPins&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vector</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Pin</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getOutputPins</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vector</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Pin</span><span style="color:#24292E;"> &gt; </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getOutputPins</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-getowner" tabindex="-1">function getOwner <a class="header-anchor" href="#function-getowner" aria-label="Permalink to &quot;function getOwner&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">getOwner</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">getOwner</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><p>Get direct owner of this node.</p><p><strong>Return</strong>: nullptr if owner is not set.</p><h3 id="function-getptr" tabindex="-1">function getPtr <a class="header-anchor" href="#function-getptr" aria-label="Permalink to &quot;function getPtr&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">getPtr</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">getPtr</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Get reference to this node instance.</p><p>Note that this operation may be slower. A new shared pointer must be created, it obtains atomic counter increment.</p><h3 id="function-getrootowner" tabindex="-1">function getRootOwner <a class="header-anchor" href="#function-getrootowner" aria-label="Permalink to &quot;function getRootOwner&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">getRootOwner</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">getRootOwner</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Get the topmost owner of this node.</p><h3 id="function-getsignature" tabindex="-1">function getSignature <a class="header-anchor" href="#function-getsignature" aria-label="Permalink to &quot;function getSignature&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getSignature</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getSignature</span><span style="color:#24292E;">()</span></span></code></pre></div><p>&quot;{node type} #{node ID}&quot;</p><h3 id="function-getstate" tabindex="-1">function getState <a class="header-anchor" href="#function-getstate" aria-label="Permalink to &quot;function getState&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">EValueState</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getState</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">pinIndex</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">EValueState</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getState</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">pinIndex</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-init" tabindex="-1">function init <a class="header-anchor" href="#function-init" aria-label="Permalink to &quot;function init&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">init</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">init</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Initialize node id, inputs, and outputs according to the preset node type.</p><p>Called in create node function.</p><h3 id="function-notifyowner" tabindex="-1">function notifyOwner <a class="header-anchor" href="#function-notifyowner" aria-label="Permalink to &quot;function notifyOwner&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">notifyOwner</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">notifyOwner</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-oninit" tabindex="-1">function onInit <a class="header-anchor" href="#function-oninit" aria-label="Permalink to &quot;function onInit&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onInit</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onInit</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-operator" tabindex="-1">function operator!= <a class="header-anchor" href="#function-operator" aria-label="Permalink to &quot;function operator!=&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">operator</span><span style="color:#B392F0;">!=</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">other</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">operator</span><span style="color:#6F42C1;">!=</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">other</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-operator-1" tabindex="-1">function operator== <a class="header-anchor" href="#function-operator-1" aria-label="Permalink to &quot;function operator==&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">operator</span><span style="color:#B392F0;">==</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">other</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">operator</span><span style="color:#6F42C1;">==</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">other</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-plug" tabindex="-1">function plug <a class="header-anchor" href="#function-plug" aria-label="Permalink to &quot;function plug&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ENodePlugResult</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">plug</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">childNode</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">fromIndex</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">toIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ENodePlugResult</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">plug</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> &gt; </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">childNode</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#E36209;">fromIndex</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#E36209;">toIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Connect this (parent) node output to the <code>childNode</code> input.</p><p><strong>Parameters</strong>:</p><ul><li><strong>childNode</strong> this node&#39;s <em>toIndex</em> input will be connected</li><li><strong>fromIndex</strong> index of the parent (this) node output</li><li><strong>toIndex</strong> index of the <em>childNode</em> input</li></ul><p><strong>See</strong>: <a href="/cpp-api-reference/namespaces/namespacecore.html#enum-enodeplugresult">ENodePlugResult</a>.</p><p><strong>Return</strong>: Result enum is returned from the function.</p><h3 id="function-pulse" tabindex="-1">function pulse <a class="header-anchor" href="#function-pulse" aria-label="Permalink to &quot;function pulse&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">pulse</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">index</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">pulse</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">index</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-receivesignal" tabindex="-1">function receiveSignal <a class="header-anchor" href="#function-receivesignal" aria-label="Permalink to &quot;function receiveSignal&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">receiveSignal</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">inputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">receiveSignal</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">inputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Implements the operator reaction to the change of its <em>inputIndex</em> input.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the input that was changed and that forces the operator to recompute its outputs.</li></ul><ol><li>Forces the operator to recompute its outputs based on the changed input <em>inputIndex</em> by calling <a href="/cpp-api-reference/classes/classcore_1_1node.html#function-updatevalues">updateValues()</a> and</li><li>Spread signal to the connected children by <a href="/cpp-api-reference/classes/classcore_1_1node.html#function-spreadsignal">spreadSignal()</a>.</li></ol><p>This method is called by the <a href="/cpp-api-reference/classes/classcore_1_1node.html#function-spreadsignal">spreadSignal()</a> of the parent box in the scene graph. The computation may be restricted by internal bool value <em>restrictedOutput</em> to a single previously defined output index <em>restrictedOutputIndex</em>.</p><h3 id="function-setowner" tabindex="-1">function setOwner <a class="header-anchor" href="#function-setowner" aria-label="Permalink to &quot;function setOwner&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setOwner</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">owner</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setOwner</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">owner</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p><strong>Todo</strong>: Does it needs to be public?</p><h3 id="function-setvalue" tabindex="-1">function setValue <a class="header-anchor" href="#function-setvalue" aria-label="Permalink to &quot;function setValue&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ValueSetResult</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setValue</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">mat4</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">mat</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ValueSetResult</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setValue</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">mat4</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">mat</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classcore_1_1transform.html#function-setvalue">Core::Transform::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1axisangle_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::AxisAngle &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1quat_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::Quat &gt;::setValue</a></p><h3 id="function-setvalue-1" tabindex="-1">function setValue <a class="header-anchor" href="#function-setvalue-1" aria-label="Permalink to &quot;function setValue&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ValueSetResult</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setValue</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">mat4</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">mat</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DataMap</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">map</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ValueSetResult</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setValue</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">mat4</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">mat</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DataMap</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">map</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Smart set function, used with constrained transformation for value checking.</p><p><strong>Parameters</strong>:</p><ul><li><strong>mat</strong></li></ul><h3 id="function-setvalue-2" tabindex="-1">function setValue <a class="header-anchor" href="#function-setvalue-2" aria-label="Permalink to &quot;function setValue&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ValueSetResult</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setValue</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">quat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">q</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ValueSetResult</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setValue</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">quat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">q</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1quat_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::Quat &gt;::setValue</a></p><h3 id="function-setvalue-3" tabindex="-1">function setValue <a class="header-anchor" href="#function-setvalue-3" aria-label="Permalink to &quot;function setValue&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ValueSetResult</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setValue</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vec3</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">vec</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ValueSetResult</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setValue</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vec3</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">vec</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1axisangle_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::AxisAngle &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1scale_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::Scale &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1eulerx_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::EulerX &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1eulery_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::EulerY &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1eulerz_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::EulerZ &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1translation_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::Translation &gt;::setValue</a></p><h3 id="function-setvalue-4" tabindex="-1">function setValue <a class="header-anchor" href="#function-setvalue-4" aria-label="Permalink to &quot;function setValue&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ValueSetResult</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setValue</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vec4</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">vec</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ValueSetResult</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setValue</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vec4</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">vec</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1scale_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::Scale &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1eulerx_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::EulerX &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1eulery_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::EulerY &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1eulerz_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::EulerZ &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1translation_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::Translation &gt;::setValue</a></p><h3 id="function-setvalue-5" tabindex="-1">function setValue <a class="header-anchor" href="#function-setvalue-5" aria-label="Permalink to &quot;function setValue&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">template</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">typename</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> &gt;</span></span>
<span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ValueSetResult</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setValue</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">index</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">template</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">typename</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> &gt;</span></span>
<span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ValueSetResult</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setValue</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">value</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#E36209;">index</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-setvalue-6" tabindex="-1">function setValue <a class="header-anchor" href="#function-setvalue-6" aria-label="Permalink to &quot;function setValue&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ValueSetResult</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setValue</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">val</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ValueSetResult</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setValue</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">val</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Set the value of the node.</p><p><strong>Parameters</strong>:</p><ul><li><strong>val</strong></li></ul><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1eulerx_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::EulerX &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1eulery_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::EulerY &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1eulerz_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::EulerZ &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1axisangle_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::AxisAngle &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1scale_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::Scale &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1translation_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::Translation &gt;::setValue</a></p><p>Sets the value of the first float of DataStore. Derived types may override the default behavior.</p><h3 id="function-setvalue-7" tabindex="-1">function setValue <a class="header-anchor" href="#function-setvalue-7" aria-label="Permalink to &quot;function setValue&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ValueSetResult</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setValue</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">val</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">ivec2</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">coords</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ValueSetResult</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setValue</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">val</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">ivec2</span><span style="color:#24292E;"> </span><span style="color:#E36209;">coords</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p><strong>Parameters</strong>:</p><ul><li><strong>val</strong> new value</li><li><strong>coords</strong> in the column major order: coords.x is the column index and coords.y is the row index.</li></ul><p><strong>Return</strong>:</p><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classcore_1_1transform.html#function-setvalue">Core::Transform::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1free_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::Free &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1scale_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::Scale &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1eulerx_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::EulerX &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1eulery_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::EulerY &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1eulerz_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::EulerZ &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1translation_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::Translation &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1ortho_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::Ortho &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1perspective_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::Perspective &gt;::setValue</a>, <a href="/cpp-api-reference/classes/classcore_1_1transformimpl_3_01etransformtype_1_1frustum_01_4.html#function-setvalue">Core::TransformImpl&lt; ETransformType::Frustum &gt;::setValue</a></p><h3 id="function-setvalue-8" tabindex="-1">function setValue <a class="header-anchor" href="#function-setvalue-8" aria-label="Permalink to &quot;function setValue&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ValueSetResult</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setValue</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">ptr</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ValueSetResult</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setValue</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">ptr</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-spreadsignal" tabindex="-1">function spreadSignal <a class="header-anchor" href="#function-spreadsignal" aria-label="Permalink to &quot;function spreadSignal&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">spreadSignal</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">spreadSignal</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Spread signal to all outputs.</p><p><strong>Todo</strong>: Does not use operators for calling each follower just once</p><p>TodoMH Correct the owner of the pin.</p><h3 id="function-spreadsignal-1" tabindex="-1">function spreadSignal <a class="header-anchor" href="#function-spreadsignal-1" aria-label="Permalink to &quot;function spreadSignal&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">spreadSignal</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">outIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">spreadSignal</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">outIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Spread signal to the selected output <em>outIndex</em> only.</p><h3 id="function-updatevalues" tabindex="-1">function updateValues <a class="header-anchor" href="#function-updatevalues" aria-label="Permalink to &quot;function updateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">inputIndex</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">inputIndex</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Computes new values of outputs based on inputs.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the modified input.</li></ul><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1camera.html#function-updatevalues">Core::Camera::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1cycle.html#function-updatevalues">Core::Cycle::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1operator.html#function-updatevalues">Core::Operator::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1sequence.html#function-updatevalues">Core::Sequence::updateValues</a>, <a href="/cpp-api-reference/classes/classcore_1_1model.html#function-updatevalues">Core::Model::updateValues</a></p><p>Encodes the box function by updating the output values for a given <em>inputIndex</em> - fired by <a href="/cpp-api-reference/classes/classcore_1_1node.html#function-receivesignal">receiveSignal()</a>.</p><p>The base class method calls update callbacks registered with <a href="/cpp-api-reference/classes/classcore_1_1node.html#function-addupdatecallback">addUpdateCallback()</a>. So derived methods should also call their base method if they want to inform any outside observers.</p><h3 id="function-getdatamap" tabindex="-1">function getDataMap <a class="header-anchor" href="#function-getdatamap" aria-label="Permalink to &quot;function getDataMap&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DataMap</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDataMap</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DataMap</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDataMap</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Todo</strong>: MH will be removed.</p><h3 id="function-getdatamapref" tabindex="-1">function getDataMapRef <a class="header-anchor" href="#function-getdatamapref" aria-label="Permalink to &quot;function getDataMapRef&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DataMap</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDataMapRef</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DataMap</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDataMapRef</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>Todo</strong>: MH will be removed.</p><h2 id="protected-functions-documentation" tabindex="-1">Protected Functions Documentation <a class="header-anchor" href="#protected-functions-documentation" aria-label="Permalink to &quot;Protected Functions Documentation&quot;">​</a></h2><h3 id="function-node" tabindex="-1">function Node <a class="header-anchor" href="#function-node" aria-label="Permalink to &quot;function Node&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> Operation </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> operation</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> Operation </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> operation</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p><a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> is never constructed directory.</p><p><strong>Parameters</strong>:</p><ul><li><strong>operation</strong> <a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> properties.</li></ul><p><strong>See</strong>: <a href="/cpp-api-reference/classes/classcore_1_1node.html#function-init">init()</a> function for pin and <a href="/cpp-api-reference/classes/classcore_1_1node.html#function-data">data</a> storage initialization</p><h3 id="function-node-1" tabindex="-1">function ~Node <a class="header-anchor" href="#function-node-1" aria-label="Permalink to &quot;function ~Node&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">~</span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">~</span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Delete node.</p><p><strong>Precondition</strong>: All inputs and outputs must be unplugged (calls <a href="/cpp-api-reference/classes/classcore_1_1node.html#function-finalize">Node::finalize</a> function)!</p><h3 id="function-isplugcorrect" tabindex="-1">function isPlugCorrect <a class="header-anchor" href="#function-isplugcorrect" aria-label="Permalink to &quot;function isPlugCorrect&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ENodePlugResult</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isPlugCorrect</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Pin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">input</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Pin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">output</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ENodePlugResult</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isPlugCorrect</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Pin</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">input</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Pin</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">output</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-onunpluginput" tabindex="-1">function onUnplugInput <a class="header-anchor" href="#function-onunpluginput" aria-label="Permalink to &quot;function onUnplugInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onUnplugInput</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">index</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onUnplugInput</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">index</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classcore_1_1model.html#function-onunpluginput">Core::Model::onUnplugInput</a></p><h3 id="function-setinternalvalue" tabindex="-1">function setInternalValue <a class="header-anchor" href="#function-setinternalvalue" aria-label="Permalink to &quot;function setInternalValue&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">template</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">typename</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> &gt;</span></span>
<span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setInternalValue</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">index</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">template</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">typename</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> &gt;</span></span>
<span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setInternalValue</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">value</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">index</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Sets the node value without validation.</p><p><strong>Parameters</strong>:</p><ul><li><strong>value</strong> Value to set.</li><li><strong>index</strong> Index of the DataStore (if the node stores more than one value)</li></ul><p><strong>Template Parameters</strong>:</p><ul><li><strong>T</strong> Value type, no need to specify it in angle brackets, it will be deduced by the compiler (C++17).</li></ul><h3 id="function-setinternalvalue-1" tabindex="-1">function setInternalValue <a class="header-anchor" href="#function-setinternalvalue-1" aria-label="Permalink to &quot;function setInternalValue&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setInternalValue</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">ivec2</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">coordinates</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">index</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setInternalValue</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">value</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">ivec2</span><span style="color:#24292E;"> </span><span style="color:#E36209;">coordinates</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">index</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-shouldpulse" tabindex="-1">function shouldPulse <a class="header-anchor" href="#function-shouldpulse" aria-label="Permalink to &quot;function shouldPulse&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">shouldPulse</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">inputIndex</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">updatedInputIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">shouldPulse</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">inputIndex</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">updatedInputIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Tests if the <code>updatedInputIndex</code> should be pulsed.</p><p><strong>Parameters</strong>:</p><ul><li><strong>inputIndex</strong> Index of the tested input.</li><li><strong>updatedInputIndex</strong> Index of the input which was updated.</li></ul><p><strong>Return</strong>:</p><h3 id="function-triggerdeletecallback" tabindex="-1">function triggerDeleteCallback <a class="header-anchor" href="#function-triggerdeletecallback" aria-label="Permalink to &quot;function triggerDeleteCallback&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">triggerDeleteCallback</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">node</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">triggerDeleteCallback</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">node</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-triggerplugcallback" tabindex="-1">function triggerPlugCallback <a class="header-anchor" href="#function-triggerplugcallback" aria-label="Permalink to &quot;function triggerPlugCallback&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">triggerPlugCallback</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">fromNode</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">toNode</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">fromIndex</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">toIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">triggerPlugCallback</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">fromNode</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">toNode</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">fromIndex</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">toIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-triggerunplugcallback" tabindex="-1">function triggerUnplugCallback <a class="header-anchor" href="#function-triggerunplugcallback" aria-label="Permalink to &quot;function triggerUnplugCallback&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">triggerUnplugCallback</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">fromNode</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">toNode</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">fromIndex</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">toIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">triggerUnplugCallback</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">fromNode</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">toNode</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">fromIndex</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">toIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-triggerupdatecallback" tabindex="-1">function triggerUpdateCallback <a class="header-anchor" href="#function-triggerupdatecallback" aria-label="Permalink to &quot;function triggerUpdateCallback&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">triggerUpdateCallback</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Node</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">node</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">triggerUpdateCallback</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">node</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="public-attributes-documentation" tabindex="-1">Public Attributes Documentation <a class="header-anchor" href="#public-attributes-documentation" aria-label="Permalink to &quot;Public Attributes Documentation&quot;">​</a></h2><h3 id="variable-m-operatorstate" tabindex="-1">variable m_OperatorState <a class="header-anchor" href="#variable-m-operatorstate" aria-label="Permalink to &quot;variable m_OperatorState&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> EValueState </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_OperatorState;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> EValueState </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_OperatorState;</span></span></code></pre></div><p><strong>Todo</strong>:</p><ul><li>Break chain <a href="/cpp-api-reference/classes/classcore_1_1node.html">Node</a> -&gt; <a href="/cpp-api-reference/classes/classcore_1_1transform.html">Transform</a>.</li><li>This is pin related, move to <a href="/cpp-api-reference/classes/classcore_1_1pin.html">Pin</a> class.</li></ul><h2 id="protected-attributes-documentation" tabindex="-1">Protected Attributes Documentation <a class="header-anchor" href="#protected-attributes-documentation" aria-label="Permalink to &quot;Protected Attributes Documentation&quot;">​</a></h2><h3 id="variable-m-children" tabindex="-1">variable m_children <a class="header-anchor" href="#variable-m-children" aria-label="Permalink to &quot;variable m_children&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> Node </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_children;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Node </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_children;</span></span></code></pre></div><p>Nested nodes.</p><h3 id="variable-m-deletecallbacks" tabindex="-1">variable m_deleteCallbacks <a class="header-anchor" href="#variable-m-deletecallbacks" aria-label="Permalink to &quot;variable m_deleteCallbacks&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::list</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::function</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">(Node </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_deleteCallbacks;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::list</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::function</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;">(Node </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_deleteCallbacks;</span></span></code></pre></div><h3 id="variable-m-id" tabindex="-1">variable m_id <a class="header-anchor" href="#variable-m-id" aria-label="Permalink to &quot;variable m_id&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">ID m_id {};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">ID m_id {};</span></span></code></pre></div><h3 id="variable-m-inputs" tabindex="-1">variable m_inputs <a class="header-anchor" href="#variable-m-inputs" aria-label="Permalink to &quot;variable m_inputs&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> Pin </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_inputs;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Pin </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_inputs;</span></span></code></pre></div><p>Inputs of the box: Input tabs with glyphs.</p><h3 id="variable-m-internaldata" tabindex="-1">variable m_internalData <a class="header-anchor" href="#variable-m-internaldata" aria-label="Permalink to &quot;variable m_internalData&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> Data </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_internalData;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Data </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_internalData;</span></span></code></pre></div><p>Results of operations.</p><h3 id="variable-m-isplugcorrectfn" tabindex="-1">variable m_isPlugCorrectFn <a class="header-anchor" href="#variable-m-isplugcorrectfn" aria-label="Permalink to &quot;variable m_isPlugCorrectFn&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ENodePlugResult</span><span style="color:#E1E4E8;">(*)(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Pin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#FFAB70;">input</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Pin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#FFAB70;">output</span><span style="color:#E1E4E8;">) </span><span style="color:#B392F0;">m_isPlugCorrectFn</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nullptr</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ENodePlugResult</span><span style="color:#24292E;">(*)(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Pin</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#E36209;">input</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Pin</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#E36209;">output</span><span style="color:#24292E;">) </span><span style="color:#6F42C1;">m_isPlugCorrectFn</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nullptr</span><span style="color:#24292E;">;</span></span></code></pre></div><p>Used by <a href="/cpp-api-reference/classes/classcore_1_1camera.html">Camera</a>.</p><h3 id="variable-m-operation" tabindex="-1">variable m_operation <a class="header-anchor" href="#variable-m-operation" aria-label="Permalink to &quot;variable m_operation&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> Operation </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> m_operation </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nullptr</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> Operation </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> m_operation </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nullptr</span><span style="color:#24292E;">;</span></span></code></pre></div><p><a href="./.html">Operator</a> node properties.</p><h3 id="variable-m-outputs" tabindex="-1">variable m_outputs <a class="header-anchor" href="#variable-m-outputs" aria-label="Permalink to &quot;variable m_outputs&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> Pin </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_outputs;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Pin </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_outputs;</span></span></code></pre></div><p>Outputs of the box: output tabs with glyphs.</p><h3 id="variable-m-owner" tabindex="-1">variable m_owner <a class="header-anchor" href="#variable-m-owner" aria-label="Permalink to &quot;variable m_owner&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Node </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> m_owner </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nullptr</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Node </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> m_owner </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nullptr</span><span style="color:#24292E;">;</span></span></code></pre></div><p>Owner of the node, used in complex type of nodes, such as sequence or camera.</p><h3 id="variable-m-plugcallbacks" tabindex="-1">variable m_plugCallbacks <a class="header-anchor" href="#variable-m-plugcallbacks" aria-label="Permalink to &quot;variable m_plugCallbacks&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::list</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::function</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">(Node </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">, Node </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_plugCallbacks;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::list</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::function</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;">(Node </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">, Node </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_plugCallbacks;</span></span></code></pre></div><h3 id="variable-m-unplugcallbacks" tabindex="-1">variable m_unplugCallbacks <a class="header-anchor" href="#variable-m-unplugcallbacks" aria-label="Permalink to &quot;variable m_unplugCallbacks&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::list</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::function</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">(Node </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">, Node </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_unplugCallbacks;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::list</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::function</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;">(Node </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">, Node </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_unplugCallbacks;</span></span></code></pre></div><h3 id="variable-m-updatecallbacks" tabindex="-1">variable m_updateCallbacks <a class="header-anchor" href="#variable-m-updatecallbacks" aria-label="Permalink to &quot;variable m_updateCallbacks&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::list</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::function</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">(Node </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_updateCallbacks;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::list</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::function</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;">(Node </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_updateCallbacks;</span></span></code></pre></div><h2 id="friends-1" tabindex="-1">Friends <a class="header-anchor" href="#friends-1" aria-label="Permalink to &quot;Friends&quot;">​</a></h2><h3 id="friend-graphmanager" tabindex="-1">friend GraphManager <a class="header-anchor" href="#friend-graphmanager" aria-label="Permalink to &quot;friend GraphManager&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">friend</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GraphManager</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">GraphManager</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">friend</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GraphManager</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">GraphManager</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre></div><h3 id="friend-pin" tabindex="-1">friend Pin <a class="header-anchor" href="#friend-pin" aria-label="Permalink to &quot;friend Pin&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">friend</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Pin</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Pin</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">friend</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Pin</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Pin</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre></div><hr><p>Updated on 2024-03-16 at 18:59:45 +0000</p>`,270),o=[p];function t(r,c,i,d,u,y){return a(),e("div",null,o)}const f=s(l,[["render",t]]);export{h as __pageData,f as default};
