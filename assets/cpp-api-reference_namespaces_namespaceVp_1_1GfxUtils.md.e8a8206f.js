import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.0f749972.js";const h=JSON.parse('{"title":"Vp::GfxUtils","description":"","frontmatter":{"title":"Vp::GfxUtils"},"headers":[],"relativePath":"cpp-api-reference/namespaces/namespaceVp_1_1GfxUtils.md","filePath":"cpp-api-reference/namespaces/namespaceVp_1_1GfxUtils.md"}'),p={name:"cpp-api-reference/namespaces/namespaceVp_1_1GfxUtils.md"},l=o(`<h1 id="vp-gfxutils" tabindex="-1">Vp::GfxUtils <a class="header-anchor" href="#vp-gfxutils" aria-label="Permalink to &quot;Vp::GfxUtils&quot;">​</a></h1><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>std::pair&lt; glm::vec3, glm::vec3 &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceVp_1_1GfxUtils.html#function-createboundingbox">createBoundingBox</a></strong>(std::vector&lt; glm::vec3 &gt; points)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceVp_1_1GfxUtils.html#function-extractznearzfar">extractZNearZFar</a></strong>(glm::mat4 projection, float &amp; zNear, float &amp; zFar)</td></tr></tbody></table><h2 id="functions-documentation" tabindex="-1">Functions Documentation <a class="header-anchor" href="#functions-documentation" aria-label="Permalink to &quot;Functions Documentation&quot;">​</a></h2><h3 id="function-createboundingbox" tabindex="-1">function createBoundingBox <a class="header-anchor" href="#function-createboundingbox" aria-label="Permalink to &quot;function createBoundingBox&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">pair</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vec3</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vec3</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">createBoundingBox</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vector</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vec3</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#FFAB70;">points</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">pair</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vec3</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vec3</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">createBoundingBox</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vector</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vec3</span><span style="color:#24292E;"> &gt; </span><span style="color:#E36209;">points</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-extractznearzfar" tabindex="-1">function extractZNearZFar <a class="header-anchor" href="#function-extractznearzfar" aria-label="Permalink to &quot;function extractZNearZFar&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">extractZNearZFar</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">mat4</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">projection</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">zNear</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">zFar</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">extractZNearZFar</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">mat4</span><span style="color:#24292E;"> </span><span style="color:#E36209;">projection</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">zNear</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">zFar</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><hr><p>Updated on 2025-01-07 at 13:25:50 +0000</p>`,10),e=[l];function t(c,r,i,E,y,d){return a(),n("div",null,e)}const f=s(p,[["render",t]]);export{h as __pageData,f as default};
