import{_ as s,o as a,c as o,Q as e}from"./chunks/framework.0f749972.js";const E=JSON.parse('{"title":"Core::IModelProxy","description":"","frontmatter":{"title":"Core::IModelProxy"},"headers":[],"relativePath":"cpp-api-reference/classes/classCore_1_1IModelProxy.md","filePath":"cpp-api-reference/classes/classCore_1_1IModelProxy.md"}'),l={name:"cpp-api-reference/classes/classCore_1_1IModelProxy.md"},n=e(`<h1 id="core-imodelproxy" tabindex="-1">Core::IModelProxy <a class="header-anchor" href="#core-imodelproxy" aria-label="Permalink to &quot;Core::IModelProxy&quot;">​</a></h1><p><code>#include &quot;Core/Nodes/Tracking.h&quot;</code></p><p>Inherited by <a href="/cpp-api-reference/classes/classWorkspace_1_1ModelProxy.html">Workspace::ModelProxy</a></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1IModelProxy.html#function-~imodelproxy">~IModelProxy</a></strong>()</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Model.html">Core::Model</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1IModelProxy.html#function-getmodel">getModel</a></strong>() =0</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1IModelProxy.html#function-update">update</a></strong>(const glm::mat4 &amp; transform) =0</td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-imodelproxy" tabindex="-1">function ~IModelProxy <a class="header-anchor" href="#function-imodelproxy" aria-label="Permalink to &quot;function ~IModelProxy&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">~</span><span style="color:#B392F0;">IModelProxy</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">~</span><span style="color:#6F42C1;">IModelProxy</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-getmodel" tabindex="-1">function getModel <a class="header-anchor" href="#function-getmodel" aria-label="Permalink to &quot;function getModel&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Model</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">getModel</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">Model</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">getModel</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspace_1_1ModelProxy.html#function-getmodel">Workspace::ModelProxy::getModel</a></p><h3 id="function-update" tabindex="-1">function update <a class="header-anchor" href="#function-update" aria-label="Permalink to &quot;function update&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">mat4</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">transform</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">update</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">mat4</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">transform</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/classWorkspace_1_1ModelProxy.html#function-update">Workspace::ModelProxy::update</a></p><hr><p>Updated on 2024-10-15 at 20:41:59 +0000</p>`,16),p=[n];function t(r,c,i,d,y,u){return a(),o("div",null,p)}const f=s(l,[["render",t]]);export{E as __pageData,f as default};
