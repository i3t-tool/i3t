import{_ as s,o as e,c as a,Q as o}from"./chunks/framework.0f749972.js";const m=JSON.parse('{"title":"WorkspaceModelProxy","description":"","frontmatter":{"title":"WorkspaceModelProxy"},"headers":[],"relativePath":"cpp-api-reference/classes/classWorkspaceModelProxy.md","filePath":"cpp-api-reference/classes/classWorkspaceModelProxy.md"}'),l={name:"cpp-api-reference/classes/classWorkspaceModelProxy.md"},n=o(`<h1 id="workspacemodelproxy" tabindex="-1">WorkspaceModelProxy <a class="header-anchor" href="#workspacemodelproxy" aria-label="Permalink to &quot;WorkspaceModelProxy&quot;">​</a></h1><p><code>#include &quot;GUI/Elements/Nodes/Tools.h&quot;</code></p><p>Inherits from <a href="/cpp-api-reference/classes/classcore_1_1imodelproxy.html">Core::IModelProxy</a></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classworkspacemodelproxy.html#function-workspacemodelproxy">WorkspaceModelProxy</a></strong>(<a href="/cpp-api-reference/files/types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classworkspacemodel.html">WorkspaceModel</a> &gt; model)</td></tr><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classworkspacemodelproxy.html#function-~workspacemodelproxy">~WorkspaceModelProxy</a></strong>() override</td></tr><tr><td>virtual <a href="/cpp-api-reference/files/types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classcore_1_1model.html">Core::Model</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classworkspacemodelproxy.html#function-getmodel">getModel</a></strong>() override</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/classworkspacemodelproxy.html#function-update">update</a></strong>(const glm::mat4 &amp; transform) override</td></tr></tbody></table><h2 id="additional-inherited-members" tabindex="-1">Additional inherited members <a class="header-anchor" href="#additional-inherited-members" aria-label="Permalink to &quot;Additional inherited members&quot;">​</a></h2><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/classcore_1_1imodelproxy.html">Core::IModelProxy</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/classcore_1_1imodelproxy.html#function-~imodelproxy">~IModelProxy</a></strong>()</td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-workspacemodelproxy" tabindex="-1">function WorkspaceModelProxy <a class="header-anchor" href="#function-workspacemodelproxy" aria-label="Permalink to &quot;function WorkspaceModelProxy&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">WorkspaceModelProxy</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    Ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> WorkspaceModel </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> model</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">WorkspaceModelProxy</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    Ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> WorkspaceModel </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> model</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-workspacemodelproxy-1" tabindex="-1">function ~WorkspaceModelProxy <a class="header-anchor" href="#function-workspacemodelproxy-1" aria-label="Permalink to &quot;function ~WorkspaceModelProxy&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">~</span><span style="color:#B392F0;">WorkspaceModelProxy</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">~</span><span style="color:#6F42C1;">WorkspaceModelProxy</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><h3 id="function-getmodel" tabindex="-1">function getModel <a class="header-anchor" href="#function-getmodel" aria-label="Permalink to &quot;function getModel&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Model</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">getModel</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">Model</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">getModel</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classcore_1_1imodelproxy.html#function-getmodel">Core::IModelProxy::getModel</a></p><h3 id="function-update" tabindex="-1">function update <a class="header-anchor" href="#function-update" aria-label="Permalink to &quot;function update&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">mat4</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">transform</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">update</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">mat4</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">transform</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">override</span></span></code></pre></div><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/classcore_1_1imodelproxy.html#function-update">Core::IModelProxy::update</a></p><hr><p>Updated on 2024-03-16 at 18:59:45 +0000</p>`,21),p=[n];function t(r,c,i,d,y,h){return e(),a("div",null,p)}const E=s(l,[["render",t]]);export{m as __pageData,E as default};
