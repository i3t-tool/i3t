import{_ as s,o as a,c as e,Q as n}from"./chunks/framework.0f749972.js";const y=JSON.parse('{"title":"Vp::Framebuffer","description":"","frontmatter":{"title":"Vp::Framebuffer","summary":"A utility class for managing an OpenGL FrameBufferObject."},"headers":[],"relativePath":"cpp-api-reference/classes/classVp_1_1Framebuffer.md","filePath":"cpp-api-reference/classes/classVp_1_1Framebuffer.md"}'),t={name:"cpp-api-reference/classes/classVp_1_1Framebuffer.md"},l=n(`<h1 id="vp-framebuffer" tabindex="-1">Vp::Framebuffer <a class="header-anchor" href="#vp-framebuffer" aria-label="Permalink to &quot;Vp::Framebuffer&quot;">​</a></h1><p>A utility class for managing an OpenGL FrameBufferObject. <a href="#detailed-description">More...</a></p><p><code>#include &quot;Viewport/framebuffer/Framebuffer.h&quot;</code></p><p>Inherits from std::enable_shared_from_this&lt; Framebuffer &gt;</p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html">Framebuffer</a> *</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-createdefault">createDefault</a></strong>(bool multisample, unsigned int samples, bool alpha)&lt;br&gt;Create a basic framebuffer with a single color attachment and a depth-stencil buffer.</td></tr><tr><td><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html">Framebuffer</a> *</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-createdefault">createDefault</a></strong>(int width, int height, bool multisample, unsigned int samples, bool alpha)&lt;br&gt;Create a basic framebuffer with a single color attachment and a depth-stencil buffer.</td></tr><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-framebuffer">Framebuffer</a></strong>()&lt;br&gt;Create an empty framebuffer.</td></tr><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-framebuffer">Framebuffer</a></strong>(bool multisample, unsigned int samples)&lt;br&gt;Create an empty framebuffer.</td></tr><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-framebuffer">Framebuffer</a></strong>(int width, int height)&lt;br&gt;Create an empty framebuffer.</td></tr><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-framebuffer">Framebuffer</a></strong>(int width, int height, bool multisample, unsigned int samples)&lt;br&gt;Create an empty framebuffer.</td></tr><tr><td></td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-~framebuffer">~Framebuffer</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-addcolorattachment">addColorAttachment</a></strong>(<a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html">ColorAttachment</a> colorAttachment)&lt;br&gt;Add a color attachment.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-bind">bind</a></strong>() const&lt;br&gt;Binds the FBO.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-dispose">dispose</a></strong>()&lt;br&gt;Frees up all OpenGL resources used by the framebuffer.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-end">end</a></strong>(bool resolveMultisample =true)&lt;br&gt;Finalizes the FBO and unbinds it.</td></tr><tr><td><a href="/cpp-api-reference/classes/classVp_1_1ColorAttachment.html">ColorAttachment</a> &amp;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-getcolorattachment">getColorAttachment</a></strong>(unsigned int index)</td></tr><tr><td>GLuint</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-getcolortexture">getColorTexture</a></strong>(unsigned int index =0, bool multisampled =false) const&lt;br&gt;Returns the id of the color texture.</td></tr><tr><td>std::optional&lt; <a href="/cpp-api-reference/classes/classVp_1_1DepthAttachment.html">DepthAttachment</a> &gt; &amp;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-getdepthattachment">getDepthAttachment</a></strong>()</td></tr><tr><td>int</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-getheight">getHeight</a></strong>() const</td></tr><tr><td>GLuint</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-getid">getId</a></strong>() const</td></tr><tr><td>std::weak_ptr&lt; <a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html">Framebuffer</a> &gt;</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-getresolvedframebuffer">getResolvedFramebuffer</a></strong>()&lt;br&gt;If this framebuffer is multisampled this methods returns a weak pointer to the internal single sampled framebuffer that was used to resolve it.</td></tr><tr><td>unsigned int</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-getsamplecount">getSampleCount</a></strong>() const</td></tr><tr><td>int</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-getwidth">getWidth</a></strong>() const</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-isinitialized">isInitialized</a></strong>() const</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-ismultisampled">isMultisampled</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-multisampleresolvecolor">multisampleResolveColor</a></strong>(unsigned int colorAttachmentIndex)&lt;br&gt;<strong>The DEFAULT (0) frame buffer is bound after this call!</strong></td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-multisampleresolvecolors">multisampleResolveColors</a></strong>()&lt;br&gt;<strong>The DEFAULT (0) frame buffer is bound after this call!</strong></td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-multisampleresolvedepth">multisampleResolveDepth</a></strong>()&lt;br&gt;<strong>The DEFAULT (0) frame buffer is bound after this call!</strong></td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-recreate">recreate</a></strong>()&lt;br&gt;Completely reinitializes the framebuffer.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-removeallcolorattachments">removeAllColorAttachments</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-removedepthattachment">removeDepthAttachment</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-setdepthattachment">setDepthAttachment</a></strong>(<a href="/cpp-api-reference/classes/classVp_1_1DepthAttachment.html">DepthAttachment</a> depthAttachment)&lt;br&gt;Set a depth attachment.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-setdrawbuffers">setDrawBuffers</a></strong>()</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-setdrawbuffers">setDrawBuffers</a></strong>(std::vector&lt; unsigned int &gt; indices)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-setmultisampled">setMultisampled</a></strong>(bool multisample, unsigned int samples)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-start">start</a></strong>()&lt;br&gt;Binds the FBO, clears it and resizes glViewport.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-start">start</a></strong>(int width, int height)&lt;br&gt;Binds the FBO and resizes glViewport.</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-update">update</a></strong>(int width, int height)&lt;br&gt;Ensure the fbo has the specified size.</td></tr></tbody></table><h2 id="detailed-description" tabindex="-1">Detailed Description <a class="header-anchor" href="#detailed-description" aria-label="Permalink to &quot;Detailed Description&quot;">​</a></h2><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Vp</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Framebuffer</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Vp</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">Framebuffer</span><span style="color:#24292E;">;</span></span></code></pre></div><p>A utility class for managing an OpenGL FrameBufferObject.</p><p>Usage:</p><ul><li>//Create fbo object</li><li>fbo.start(); //The fbo is lazily initialized here if necessary</li><li>//Render stuff</li><li>fbo.end(); //<strong>The fbo is unbound by BINDING THE DEFAULT (0) FRAMEBUFFER!</strong></li><li>//Multisampling is resolved here unless fbo.end(false) is called</li><li>//Get color texture using fbo.getColorTexture()</li></ul><p>Supports multi sampled antialiasing (MSAA) which can be enabled in the constructor. When MSAA is enabled, the framebuffer creates a second intermediate framebuffer instance which is used to &quot;resolve&quot; the multisampled framebuffer into a regular one.</p><p>Multisampled framebuffers with multiple color attachments are also supported. In that case the intermediate framebuffer creates equivalent single-sampled color attachment(s) for each multisampled one.</p><p>Note that the framebuffer sampling settings overwrite any attachment settings as all attachments must have the same sample count and either be all multisampled or none.</p><p>After resolving multisampling the resolved framebuffer can be accessed using <a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-getresolvedframebuffer">getResolvedFramebuffer()</a> and further used.</p><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-createdefault" tabindex="-1">function createDefault <a class="header-anchor" href="#function-createdefault" aria-label="Permalink to &quot;function createDefault&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Framebuffer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createDefault</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">multisample</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">samples</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">alpha</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Framebuffer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createDefault</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">multisample</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">samples</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">alpha</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Create a basic framebuffer with a single color attachment and a depth-stencil buffer.</p><p><strong>Parameters</strong>:</p><ul><li><strong>multisample</strong> Whether MSAA should be enabled</li><li><strong>samples</strong> Amount of MSAA samples</li><li><strong>alpha</strong> Whether the color buffer should have an alpha component</li></ul><p><strong>Return</strong>: Raw unmanaged pointer to the newly created <a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html">Framebuffer</a>.</p><h3 id="function-createdefault-1" tabindex="-1">function createDefault <a class="header-anchor" href="#function-createdefault-1" aria-label="Permalink to &quot;function createDefault&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Framebuffer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createDefault</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">width</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">height</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">multisample</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">samples</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">alpha</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Framebuffer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createDefault</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">width</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">height</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">multisample</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">samples</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">alpha</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Create a basic framebuffer with a single color attachment and a depth-stencil buffer.</p><p><strong>Parameters</strong>:</p><ul><li><strong>width</strong> Width of the framebuffer in pixels</li><li><strong>height</strong> Height of the framebuffer in pixels</li><li><strong>multisample</strong> Whether MSAA should be enabled</li><li><strong>samples</strong> Amount of MSAA samples</li><li><strong>alpha</strong> Whether the color buffer should have an alpha component</li></ul><p><strong>Return</strong>: Raw unmanaged pointer to the newly created <a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html">Framebuffer</a>.</p><h3 id="function-framebuffer" tabindex="-1">function Framebuffer <a class="header-anchor" href="#function-framebuffer" aria-label="Permalink to &quot;function Framebuffer&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Framebuffer</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Framebuffer</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Create an empty framebuffer.</p><h3 id="function-framebuffer-1" tabindex="-1">function Framebuffer <a class="header-anchor" href="#function-framebuffer-1" aria-label="Permalink to &quot;function Framebuffer&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Framebuffer</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> multisample,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> samples</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Framebuffer</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> multisample,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> samples</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Create an empty framebuffer.</p><p><strong>Parameters</strong>:</p><ul><li><strong>multisample</strong> Whether MSAA should be enabled</li><li><strong>samples</strong> Amount of MSAA samples</li></ul><h3 id="function-framebuffer-2" tabindex="-1">function Framebuffer <a class="header-anchor" href="#function-framebuffer-2" aria-label="Permalink to &quot;function Framebuffer&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Framebuffer</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> width,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> height</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Framebuffer</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> width,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> height</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Create an empty framebuffer.</p><p><strong>Parameters</strong>:</p><ul><li><strong>width</strong> Width of the framebuffer in pixels</li><li><strong>height</strong> Height of the framebuffer in pixels</li></ul><h3 id="function-framebuffer-3" tabindex="-1">function Framebuffer <a class="header-anchor" href="#function-framebuffer-3" aria-label="Permalink to &quot;function Framebuffer&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Framebuffer</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> width,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> height,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> multisample,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> samples</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Framebuffer</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> width,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> height,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> multisample,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> samples</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Create an empty framebuffer.</p><p><strong>Parameters</strong>:</p><ul><li><strong>width</strong> Width of the framebuffer in pixels</li><li><strong>height</strong> Height of the framebuffer in pixels</li><li><strong>multisample</strong> Whether MSAA should be enabled</li><li><strong>samples</strong> Amount of MSAA samples</li></ul><h3 id="function-framebuffer-4" tabindex="-1">function ~Framebuffer <a class="header-anchor" href="#function-framebuffer-4" aria-label="Permalink to &quot;function ~Framebuffer&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">~</span><span style="color:#B392F0;">Framebuffer</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">~</span><span style="color:#6F42C1;">Framebuffer</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-addcolorattachment" tabindex="-1">function addColorAttachment <a class="header-anchor" href="#function-addcolorattachment" aria-label="Permalink to &quot;function addColorAttachment&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">addColorAttachment</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">ColorAttachment</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">colorAttachment</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">addColorAttachment</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">ColorAttachment</span><span style="color:#24292E;"> </span><span style="color:#E36209;">colorAttachment</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Add a color attachment.</p><p><strong>Parameters</strong>:</p><ul><li><strong>colorAttachment</strong></li></ul><p><a href="/cpp-api-reference/classes/structColor.html">Color</a> attachment index is set to its current order in the color attachments list. Multisampling settings are synced with the framebuffer multisampling settings.</p><p>Note that color attachments are meant to be setup before using the framebuffer.</p><h3 id="function-bind" tabindex="-1">function bind <a class="header-anchor" href="#function-bind" aria-label="Permalink to &quot;function bind&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bind</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><p>Binds the FBO.</p><h3 id="function-dispose" tabindex="-1">function dispose <a class="header-anchor" href="#function-dispose" aria-label="Permalink to &quot;function dispose&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">dispose</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">dispose</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Frees up all OpenGL resources used by the framebuffer.</p><p>The framebuffer is considered uninitialized after this call.</p><h3 id="function-end" tabindex="-1">function end <a class="header-anchor" href="#function-end" aria-label="Permalink to &quot;function end&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">end</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">resolveMultisample</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">end</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">resolveMultisample</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Finalizes the FBO and unbinds it.</p><p><strong>Parameters</strong>:</p><ul><li><strong>resolveMultisample</strong> If the fbo is multisampled and this argument is true this call resolves the multisampled buffer into an intermediate regular (single sampled) one. Whose color texture is then returned via <a href="/cpp-api-reference/classes/classVp_1_1Framebuffer.html#function-getcolortexture">getColorTexture()</a>. Note that only the first (index 0) color attachment gets resolved by this call. To resolve multiple color buffers or the depth buffer you can use the multisampleResolveXXX() methods.</li></ul><p><strong>The DEFAULT (0) frame buffer is bound after this call!</strong></p><h3 id="function-getcolorattachment" tabindex="-1">function getColorAttachment <a class="header-anchor" href="#function-getcolorattachment" aria-label="Permalink to &quot;function getColorAttachment&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ColorAttachment</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getColorAttachment</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">index</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ColorAttachment</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getColorAttachment</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">index</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-getcolortexture" tabindex="-1">function getColorTexture <a class="header-anchor" href="#function-getcolortexture" aria-label="Permalink to &quot;function getColorTexture&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">GLuint</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getColorTexture</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">index</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">multisampled</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">GLuint</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getColorTexture</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">index</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">multisampled</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">const</span></span></code></pre></div><p>Returns the id of the color texture.</p><p><strong>Parameters</strong>:</p><ul><li><strong>index</strong> Optional index of the color attachment</li><li><strong>multisampled</strong> Optional flag specifying if the multisampled or resolved single sampled texture should be returned. If multisampling is disabled the single sampled texture will be always returned.</li></ul><h3 id="function-getdepthattachment" tabindex="-1">function getDepthAttachment <a class="header-anchor" href="#function-getdepthattachment" aria-label="Permalink to &quot;function getDepthAttachment&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">optional</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">DepthAttachment</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDepthAttachment</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">optional</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">DepthAttachment</span><span style="color:#24292E;"> &gt; </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDepthAttachment</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-getheight" tabindex="-1">function getHeight <a class="header-anchor" href="#function-getheight" aria-label="Permalink to &quot;function getHeight&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getHeight</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getHeight</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-getid" tabindex="-1">function getId <a class="header-anchor" href="#function-getid" aria-label="Permalink to &quot;function getId&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">GLuint</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getId</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">GLuint</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getId</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><p><strong>Return</strong>: The id of the Frame Buffer Object</p><h3 id="function-getresolvedframebuffer" tabindex="-1">function getResolvedFramebuffer <a class="header-anchor" href="#function-getresolvedframebuffer" aria-label="Permalink to &quot;function getResolvedFramebuffer&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">weak_ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Framebuffer</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">getResolvedFramebuffer</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">weak_ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Framebuffer</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">getResolvedFramebuffer</span><span style="color:#24292E;">()</span></span></code></pre></div><p>If this framebuffer is multisampled this methods returns a weak pointer to the internal single sampled framebuffer that was used to resolve it.</p><p>Otherwise it just returns a weak pointer to itself.</p><h3 id="function-getsamplecount" tabindex="-1">function getSampleCount <a class="header-anchor" href="#function-getsamplecount" aria-label="Permalink to &quot;function getSampleCount&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getSampleCount</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getSampleCount</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-getwidth" tabindex="-1">function getWidth <a class="header-anchor" href="#function-getwidth" aria-label="Permalink to &quot;function getWidth&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getWidth</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getWidth</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-isinitialized" tabindex="-1">function isInitialized <a class="header-anchor" href="#function-isinitialized" aria-label="Permalink to &quot;function isInitialized&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isInitialized</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">const</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isInitialized</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">const</span></span></code></pre></div><h3 id="function-ismultisampled" tabindex="-1">function isMultisampled <a class="header-anchor" href="#function-ismultisampled" aria-label="Permalink to &quot;function isMultisampled&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isMultisampled</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isMultisampled</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-multisampleresolvecolor" tabindex="-1">function multisampleResolveColor <a class="header-anchor" href="#function-multisampleresolvecolor" aria-label="Permalink to &quot;function multisampleResolveColor&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">multisampleResolveColor</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">colorAttachmentIndex</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">multisampleResolveColor</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">colorAttachmentIndex</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p><strong>The DEFAULT (0) frame buffer is bound after this call!</strong></p><h3 id="function-multisampleresolvecolors" tabindex="-1">function multisampleResolveColors <a class="header-anchor" href="#function-multisampleresolvecolors" aria-label="Permalink to &quot;function multisampleResolveColors&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">multisampleResolveColors</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">multisampleResolveColors</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>The DEFAULT (0) frame buffer is bound after this call!</strong></p><h3 id="function-multisampleresolvedepth" tabindex="-1">function multisampleResolveDepth <a class="header-anchor" href="#function-multisampleresolvedepth" aria-label="Permalink to &quot;function multisampleResolveDepth&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">multisampleResolveDepth</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">multisampleResolveDepth</span><span style="color:#24292E;">()</span></span></code></pre></div><p><strong>The DEFAULT (0) frame buffer is bound after this call!</strong></p><h3 id="function-recreate" tabindex="-1">function recreate <a class="header-anchor" href="#function-recreate" aria-label="Permalink to &quot;function recreate&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">recreate</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">recreate</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Completely reinitializes the framebuffer.</p><p>All associated OpenGL resources are freed and can no longer be used. New resources are allocated.</p><h3 id="function-removeallcolorattachments" tabindex="-1">function removeAllColorAttachments <a class="header-anchor" href="#function-removeallcolorattachments" aria-label="Permalink to &quot;function removeAllColorAttachments&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">removeAllColorAttachments</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">removeAllColorAttachments</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-removedepthattachment" tabindex="-1">function removeDepthAttachment <a class="header-anchor" href="#function-removedepthattachment" aria-label="Permalink to &quot;function removeDepthAttachment&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">removeDepthAttachment</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">removeDepthAttachment</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-setdepthattachment" tabindex="-1">function setDepthAttachment <a class="header-anchor" href="#function-setdepthattachment" aria-label="Permalink to &quot;function setDepthAttachment&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setDepthAttachment</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">DepthAttachment</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">depthAttachment</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setDepthAttachment</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">DepthAttachment</span><span style="color:#24292E;"> </span><span style="color:#E36209;">depthAttachment</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Set a depth attachment.</p><p><strong>Parameters</strong>:</p><ul><li><strong>depthAttachment</strong></li></ul><p>Multisampling settings are synced with the framebuffer multisampling settings.</p><h3 id="function-setdrawbuffers" tabindex="-1">function setDrawBuffers <a class="header-anchor" href="#function-setdrawbuffers" aria-label="Permalink to &quot;function setDrawBuffers&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setDrawBuffers</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setDrawBuffers</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-setdrawbuffers-1" tabindex="-1">function setDrawBuffers <a class="header-anchor" href="#function-setdrawbuffers-1" aria-label="Permalink to &quot;function setDrawBuffers&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setDrawBuffers</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">vector</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#FFAB70;">indices</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setDrawBuffers</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">vector</span><span style="color:#24292E;">&lt; </span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> &gt; </span><span style="color:#E36209;">indices</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-setmultisampled" tabindex="-1">function setMultisampled <a class="header-anchor" href="#function-setmultisampled" aria-label="Permalink to &quot;function setMultisampled&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setMultisampled</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">multisample</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">samples</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setMultisampled</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">multisample</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">samples</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-start" tabindex="-1">function start <a class="header-anchor" href="#function-start" aria-label="Permalink to &quot;function start&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">start</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">start</span><span style="color:#24292E;">()</span></span></code></pre></div><p>Binds the FBO, clears it and resizes glViewport.</p><p>The FBO is also initialised if necessary. Uses previously set width and height. **Don&#39;t forget to call glClear after this call!**<strong>glViewport is set to the fbo&#39;s dimensions.</strong></p><h3 id="function-start-1" tabindex="-1">function start <a class="header-anchor" href="#function-start-1" aria-label="Permalink to &quot;function start&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">start</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">width</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">height</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">start</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">width</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">height</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Binds the FBO and resizes glViewport.</p><p>The FBO is also initialised if necessary. **Don&#39;t forget to call glClear after this call!**<strong>glViewport is set to the fbo&#39;s dimensions.</strong></p><h3 id="function-update" tabindex="-1">function update <a class="header-anchor" href="#function-update" aria-label="Permalink to &quot;function update&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">width</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">height</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">update</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">width</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">height</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Ensure the fbo has the specified size.</p><p>Fbo is initialized and/or resized accordingly. Has no effect if fbo is already initialized and sized as requested.</p><hr><p>Updated on 2025-01-07 at 12:56:08 +0000</p>`,137),p=[l];function o(r,c,i,d,h,u){return a(),e("div",null,p)}const E=s(t,[["render",o]]);export{y as __pageData,E as default};
