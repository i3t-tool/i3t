import{_ as s,o as t,c as e,Q as a}from"./chunks/framework.0f749972.js";const E=JSON.parse('{"title":"MultiChoiceTask","description":"","frontmatter":{"title":"MultiChoiceTask"},"headers":[],"relativePath":"cpp-api-reference/classes/structMultiChoiceTask.md","filePath":"cpp-api-reference/classes/structMultiChoiceTask.md"}'),n={name:"cpp-api-reference/classes/structMultiChoiceTask.md"},o=a(`<h1 id="multichoicetask" tabindex="-1">MultiChoiceTask <a class="header-anchor" href="#multichoicetask" aria-label="Permalink to &quot;MultiChoiceTask&quot;">​</a></h1><p><code>#include &quot;Tutorial/Tutorial.h&quot;</code></p><p>Inherits from <a href="/cpp-api-reference/classes/structTestQuestion.html">TestQuestion</a>, <a href="/cpp-api-reference/classes/structTutorialElement.html">TutorialElement</a></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/structMultiChoiceTask.html#function-multichoicetask">MultiChoiceTask</a></strong>(std::string question, std::vector&lt; std::string &gt; choices, std::vector&lt; int &gt; correctChoices)</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/structMultiChoiceTask.html#function-acceptrenderer">acceptRenderer</a></strong>(<a href="/cpp-api-reference/classes/classITutorialRenderer.html">ITutorialRenderer</a> * tutorialRenderer) override</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/structMultiChoiceTask.html#function-onsubmit">onSubmit</a></strong>() override&lt;br&gt;Set m_isCorrect based on the answer.</td></tr></tbody></table><h2 id="public-attributes" tabindex="-1">Public Attributes <a class="header-anchor" href="#public-attributes" aria-label="Permalink to &quot;Public Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>std::vector&lt; std::string &gt;</td><td><strong><a href="/cpp-api-reference/classes/structMultiChoiceTask.html#variable-m-choices">m_choices</a></strong></td></tr><tr><td>std::vector&lt; int &gt;</td><td><strong><a href="/cpp-api-reference/classes/structMultiChoiceTask.html#variable-m-correctchoices">m_correctChoices</a></strong></td></tr><tr><td>std::vector&lt; bool &gt;</td><td><strong><a href="/cpp-api-reference/classes/structMultiChoiceTask.html#variable-m-selected">m_selected</a></strong></td></tr></tbody></table><h2 id="additional-inherited-members" tabindex="-1">Additional inherited members <a class="header-anchor" href="#additional-inherited-members" aria-label="Permalink to &quot;Additional inherited members&quot;">​</a></h2><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/structTestQuestion.html">TestQuestion</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/structTestQuestion.html#function-testquestion">TestQuestion</a></strong>(std::string question)</td></tr><tr><td>void</td><td><strong><a href="/cpp-api-reference/classes/structTestQuestion.html#function-submit">submit</a></strong>()</td></tr></tbody></table><p><strong>Public Attributes inherited from <a href="/cpp-api-reference/classes/structTestQuestion.html">TestQuestion</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/structTestQuestion.html#variable-m-iscorrect">m_isCorrect</a></strong></td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/classes/structTestQuestion.html#variable-m-issubmitted">m_isSubmitted</a></strong></td></tr></tbody></table><p><strong>Public Functions inherited from <a href="/cpp-api-reference/classes/structTutorialElement.html">TutorialElement</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/structTutorialElement.html#function-tutorialelement">TutorialElement</a></strong>()</td></tr><tr><td></td><td><strong><a href="/cpp-api-reference/classes/structTutorialElement.html#function-tutorialelement">TutorialElement</a></strong>(std::string content)</td></tr><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/structTutorialElement.html#function-~tutorialelement">~TutorialElement</a></strong>() =default</td></tr></tbody></table><p><strong>Public Attributes inherited from <a href="/cpp-api-reference/classes/structTutorialElement.html">TutorialElement</a></strong></p><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>std::string</td><td><strong><a href="/cpp-api-reference/classes/structTutorialElement.html#variable-m-content">m_content</a></strong></td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-multichoicetask" tabindex="-1">function MultiChoiceTask <a class="header-anchor" href="#function-multichoicetask" aria-label="Permalink to &quot;function MultiChoiceTask&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MultiChoiceTask</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string question,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> choices,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> correctChoices</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MultiChoiceTask</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string question,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> choices,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> correctChoices</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-acceptrenderer" tabindex="-1">function acceptRenderer <a class="header-anchor" href="#function-acceptrenderer" aria-label="Permalink to &quot;function acceptRenderer&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">acceptRenderer</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">ITutorialRenderer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">tutorialRenderer</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">acceptRenderer</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">ITutorialRenderer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">tutorialRenderer</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">override</span></span></code></pre></div><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/structTutorialElement.html#function-acceptrenderer">TutorialElement::acceptRenderer</a></p><h3 id="function-onsubmit" tabindex="-1">function onSubmit <a class="header-anchor" href="#function-onsubmit" aria-label="Permalink to &quot;function onSubmit&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onSubmit</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">override</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onSubmit</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">override</span></span></code></pre></div><p>Set m_isCorrect based on the answer.</p><p><strong>Reimplements</strong>: <a href="/cpp-api-reference/classes/structTestQuestion.html#function-onsubmit">TestQuestion::onSubmit</a></p><h2 id="public-attributes-documentation" tabindex="-1">Public Attributes Documentation <a class="header-anchor" href="#public-attributes-documentation" aria-label="Permalink to &quot;Public Attributes Documentation&quot;">​</a></h2><h3 id="variable-m-choices" tabindex="-1">variable m_choices <a class="header-anchor" href="#variable-m-choices" aria-label="Permalink to &quot;variable m_choices&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_choices;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_choices;</span></span></code></pre></div><h3 id="variable-m-correctchoices" tabindex="-1">variable m_correctChoices <a class="header-anchor" href="#variable-m-correctchoices" aria-label="Permalink to &quot;variable m_correctChoices&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_correctChoices;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_correctChoices;</span></span></code></pre></div><h3 id="variable-m-selected" tabindex="-1">variable m_selected <a class="header-anchor" href="#variable-m-selected" aria-label="Permalink to &quot;variable m_selected&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> m_selected;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> m_selected;</span></span></code></pre></div><hr><p>Updated on 2025-01-07 at 12:51:54 +0000</p>`,35),l=[o];function r(c,p,i,d,h,u){return t(),e("div",null,l)}const m=s(n,[["render",r]]);export{E as __pageData,m as default};
