import{_ as a,o as s,c as e,Q as t}from"./chunks/framework.0f749972.js";const y=JSON.parse('{"title":"State","description":"","frontmatter":{"title":"State"},"headers":[],"relativePath":"cpp-api-reference/namespaces/namespaceState.md","filePath":"cpp-api-reference/namespaces/namespaceState.md"}'),n={name:"cpp-api-reference/namespaces/namespaceState.md"},o=t(`<h1 id="state" tabindex="-1">State <a class="header-anchor" href="#state" aria-label="Permalink to &quot;State&quot;">​</a></h1><h2 id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-label="Permalink to &quot;Classes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classstate_1_1scene.html">State::Scene</a></strong></td></tr></tbody></table><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespacestate.html#function-isreadonly">isReadOnly</a></strong>(const fs::path &amp; scene)&lt;br&gt;Returns true if target scene is an <a href="./.html">I3T</a> scene and is read-only.</td></tr></tbody></table><h2 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-label="Permalink to &quot;Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>constexpr auto</td><td><strong><a href="/cpp-api-reference/namespaces/namespacestate.html#variable-i3t-scene-schema">I3T_SCENE_SCHEMA</a></strong></td></tr></tbody></table><h2 id="functions-documentation" tabindex="-1">Functions Documentation <a class="header-anchor" href="#functions-documentation" aria-label="Permalink to &quot;Functions Documentation&quot;">​</a></h2><h3 id="function-isreadonly" tabindex="-1">function isReadOnly <a class="header-anchor" href="#function-isreadonly" aria-label="Permalink to &quot;function isReadOnly&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isReadOnly</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fs</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">scene</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isReadOnly</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fs</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">scene</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Returns true if target scene is an <a href="./.html">I3T</a> scene and is read-only.</p><h2 id="attributes-documentation" tabindex="-1">Attributes Documentation <a class="header-anchor" href="#attributes-documentation" aria-label="Permalink to &quot;Attributes Documentation&quot;">​</a></h2><h3 id="variable-i3t-scene-schema" tabindex="-1">variable I3T_SCENE_SCHEMA <a class="header-anchor" href="#variable-i3t-scene-schema" aria-label="Permalink to &quot;variable I3T_SCENE_SCHEMA&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">auto</span><span style="color:#E1E4E8;"> I3T_SCENE_SCHEMA </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Data/Schemas/Scene.schema.json&quot;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">auto</span><span style="color:#24292E;"> I3T_SCENE_SCHEMA </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Data/Schemas/Scene.schema.json&quot;</span><span style="color:#24292E;">;</span></span></code></pre></div><hr><p>Updated on 2024-03-16 at 18:59:45 +0000</p>`,16),l=[o];function p(c,r,i,d,h,u){return s(),e("div",null,l)}const m=a(n,[["render",p]]);export{y as __pageData,m as default};
