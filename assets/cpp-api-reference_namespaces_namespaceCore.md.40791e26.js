import{_ as s,o as a,c as e,Q as n}from"./chunks/framework.0f749972.js";const h=JSON.parse('{"title":"Core","description":"","frontmatter":{"title":"Core","summary":"File with operations table."},"headers":[],"relativePath":"cpp-api-reference/namespaces/namespaceCore.md","filePath":"cpp-api-reference/namespaces/namespaceCore.md"}'),t={name:"cpp-api-reference/namespaces/namespaceCore.md"},p=n(`<h1 id="core" tabindex="-1">Core <a class="header-anchor" href="#core" aria-label="Permalink to &quot;Core&quot;">​</a></h1><p>File with operations table.</p><h2 id="namespaces" tabindex="-1">Namespaces <a class="header-anchor" href="#namespaces" aria-label="Permalink to &quot;Namespaces&quot;">​</a></h2><table><thead><tr><th>Name</th></tr></thead><tbody><tr><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore_1_1Builder.html">Core::Builder</a></strong></td></tr></tbody></table><h2 id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-label="Permalink to &quot;Classes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Camera.html">Core::Camera</a></strong> &lt;br&gt;<a href="./.html">Camera</a> has following outputs 0 -&gt; screen output 1 -&gt; proj * view matrix output 2 -&gt; mul output.</td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Cycle.html">Core::Cycle</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Data.html">Core::Data</a></strong> &lt;br&gt;Representation of the interconnection wire value (Shared piece of memory - union of all data types passed along the wire) and of the value stored in the defaultValues map (such as fovy for Perspective)</td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1DataMap.html">Core::DataMap</a></strong> &lt;br&gt;In column-major order.</td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1GraphManager.html">Core::GraphManager</a></strong> &lt;br&gt;You must manage <a href="./.html">GraphManager</a> lifecycle.</td></tr><tr><td>struct</td><td><strong><a href="/cpp-api-reference/classes/structCore_1_1HalfspaceSign.html">Core::HalfspaceSign</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1IdGenerator.html">Core::IdGenerator</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1IModelProxy.html">Core::IModelProxy</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1ManagedResource.html">Core::ManagedResource</a></strong> &lt;br&gt;Base class for objects that are the actual data managed by a <a href="./.html">ResourceManager</a>.</td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1MatrixTracker.html">Core::MatrixTracker</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Mesh.html">Core::Mesh</a></strong> &lt;br&gt;<a href="./.html">Mesh</a> represents a complete 3D model.</td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Model.html">Core::Model</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1ModelResourceFiles.html">Core::ModelResourceFiles</a></strong> &lt;br&gt;A set a of 3D file format files located somewhere in the filesystem.</td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Node.html">Core::Node</a></strong> &lt;br&gt;Base class interface for all boxes.</td></tr><tr><td>struct</td><td><strong><a href="/cpp-api-reference/classes/structCore_1_1Operation.html">Core::Operation</a></strong> &lt;br&gt;Description of each graph node (operation enum, default label, input and output pin names and types)</td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Operator.html">Core::Operator</a></strong> &lt;br&gt;Implementation of <a href="/cpp-api-reference/classes/classCore_1_1Node.html">Node</a> class.</td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Pin.html">Core::Pin</a></strong> &lt;br&gt;<a href="./.html">Pin</a> used for connecting nodes.</td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Resource.html">Core::Resource</a></strong> &lt;br&gt;Object holding information about a resource.</td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1ResourceFiles.html">Core::ResourceFiles</a></strong> &lt;br&gt;A collection of file paths in the filesystem that are together required to load a single resource like a model.</td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1ResourceManager.html">Core::ResourceManager</a></strong> &lt;br&gt;<a href="/cpp-api-reference/classes/classCore_1_1Resource.html">Resource</a> manager for loading resources from the filesystem.</td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Sequence.html">Core::Sequence</a></strong> &lt;br&gt;<a href="./.html">Sequence</a> of matrices.</td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1SequenceTree.html">Core::SequenceTree</a></strong></td></tr><tr><td>struct</td><td><strong><a href="/cpp-api-reference/classes/structCore_1_1SetValueResult.html">Core::SetValueResult</a></strong></td></tr><tr><td>struct</td><td><strong><a href="/cpp-api-reference/classes/structCore_1_1TrackingResult.html">Core::TrackingResult</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1Transform.html">Core::Transform</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1TransformImpl.html">Core::TransformImpl</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1AxisAngle_01_4.html">Core::TransformImpl&lt; ETransformType::AxisAngle &gt;</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1EulerX_01_4.html">Core::TransformImpl&lt; ETransformType::EulerX &gt;</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1EulerY_01_4.html">Core::TransformImpl&lt; ETransformType::EulerY &gt;</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1EulerZ_01_4.html">Core::TransformImpl&lt; ETransformType::EulerZ &gt;</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Free_01_4.html">Core::TransformImpl&lt; ETransformType::Free &gt;</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Frustum_01_4.html">Core::TransformImpl&lt; ETransformType::Frustum &gt;</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1LookAt_01_4.html">Core::TransformImpl&lt; ETransformType::LookAt &gt;</a></strong> &lt;br&gt;Same as perspective projection node, but all values are locked.</td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Ortho_01_4.html">Core::TransformImpl&lt; ETransformType::Ortho &gt;</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Perspective_01_4.html">Core::TransformImpl&lt; ETransformType::Perspective &gt;</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Quat_01_4.html">Core::TransformImpl&lt; ETransformType::Quat &gt;</a></strong> &lt;br&gt;Quaternion class Quaternion represents the matrix, crated from quaternion.</td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Scale_01_4.html">Core::TransformImpl&lt; ETransformType::Scale &gt;</a></strong></td></tr><tr><td>class</td><td><strong><a href="/cpp-api-reference/classes/classCore_1_1TransformImpl_3_01ETransformType_1_1Translation_01_4.html">Core::TransformImpl&lt; ETransformType::Translation &gt;</a></strong></td></tr><tr><td>struct</td><td><strong><a href="/cpp-api-reference/classes/structCore_1_1TransformInfo.html">Core::TransformInfo</a></strong> &lt;br&gt;Cannot outlive the sequence.</td></tr><tr><td>struct</td><td><strong><a href="/cpp-api-reference/classes/structCore_1_1TransformOperation.html">Core::TransformOperation</a></strong> &lt;br&gt;Extends <a href="/cpp-api-reference/classes/structCore_1_1Operation.html">Operation</a> - adds properties to transform nodes.</td></tr></tbody></table><h2 id="types" tabindex="-1">Types <a class="header-anchor" href="#types" aria-label="Permalink to &quot;Types&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>enum class</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-enodeplugresult">ENodePlugResult</a></strong> { Ok = 0, Err_MismatchedPinTypes, Err_MismatchedPinKind, Err_Loopback, Err_NonexistentPin, Err_Loop, Err_DisabledPin}</td></tr><tr><td>enum class</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-eoperatortype">EOperatorType</a></strong> { Inversion, Transpose, Determinant, MatrixMulMatrix, MatrixAddMatrix, MatrixMulVector, VectorMulMatrix, MatrixMulFloat, VectorDotVector, VectorAddVector, VectorSubVector, VectorMulFloat, VectorPerspectiveDivision, NormalizeVector, MixVector, Vector3CrossVector3, Vector3DotVector3, Vector3AddVector3, Vector3SubVector3, Vector3MulFloat, NormalizeVector3, Vector3Length, ShowVector3, MixVector3, ConjQuat, FloatVecToQuat, AngleAxisToQuat, VecVecToQuat, QuatToFloatVec, QuatToAngleAxis, QuatToEuler, EulerToQuat, QuatInverse, QuatSlerp, QuatLongWaySlerp, QuatLerp, FloatMulQuat, QuatMulQuat, QuatVecConjQuat, QuatLength, ClampFloat, FloatMulFloat, FloatDivFloat, FloatAddFloat, FloatPowFloat, MixFloat, FloatSinCos, ASinACos, Signum, MatrixToVectors, Vectors3ToMatrix, VectorsToMatrix, MatrixToFloats, FloatsToMatrix, MatrixToTR, TRToMatrix, MatrixToQuat, QuatToMatrix, VectorToFloats, FloatsToVector, Vector3ToFloats, FloatsToVector3, VectorToVector3, Vector3ToVector, QuatToFloats, FloatsToQuat, NormalizeQuat, FloatToFloat, Vector3ToVector3, Vector4ToVector4, MatrixToMatrix, QuatToQuat, PulseToPulse, MakeTranslation, MakeEulerX, MakeEulerY, MakeEulerZ, MakeScale, MakeAxisAngle, MakeOrtho, MakePerspective, MakeFrustum, MakeLookAt, Screen}</td></tr><tr><td>enum class</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-etransformtype">ETransformType</a></strong> { Free = 0, Translation, EulerX, EulerY, EulerZ, Scale, AxisAngle, Quat, Ortho, Perspective, Frustum, LookAt}</td></tr><tr><td>enum class</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-evaluestate">EValueState</a></strong> { Editable = 0x0002, EditableSyn = 0x0003, Locked = 0x0000, LockedSyn = 0x0001}&lt;br&gt;Float value editable status: b1, b2 - b1 is editable bit, b2 is synergies bit.</td></tr><tr><td>enum class</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-evaluetype">EValueType</a></strong> { Pulse = 0, Float, Vec3, Vec4, Matrix, Quat, MatrixMul, Screen, Ptr}&lt;br&gt;An operator value type = type of the interconnection wire.</td></tr><tr><td>enum class</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-resourcetype">ResourceType</a></strong> { Model, Shader, Texture}</td></tr><tr><td>enum class</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-trackingdirection">TrackingDirection</a></strong> { LeftToRight = -1, RightToLeft = 1}</td></tr><tr><td>using <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Camera.html">Camera</a> &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#using-cameraptr">CameraPtr</a></strong></td></tr><tr><td>using <a href="/cpp-api-reference/classes/classCore_1_1GraphManager.html">GraphManager</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#using-gm">gm</a></strong></td></tr><tr><td>typedef std::int64_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#typedef-id">ID</a></strong></td></tr><tr><td>using std::vector&lt; <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Transform.html">Transform</a> &gt; &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#using-matrices">Matrices</a></strong></td></tr><tr><td>using std::vector&lt; <a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-evaluetype">EValueType</a> &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></strong></td></tr><tr><td>using std::vector&lt; std::string &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pinnames">PinNames</a></strong></td></tr><tr><td>using std::bitset&lt; 16 &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#using-transformmask">TransformMask</a></strong> &lt;br&gt;ROW ORDER flags, if the mat4x4 values are editable (i.e., each single value may be changed by the mouse drag or not)</td></tr><tr><td>using std::array&lt; int8_t, 16 &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#using-valuemask">ValueMask</a></strong> &lt;br&gt;Array of possible value codes for each matrix element: -1, 0, 1, ANY.</td></tr></tbody></table><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#function-caneditvalue">canEditValue</a></strong>(<a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-evaluestate">EValueState</a> valueState)</td></tr><tr><td><a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> glm::mat4</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#function-getmatproduct">getMatProduct</a></strong>(const std::vector&lt; <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Transform.html">Transform</a> &gt;&gt; &amp; matrices)</td></tr><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Sequence.html">Sequence</a> &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#function-getnonemptychildsequence">getNonemptyChildSequence</a></strong>(<a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Sequence.html">Sequence</a> &gt; startSequence, <a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Sequence.html">Sequence</a> &gt; parentSequence)</td></tr><tr><td><a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Sequence.html">Sequence</a> &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#function-getnonemptyparentsequence">getNonemptyParentSequence</a></strong>(<a href="/cpp-api-reference/files/Types_8h.html#using-ptr">Ptr</a>&lt; <a href="/cpp-api-reference/classes/classCore_1_1Sequence.html">Sequence</a> &gt; sequence)</td></tr><tr><td><a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> const <a href="/cpp-api-reference/classes/structCore_1_1Operation.html">Operation</a> *</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#function-getoperationprops">getOperationProps</a></strong>(<a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-eoperatortype">EOperatorType</a> type)</td></tr><tr><td><a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> const <a href="/cpp-api-reference/classes/structCore_1_1TransformOperation.html#using-valuemap">TransformOperation::ValueMap</a> &amp;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#function-gettransformdefaults">getTransformDefaults</a></strong>(const std::string &amp; keyWord)</td></tr><tr><td><a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-transformmask">TransformMask</a> &amp;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#function-gettransformmap">getTransformMap</a></strong>(const std::string &amp; keyWord)</td></tr><tr><td>std::optional&lt; <a href="/cpp-api-reference/classes/structCore_1_1TransformOperation.html">TransformOperation</a> * &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#function-gettransformoperation">getTransformOperation</a></strong>(const std::string &amp; keyWord)</td></tr><tr><td><a href="/cpp-api-reference/files/Defs_8h.html#define-force-inline">FORCE_INLINE</a> const <a href="/cpp-api-reference/classes/structCore_1_1TransformOperation.html">TransformOperation</a> &amp;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#function-gettransformoperation">getTransformOperation</a></strong>(<a href="/cpp-api-reference/namespaces/namespaceCore.html#enum-etransformtype">ETransformType</a> type)</td></tr><tr><td>template &lt;typename T ,glm::precision P&amp;gt; &lt;br&gt;GLM_FUNC_DECL glm::tquat&lt; T, P &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#function-longwayslerp">longWaySlerp</a></strong>(glm::tquat&lt; T, P &gt; const &amp; x, glm::tquat&lt; T, P &gt; const &amp; y, T a)&lt;br&gt;PF: Long way version of Spherical linear interpolation of two quaternions.</td></tr><tr><td>template &lt;typename T ,glm::precision P&amp;gt; &lt;br&gt;GLM_FUNC_QUALIFIER glm::tquat&lt; T, P &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#function-longwayslerp">longWaySlerp</a></strong>(glm::tquat&lt; T, P &gt; const &amp; x, glm::tquat&lt; T, P &gt; const &amp; y, T a)&lt;br&gt;PF: Long way version of Spherical linear interpolation of two quaternions.</td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pinnames">PinNames</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#function-matrixindexnames">matrixIndexNames</a></strong>()</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#function-validatevalue">validateValue</a></strong>(const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-valuemask">ValueMask</a> &amp; mask, glm::ivec2 coords, float value)&lt;br&gt;Check single element in the matrix, if it is in the allowed range.</td></tr><tr><td>bool</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#function-validatevalues">validateValues</a></strong>(const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-valuemask">ValueMask</a> &amp; mask, const glm::mat4 &amp; matrix)&lt;br&gt;Check if all matrix elements are in the allowed range.</td></tr></tbody></table><h2 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-label="Permalink to &quot;Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pinnames">PinNames</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-angleaxisinputnames">AngleAxisInputNames</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pinnames">PinNames</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-angleaxistoquatinputnames">AngleAxisToQuatInputNames</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pinnames">PinNames</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-clampfloatinputnames">ClampFloatInputNames</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-cycleinputs">cycleInputs</a></strong> &lt;br&gt;From, to, multiplier, receive (play, pause, stopAndReset, prev, next).</td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-cycleoutputs">cycleOutputs</a></strong> &lt;br&gt;Output value, emit (play, pause, stopAndReset, prev, next).</td></tr><tr><td>const std::array&lt; std::string, 9 &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-defaultionames">defaultIoNames</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pinnames">PinNames</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-emptynames">emptyNames</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pinnames">PinNames</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-eulerinputnames">eulerInputNames</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-floatinput">floatInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-floatmatrixinput">floatMatrixInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-floatquatinput">floatQuatInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-floatvector3input">floatVector3Input</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-floatvectorinput">floatVectorInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-fourfloatinput">fourFloatInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-fourvector3input">fourVector3Input</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-fourvectorinput">fourVectorInput</a></strong></td></tr><tr><td>constexpr <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-transformmask">TransformMask</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-g-alllocked">g_AllLocked</a></strong></td></tr><tr><td>constexpr <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-transformmask">TransformMask</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-g-allunlocked">g_AllUnlocked</a></strong></td></tr><tr><td>constexpr <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-valuemask">ValueMask</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-g-axisanglemask">g_AxisAngleMask</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/classes/structCore_1_1Operation.html">Operation</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-g-cameraproperties">g_cameraProperties</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/classes/structCore_1_1Operation.html">Operation</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-g-cycleproperties">g_CycleProperties</a></strong></td></tr><tr><td>constexpr <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-valuemask">ValueMask</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-g-frustummask">g_FrustumMask</a></strong></td></tr><tr><td>constexpr <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-valuemask">ValueMask</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-g-lookatmask">g_LookAtMask</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/classes/structCore_1_1Operation.html">Operation</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-g-modelproperties">g_modelProperties</a></strong></td></tr><tr><td>constexpr <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-valuemask">ValueMask</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-g-orthomask">g_OrthoMask</a></strong></td></tr><tr><td>constexpr <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-valuemask">ValueMask</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-g-perspectivemask">g_PerspectiveMask</a></strong></td></tr><tr><td>constexpr <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-valuemask">ValueMask</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-g-rotatexmask">g_RotateXMask</a></strong></td></tr><tr><td>constexpr <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-valuemask">ValueMask</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-g-rotateymask">g_RotateYMask</a></strong></td></tr><tr><td>constexpr <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-valuemask">ValueMask</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-g-rotatezmask">g_RotateZMask</a></strong></td></tr><tr><td>constexpr <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-valuemask">ValueMask</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-g-scalemask">g_ScaleMask</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/classes/structCore_1_1Operation.html">Operation</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-g-sequence">g_sequence</a></strong></td></tr><tr><td>const std::vector&lt; <a href="/cpp-api-reference/classes/structCore_1_1TransformOperation.html">TransformOperation</a> &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-g-transforms">g_transforms</a></strong> &lt;br&gt;All entries must be in the same order as ETransformType enum entries.</td></tr><tr><td>constexpr <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-valuemask">ValueMask</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-g-translatemask">g_TranslateMask</a></strong></td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1IdGenerator.html">IdGenerator</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-generator">generator</a></strong></td></tr><tr><td><a href="/cpp-api-reference/classes/classCore_1_1IdGenerator.html">IdGenerator</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-generator">generator</a></strong></td></tr><tr><td>constexpr unsigned</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-camera-out-matrix">I3T_CAMERA_OUT_MATRIX</a></strong></td></tr><tr><td>constexpr unsigned</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-camera-out-mul">I3T_CAMERA_OUT_MUL</a></strong></td></tr><tr><td>constexpr unsigned</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-camera-out-screen">I3T_CAMERA_OUT_SCREEN</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-cycle-in-from">I3T_CYCLE_IN_FROM</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-cycle-in-next">I3T_CYCLE_IN_NEXT</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-cycle-in-pause">I3T_CYCLE_IN_PAUSE</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-cycle-in-play">I3T_CYCLE_IN_PLAY</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-cycle-in-prev">I3T_CYCLE_IN_PREV</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-cycle-in-step">I3T_CYCLE_IN_STEP</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-cycle-in-stop">I3T_CYCLE_IN_STOP</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-cycle-in-to">I3T_CYCLE_IN_TO</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-cycle-out-begin">I3T_CYCLE_OUT_BEGIN</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-cycle-out-end">I3T_CYCLE_OUT_END</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-cycle-out-next">I3T_CYCLE_OUT_NEXT</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-cycle-out-pause">I3T_CYCLE_OUT_PAUSE</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-cycle-out-play">I3T_CYCLE_OUT_PLAY</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-cycle-out-prev">I3T_CYCLE_OUT_PREV</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-cycle-out-stop">I3T_CYCLE_OUT_STOP</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-cycle-out-val">I3T_CYCLE_OUT_VAL</a></strong></td></tr><tr><td>constexpr auto</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-cycle-step-duration-minimum">I3T_CYCLE_STEP_DURATION_MINIMUM</a></strong></td></tr><tr><td>constexpr auto</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-cycle-step-duration-seconds">I3T_CYCLE_STEP_DURATION_SECONDS</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-data0">I3T_DATA0</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-data1">I3T_DATA1</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-data2">I3T_DATA2</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-input0">I3T_INPUT0</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-input1">I3T_INPUT1</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-input2">I3T_INPUT2</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-output0">I3T_OUTPUT0</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-output1">I3T_OUTPUT1</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-output2">I3T_OUTPUT2</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-seq-in-mat">I3T_SEQ_IN_MAT</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-seq-in-mul">I3T_SEQ_IN_MUL</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-seq-mat">I3T_SEQ_MAT</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-seq-mod">I3T_SEQ_MOD</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-seq-mul">I3T_SEQ_MUL</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-seq-out-mat">I3T_SEQ_OUT_MAT</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-seq-out-mod">I3T_SEQ_OUT_MOD</a></strong></td></tr><tr><td>constexpr size_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-i3t-seq-out-mul">I3T_SEQ_OUT_MUL</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pinnames">PinNames</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-lookatinputnames">lookAtInputNames</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-matrixinput">matrixInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-matrixmulandmatrixinput">matrixMulAndMatrixInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-matrixmulinput">matrixMulInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-matrixvectorinput">matrixVectorInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pinnames">PinNames</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-mixinputnames">mixInputNames</a></strong></td></tr><tr><td>constexpr <a href="/cpp-api-reference/namespaces/namespaceCore.html#typedef-id">ID</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-nil-id">NIL_ID</a></strong></td></tr><tr><td>const std::vector&lt; <a href="/cpp-api-reference/classes/structCore_1_1Operation.html">Operation</a> &gt;</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-operations">operations</a></strong> &lt;br&gt;Table with configuration parameters for OPERATORS.</td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pinnames">PinNames</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-orthofrustruminputnames">orthoFrustrumInputNames</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pinnames">PinNames</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-perspectiveinputnames">PerspectiveInputNames</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-pulseinput">pulseInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-quatinput">quatInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pinnames">PinNames</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-quattofloatvecinputnames">QuatToFloatVecInputNames</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-screenfloatinput">screenFloatInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-screeninput">screenInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-sixfloatinput">sixFloatInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-sixteenfloatinput">sixteenFloatInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-threefloatinput">threeFloatInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-threevector3input">threeVector3Input</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pinnames">PinNames</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-tr">tr</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-twofloatinput">twoFloatInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-twofloatvector3input">twoFloatVector3Input</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-twomatrixinput">twoMatrixInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-twoquatfloatinput">twoQuatFloatInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-twoquatinput">twoQuatInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-twovector3floatinput">twoVector3FloatInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-twovector3input">twoVector3Input</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-twovectorfloatinput">twoVectorFloatInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-twovectorinput">twoVectorInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-vector3floatinput">vector3FloatInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-vector3input">vector3Input</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-vector3quatinput">vector3QuatInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-vectorinput">vectorInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pingroup">PinGroup</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-vectormatrixinput">vectorMatrixInput</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pinnames">PinNames</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-vectors3tomatrixinputnames">Vectors3ToMatrixInputNames</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pinnames">PinNames</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-vectorstomatrixinputnames">VectorsToMatrixInputNames</a></strong></td></tr><tr><td>constexpr int8_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-vm-any">VM_ANY</a></strong> &lt;br&gt;Editable matrix element in ValueMask - it&#39;s range of values may be limited - the limit is checked in setValue() methods.</td></tr><tr><td>constexpr int8_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-vm-minus-one">VM_MINUS_ONE</a></strong> &lt;br&gt;Fixed matrix element (-1) in ValueMask.</td></tr><tr><td>constexpr int8_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-vm-one">VM_ONE</a></strong> &lt;br&gt;Fixed matrix element (+1) in ValueMask.</td></tr><tr><td>constexpr int8_t</td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-vm-zero">VM_ZERO</a></strong> &lt;br&gt;Fixed matrix element (0) in ValueMask.</td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pinnames">PinNames</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-xyz">xyz</a></strong></td></tr><tr><td>const <a href="/cpp-api-reference/namespaces/namespaceCore.html#using-pinnames">PinNames</a></td><td><strong><a href="/cpp-api-reference/namespaces/namespaceCore.html#variable-xyzw">xyzw</a></strong></td></tr></tbody></table><h2 id="types-documentation" tabindex="-1">Types Documentation <a class="header-anchor" href="#types-documentation" aria-label="Permalink to &quot;Types Documentation&quot;">​</a></h2><h3 id="enum-enodeplugresult" tabindex="-1">enum ENodePlugResult <a class="header-anchor" href="#enum-enodeplugresult" aria-label="Permalink to &quot;enum ENodePlugResult&quot;">​</a></h3><table><thead><tr><th>Enumerator</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>Ok</td><td>0</td><td></td></tr><tr><td>Err_MismatchedPinTypes</td><td></td><td></td></tr><tr><td>Err_MismatchedPinKind</td><td></td><td></td></tr><tr><td>Err_Loopback</td><td></td><td></td></tr><tr><td>Err_NonexistentPin</td><td></td><td>Same nodes.</td></tr><tr><td>Err_Loop</td><td></td><td></td></tr><tr><td>Err_DisabledPin</td><td></td><td></td></tr></tbody></table><h3 id="enum-eoperatortype" tabindex="-1">enum EOperatorType <a class="header-anchor" href="#enum-eoperatortype" aria-label="Permalink to &quot;enum EOperatorType&quot;">​</a></h3><table><thead><tr><th>Enumerator</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>Inversion</td><td></td><td></td></tr><tr><td>Transpose</td><td></td><td></td></tr><tr><td>Determinant</td><td></td><td></td></tr><tr><td>MatrixMulMatrix</td><td></td><td></td></tr><tr><td>MatrixAddMatrix</td><td></td><td></td></tr><tr><td>MatrixMulVector</td><td></td><td></td></tr><tr><td>VectorMulMatrix</td><td></td><td></td></tr><tr><td>MatrixMulFloat</td><td></td><td></td></tr><tr><td>VectorDotVector</td><td></td><td></td></tr><tr><td>VectorAddVector</td><td></td><td></td></tr><tr><td>VectorSubVector</td><td></td><td></td></tr><tr><td>VectorMulFloat</td><td></td><td></td></tr><tr><td>VectorPerspectiveDivision</td><td></td><td></td></tr><tr><td>NormalizeVector</td><td></td><td></td></tr><tr><td>MixVector</td><td></td><td></td></tr><tr><td>Vector3CrossVector3</td><td></td><td></td></tr><tr><td>Vector3DotVector3</td><td></td><td></td></tr><tr><td>Vector3AddVector3</td><td></td><td></td></tr><tr><td>Vector3SubVector3</td><td></td><td></td></tr><tr><td>Vector3MulFloat</td><td></td><td></td></tr><tr><td>NormalizeVector3</td><td></td><td></td></tr><tr><td>Vector3Length</td><td></td><td></td></tr><tr><td>ShowVector3</td><td></td><td></td></tr><tr><td>MixVector3</td><td></td><td></td></tr><tr><td>ConjQuat</td><td></td><td></td></tr><tr><td>FloatVecToQuat</td><td></td><td></td></tr><tr><td>AngleAxisToQuat</td><td></td><td></td></tr><tr><td>VecVecToQuat</td><td></td><td></td></tr><tr><td>QuatToFloatVec</td><td></td><td></td></tr><tr><td>QuatToAngleAxis</td><td></td><td></td></tr><tr><td>QuatToEuler</td><td></td><td></td></tr><tr><td>EulerToQuat</td><td></td><td></td></tr><tr><td>QuatInverse</td><td></td><td></td></tr><tr><td>QuatSlerp</td><td></td><td></td></tr><tr><td>QuatLongWaySlerp</td><td></td><td></td></tr><tr><td>QuatLerp</td><td></td><td></td></tr><tr><td>FloatMulQuat</td><td></td><td></td></tr><tr><td>QuatMulQuat</td><td></td><td></td></tr><tr><td>QuatVecConjQuat</td><td></td><td></td></tr><tr><td>QuatLength</td><td></td><td></td></tr><tr><td>ClampFloat</td><td></td><td></td></tr><tr><td>FloatMulFloat</td><td></td><td></td></tr><tr><td>FloatDivFloat</td><td></td><td></td></tr><tr><td>FloatAddFloat</td><td></td><td></td></tr><tr><td>FloatPowFloat</td><td></td><td></td></tr><tr><td>MixFloat</td><td></td><td></td></tr><tr><td>FloatSinCos</td><td></td><td></td></tr><tr><td>ASinACos</td><td></td><td></td></tr><tr><td>Signum</td><td></td><td></td></tr><tr><td>MatrixToVectors</td><td></td><td></td></tr><tr><td>Vectors3ToMatrix</td><td></td><td></td></tr><tr><td>VectorsToMatrix</td><td></td><td></td></tr><tr><td>MatrixToFloats</td><td></td><td></td></tr><tr><td>FloatsToMatrix</td><td></td><td></td></tr><tr><td>MatrixToTR</td><td></td><td></td></tr><tr><td>TRToMatrix</td><td></td><td></td></tr><tr><td>MatrixToQuat</td><td></td><td></td></tr><tr><td>QuatToMatrix</td><td></td><td></td></tr><tr><td>VectorToFloats</td><td></td><td></td></tr><tr><td>FloatsToVector</td><td></td><td></td></tr><tr><td>Vector3ToFloats</td><td></td><td></td></tr><tr><td>FloatsToVector3</td><td></td><td></td></tr><tr><td>VectorToVector3</td><td></td><td></td></tr><tr><td>Vector3ToVector</td><td></td><td></td></tr><tr><td>QuatToFloats</td><td></td><td></td></tr><tr><td>FloatsToQuat</td><td></td><td></td></tr><tr><td>NormalizeQuat</td><td></td><td></td></tr><tr><td>FloatToFloat</td><td></td><td></td></tr><tr><td>Vector3ToVector3</td><td></td><td></td></tr><tr><td>Vector4ToVector4</td><td></td><td></td></tr><tr><td>MatrixToMatrix</td><td></td><td></td></tr><tr><td>QuatToQuat</td><td></td><td></td></tr><tr><td>PulseToPulse</td><td></td><td></td></tr><tr><td>MakeTranslation</td><td></td><td></td></tr><tr><td>MakeEulerX</td><td></td><td></td></tr><tr><td>MakeEulerY</td><td></td><td></td></tr><tr><td>MakeEulerZ</td><td></td><td></td></tr><tr><td>MakeScale</td><td></td><td></td></tr><tr><td>MakeAxisAngle</td><td></td><td></td></tr><tr><td>MakeOrtho</td><td></td><td></td></tr><tr><td>MakePerspective</td><td></td><td></td></tr><tr><td>MakeFrustum</td><td></td><td></td></tr><tr><td>MakeLookAt</td><td></td><td></td></tr><tr><td>Screen</td><td></td><td></td></tr></tbody></table><h3 id="enum-etransformtype" tabindex="-1">enum ETransformType <a class="header-anchor" href="#enum-etransformtype" aria-label="Permalink to &quot;enum ETransformType&quot;">​</a></h3><table><thead><tr><th>Enumerator</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>Free</td><td>0</td><td></td></tr><tr><td>Translation</td><td></td><td></td></tr><tr><td>EulerX</td><td></td><td></td></tr><tr><td>EulerY</td><td></td><td></td></tr><tr><td>EulerZ</td><td></td><td></td></tr><tr><td>Scale</td><td></td><td></td></tr><tr><td>AxisAngle</td><td></td><td></td></tr><tr><td>Quat</td><td></td><td></td></tr><tr><td>Ortho</td><td></td><td></td></tr><tr><td>Perspective</td><td></td><td></td></tr><tr><td>Frustum</td><td></td><td></td></tr><tr><td>LookAt</td><td></td><td></td></tr></tbody></table><h3 id="enum-evaluestate" tabindex="-1">enum EValueState <a class="header-anchor" href="#enum-evaluestate" aria-label="Permalink to &quot;enum EValueState&quot;">​</a></h3><table><thead><tr><th>Enumerator</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>Editable</td><td>0x0002</td><td>10</td></tr><tr><td>EditableSyn</td><td>0x0003</td><td>11</td></tr><tr><td>Locked</td><td>0x0000</td><td>00</td></tr><tr><td>LockedSyn</td><td>0x0001</td><td>01</td></tr></tbody></table><p>Float value editable status: b1, b2 - b1 is editable bit, b2 is synergies bit.</p><p><strong>Todo</strong>: PF:- proc tohle neni po bitech? SynergiesBit = 0x0001, ///&lt; 001 EditableBit = 0x0002, ///&lt; 010 PossibleNextBit = 0x0004, ///&lt; 100 ...</p><h3 id="enum-evaluetype" tabindex="-1">enum EValueType <a class="header-anchor" href="#enum-evaluetype" aria-label="Permalink to &quot;enum EValueType&quot;">​</a></h3><table><thead><tr><th>Enumerator</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>Pulse</td><td>0</td><td></td></tr><tr><td>Float</td><td></td><td>standard data type</td></tr><tr><td>Vec3</td><td></td><td></td></tr><tr><td>Vec4</td><td></td><td></td></tr><tr><td>Matrix</td><td></td><td></td></tr><tr><td>Quat</td><td></td><td></td></tr><tr><td>MatrixMul</td><td></td><td>connection of sequences in the scene graph - represents a matrix multiplication - stores a matrix</td></tr><tr><td>Screen</td><td></td><td>projection and camera view transformation</td></tr><tr><td>Ptr</td><td></td><td></td></tr></tbody></table><p>An operator value type = type of the interconnection wire.</p><p>The string names are defined in <a href="/cpp-api-reference/files/Operations_8h#file-operations.h">Operations.h</a>, defaultIoNames</p><h3 id="enum-resourcetype" tabindex="-1">enum ResourceType <a class="header-anchor" href="#enum-resourcetype" aria-label="Permalink to &quot;enum ResourceType&quot;">​</a></h3><table><thead><tr><th>Enumerator</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>Model</td><td></td><td></td></tr><tr><td>Shader</td><td></td><td></td></tr><tr><td>Texture</td><td></td><td></td></tr></tbody></table><h3 id="enum-trackingdirection" tabindex="-1">enum TrackingDirection <a class="header-anchor" href="#enum-trackingdirection" aria-label="Permalink to &quot;enum TrackingDirection&quot;">​</a></h3><table><thead><tr><th>Enumerator</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>LeftToRight</td><td>-1</td><td></td></tr><tr><td>RightToLeft</td><td>1</td><td></td></tr></tbody></table><h3 id="using-cameraptr" tabindex="-1">using CameraPtr <a class="header-anchor" href="#using-cameraptr" aria-label="Permalink to &quot;using CameraPtr&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::CameraPtr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typedef</span><span style="color:#E1E4E8;"> Ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">Camera</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::CameraPtr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">typedef</span><span style="color:#24292E;"> Ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">Camera</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="using-gm" tabindex="-1">using gm <a class="header-anchor" href="#using-gm" aria-label="Permalink to &quot;using gm&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::gm </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typedef</span><span style="color:#E1E4E8;"> GraphManager;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::gm </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">typedef</span><span style="color:#24292E;"> GraphManager;</span></span></code></pre></div><h3 id="typedef-id" tabindex="-1">typedef ID <a class="header-anchor" href="#typedef-id" aria-label="Permalink to &quot;typedef ID&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">typedef</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#F97583;">int64_t</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::ID;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">typedef</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#D73A49;">int64_t</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::ID;</span></span></code></pre></div><h3 id="using-matrices" tabindex="-1">using Matrices <a class="header-anchor" href="#using-matrices" aria-label="Permalink to &quot;using Matrices&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::Matrices </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typedef</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">Ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">Transform</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::Matrices </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">typedef</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">Ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">Transform</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="using-pingroup" tabindex="-1">using PinGroup <a class="header-anchor" href="#using-pingroup" aria-label="Permalink to &quot;using PinGroup&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::PinGroup </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typedef</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">EValueType</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::PinGroup </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">typedef</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">EValueType</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="using-pinnames" tabindex="-1">using PinNames <a class="header-anchor" href="#using-pinnames" aria-label="Permalink to &quot;using PinNames&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::PinNames </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typedef</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::PinNames </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">typedef</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="using-transformmask" tabindex="-1">using TransformMask <a class="header-anchor" href="#using-transformmask" aria-label="Permalink to &quot;using TransformMask&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::TransformMask </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typedef</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::bitset</span><span style="color:#F97583;">&lt;</span><span style="color:#79B8FF;">16</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::TransformMask </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">typedef</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::bitset</span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">16</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">;</span></span></code></pre></div><p>ROW ORDER flags, if the mat4x4 values are editable (i.e., each single value may be changed by the mouse drag or not)</p><h3 id="using-valuemask" tabindex="-1">using ValueMask <a class="header-anchor" href="#using-valuemask" aria-label="Permalink to &quot;using ValueMask&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Core</span><span style="color:#E1E4E8;">::ValueMask </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typedef</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::array</span><span style="color:#F97583;">&lt;int8_t</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">16</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Core</span><span style="color:#24292E;">::ValueMask </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">typedef</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::array</span><span style="color:#D73A49;">&lt;int8_t</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">16</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">;</span></span></code></pre></div><p>Array of possible value codes for each matrix element: -1, 0, 1, ANY.</p><p><strong>Note</strong>: These definitions are in the ROW order - are flipped to COLUMN order in <a href="/cpp-api-reference/namespaces/namespaceCore.html#function-validatevalue">validateValue()</a></p><p>These arrays are defined for all <a href="/cpp-api-reference/classes/classCore_1_1Transform.html">Transform</a> variants in <a href="/cpp-api-reference/files/TransformImpl_8cpp#file-transformimpl.cpp">TransformImpl.cpp</a></p><h2 id="functions-documentation" tabindex="-1">Functions Documentation <a class="header-anchor" href="#functions-documentation" aria-label="Permalink to &quot;Functions Documentation&quot;">​</a></h2><h3 id="function-caneditvalue" tabindex="-1">function canEditValue <a class="header-anchor" href="#function-caneditvalue" aria-label="Permalink to &quot;function canEditValue&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">canEditValue</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">EValueState</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">valueState</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">canEditValue</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">EValueState</span><span style="color:#24292E;"> </span><span style="color:#E36209;">valueState</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-getmatproduct" tabindex="-1">function getMatProduct <a class="header-anchor" href="#function-getmatproduct" aria-label="Permalink to &quot;function getMatProduct&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">FORCE_INLINE </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::mat4 </span><span style="color:#B392F0;">getMatProduct</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> Ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> Transform </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> matrices</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">FORCE_INLINE </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::mat4 </span><span style="color:#6F42C1;">getMatProduct</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Ptr</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Transform </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> matrices</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-getnonemptychildsequence" tabindex="-1">function getNonemptyChildSequence <a class="header-anchor" href="#function-getnonemptychildsequence" aria-label="Permalink to &quot;function getNonemptyChildSequence&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Sequence</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">getNonemptyChildSequence</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Sequence</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#FFAB70;">startSequence</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Sequence</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#FFAB70;">parentSequence</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Sequence</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">getNonemptyChildSequence</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Sequence</span><span style="color:#24292E;"> &gt; </span><span style="color:#E36209;">startSequence</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Sequence</span><span style="color:#24292E;"> &gt; </span><span style="color:#E36209;">parentSequence</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p><strong>Return</strong>: Nonempty child sequence of parentSequence or nullptr if there is no such sequence.</p><p><strong>Precondition</strong>: parentSequence is direct or indirect parent of startSequence.</p><h3 id="function-getnonemptyparentsequence" tabindex="-1">function getNonemptyParentSequence <a class="header-anchor" href="#function-getnonemptyparentsequence" aria-label="Permalink to &quot;function getNonemptyParentSequence&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Sequence</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">getNonemptyParentSequence</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">Sequence</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#FFAB70;">sequence</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Sequence</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">getNonemptyParentSequence</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Ptr</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">Sequence</span><span style="color:#24292E;"> &gt; </span><span style="color:#E36209;">sequence</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p><strong>Return</strong>: nullptr if there is no nonempty sequence in the parent chain.</p><h3 id="function-getoperationprops" tabindex="-1">function getOperationProps <a class="header-anchor" href="#function-getoperationprops" aria-label="Permalink to &quot;function getOperationProps&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">FORCE_INLINE </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> Operation </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getOperationProps</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    EOperatorType type</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">FORCE_INLINE </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> Operation </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getOperationProps</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    EOperatorType type</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-gettransformdefaults" tabindex="-1">function getTransformDefaults <a class="header-anchor" href="#function-gettransformdefaults" aria-label="Permalink to &quot;function getTransformDefaults&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">FORCE_INLINE </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TransformOperation</span><span style="color:#E1E4E8;">::ValueMap </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getTransformDefaults</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> keyWord</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">FORCE_INLINE </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TransformOperation</span><span style="color:#24292E;">::ValueMap </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getTransformDefaults</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> keyWord</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-gettransformmap" tabindex="-1">function getTransformMap <a class="header-anchor" href="#function-gettransformmap" aria-label="Permalink to &quot;function getTransformMap&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">FORCE_INLINE </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> TransformMask </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getTransformMap</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> keyWord</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">FORCE_INLINE </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> TransformMask </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getTransformMap</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> keyWord</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-gettransformoperation" tabindex="-1">function getTransformOperation <a class="header-anchor" href="#function-gettransformoperation" aria-label="Permalink to &quot;function getTransformOperation&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">optional</span><span style="color:#E1E4E8;">&lt; </span><span style="color:#B392F0;">TransformOperation</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#B392F0;">getTransformOperation</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">keyWord</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">optional</span><span style="color:#24292E;">&lt; </span><span style="color:#6F42C1;">TransformOperation</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> &gt; </span><span style="color:#6F42C1;">getTransformOperation</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">keyWord</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-gettransformoperation-1" tabindex="-1">function getTransformOperation <a class="header-anchor" href="#function-gettransformoperation-1" aria-label="Permalink to &quot;function getTransformOperation&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">FORCE_INLINE </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> TransformOperation </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getTransformOperation</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    ETransformType type</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">FORCE_INLINE </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> TransformOperation </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getTransformOperation</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    ETransformType type</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-longwayslerp" tabindex="-1">function longWaySlerp <a class="header-anchor" href="#function-longwayslerp" aria-label="Permalink to &quot;function longWaySlerp&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">template</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">typename</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> ,</span></span>
<span class="line"><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#F97583;">precision</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">P</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">GLM_FUNC_DECL </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::tquat</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> T, P </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">longWaySlerp</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::tquat</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> T, P </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> x,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::tquat</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> T, P </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> y,</span></span>
<span class="line"><span style="color:#E1E4E8;">    T a</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">template</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">typename</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> ,</span></span>
<span class="line"><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#D73A49;">precision</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">P</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">GLM_FUNC_DECL </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::tquat</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> T, P </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">longWaySlerp</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::tquat</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> T, P </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> x,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::tquat</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> T, P </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> y,</span></span>
<span class="line"><span style="color:#24292E;">    T a</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>PF: Long way version of Spherical linear interpolation of two quaternions.</p><p><strong>Parameters</strong>:</p><ul><li><strong>x</strong> A quaternion</li><li><strong>y</strong> A quaternion</li><li><strong>a</strong> Interpolation factor. The interpolation is defined beyond the range [0, 1].</li></ul><p><strong>Template Parameters</strong>:</p><ul><li><strong>T</strong> Value type used to build the quaternion. Supported: half, float or double.</li></ul><p><strong>See</strong>: gtc_quaternion</p><p>The interpolation always take the long path and the rotation is performed at constant speed.</p><h3 id="function-longwayslerp-1" tabindex="-1">function longWaySlerp <a class="header-anchor" href="#function-longwayslerp-1" aria-label="Permalink to &quot;function longWaySlerp&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">template</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">typename</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> ,</span></span>
<span class="line"><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#F97583;">precision</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">P</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">GLM_FUNC_QUALIFIER </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::tquat</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> T, P </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">longWaySlerp</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::tquat</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> T, P </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> x,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::tquat</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> T, P </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> y,</span></span>
<span class="line"><span style="color:#E1E4E8;">    T a</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">template</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">typename</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> ,</span></span>
<span class="line"><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#D73A49;">precision</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">P</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">GLM_FUNC_QUALIFIER </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::tquat</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> T, P </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">longWaySlerp</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::tquat</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> T, P </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> x,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::tquat</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> T, P </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> y,</span></span>
<span class="line"><span style="color:#24292E;">    T a</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>PF: Long way version of Spherical linear interpolation of two quaternions.</p><p><strong>Parameters</strong>:</p><ul><li><strong>x</strong> A quaternion</li><li><strong>y</strong> A quaternion</li><li><strong>a</strong> Interpolation factor. The interpolation is defined beyond the range [0, 1].</li></ul><p><strong>Template Parameters</strong>:</p><ul><li><strong>T</strong> Value type used to build the quaternion. Supported: half, float or double.</li></ul><p><strong>See</strong>: gtc_quaternion</p><p>The interpolation always take the long path and the rotation is performed at constant speed.</p><h3 id="function-matrixindexnames" tabindex="-1">function matrixIndexNames <a class="header-anchor" href="#function-matrixindexnames" aria-label="Permalink to &quot;function matrixIndexNames&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PinNames</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">matrixIndexNames</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PinNames</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">matrixIndexNames</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-validatevalue" tabindex="-1">function validateValue <a class="header-anchor" href="#function-validatevalue" aria-label="Permalink to &quot;function validateValue&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">validateValue</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ValueMask</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">mask</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">ivec2</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">coords</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">float</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">value</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">validateValue</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ValueMask</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">mask</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">ivec2</span><span style="color:#24292E;"> </span><span style="color:#E36209;">coords</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> </span><span style="color:#E36209;">value</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Check single element in the matrix, if it is in the allowed range.</p><p><strong>Parameters</strong>:</p><ul><li><strong>mask</strong> code of possible values (in the ROW order!) -1, 0, 1, ANY</li><li><strong>coords</strong> {x, y} x is column and y is row.</li><li><strong>value</strong> single value from the matrix to be validated against the mask</li></ul><p><strong>Return</strong>: true for an allowed value on given position in the matrix</p><p>Possible range is defined by constants in the ValueMask array. Editable values have the value VM_ANY, fixed values have VW_MINUS_ONE, VM_ZERO, or WM_ONE</p><h3 id="function-validatevalues" tabindex="-1">function validateValues <a class="header-anchor" href="#function-validatevalues" aria-label="Permalink to &quot;function validateValues&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">validateValues</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ValueMask</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">mask</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glm</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">mat4</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">matrix</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">validateValues</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ValueMask</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">mask</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glm</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">mat4</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">matrix</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>Check if all matrix elements are in the allowed range.</p><p><strong>Parameters</strong>:</p><ul><li><strong>mask</strong> code of possible values (in the ROW order!) -1, 0, 1, ANY</li><li><strong>matrix</strong> matrix to be validated against the mask</li></ul><p><strong>Return</strong>: true for a valid matrix</p><p>Fixed elements are not changed. Editable elements (ANY) must be further tested outside.</p><p>column order</p><h2 id="attributes-documentation" tabindex="-1">Attributes Documentation <a class="header-anchor" href="#attributes-documentation" aria-label="Permalink to &quot;Attributes Documentation&quot;">​</a></h2><h3 id="variable-angleaxisinputnames" tabindex="-1">variable AngleAxisInputNames <a class="header-anchor" href="#variable-angleaxisinputnames" aria-label="Permalink to &quot;variable AngleAxisInputNames&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinNames AngleAxisInputNames </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;angle&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;axis&quot;</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinNames AngleAxisInputNames </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;angle&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;axis&quot;</span><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-angleaxistoquatinputnames" tabindex="-1">variable AngleAxisToQuatInputNames <a class="header-anchor" href="#variable-angleaxistoquatinputnames" aria-label="Permalink to &quot;variable AngleAxisToQuatInputNames&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinNames AngleAxisToQuatInputNames </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;angle&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;angle / 2&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;vec3&quot;</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinNames AngleAxisToQuatInputNames </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;angle&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;angle / 2&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;vec3&quot;</span><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-clampfloatinputnames" tabindex="-1">variable ClampFloatInputNames <a class="header-anchor" href="#variable-clampfloatinputnames" aria-label="Permalink to &quot;variable ClampFloatInputNames&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinNames ClampFloatInputNames </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;val&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;min&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;max&quot;</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinNames ClampFloatInputNames </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;val&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;min&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;max&quot;</span><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-cycleinputs" tabindex="-1">variable cycleInputs <a class="header-anchor" href="#variable-cycleinputs" aria-label="Permalink to &quot;variable cycleInputs&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup cycleInputs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Pulse,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Pulse, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Pulse, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Pulse, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Pulse,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup cycleInputs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Pulse,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Pulse, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Pulse, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Pulse, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Pulse,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>From, to, multiplier, receive (play, pause, stopAndReset, prev, next).</p><h3 id="variable-cycleoutputs" tabindex="-1">variable cycleOutputs <a class="header-anchor" href="#variable-cycleoutputs" aria-label="Permalink to &quot;variable cycleOutputs&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup cycleOutputs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Pulse, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Pulse, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Pulse,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Pulse, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Pulse, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Pulse, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Pulse,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup cycleOutputs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Pulse, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Pulse, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Pulse,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Pulse, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Pulse, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Pulse, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Pulse,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>Output value, emit (play, pause, stopAndReset, prev, next).</p><h3 id="variable-defaultionames" tabindex="-1">variable defaultIoNames <a class="header-anchor" href="#variable-defaultionames" aria-label="Permalink to &quot;variable defaultIoNames&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::array</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string, </span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> defaultIoNames </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;pulse&quot;</span><span style="color:#E1E4E8;">,  </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;float&quot;</span><span style="color:#E1E4E8;">,  </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;vec3&quot;</span><span style="color:#E1E4E8;">,   </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;vec4&quot;</span><span style="color:#E1E4E8;">,   </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;matrix&quot;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;quat&quot;</span><span style="color:#E1E4E8;">,   </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;MatMul&quot;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;screen&quot;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;pointer&quot;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::array</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string, </span><span style="color:#005CC5;">9</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> defaultIoNames </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;pulse&quot;</span><span style="color:#24292E;">,  </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;float&quot;</span><span style="color:#24292E;">,  </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;vec3&quot;</span><span style="color:#24292E;">,   </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;vec4&quot;</span><span style="color:#24292E;">,   </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;matrix&quot;</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;quat&quot;</span><span style="color:#24292E;">,   </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;MatMul&quot;</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;screen&quot;</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;pointer&quot;</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-emptynames" tabindex="-1">variable emptyNames <a class="header-anchor" href="#variable-emptynames" aria-label="Permalink to &quot;variable emptyNames&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinNames emptyNames </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinNames emptyNames </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {};</span></span></code></pre></div><h3 id="variable-eulerinputnames" tabindex="-1">variable eulerInputNames <a class="header-anchor" href="#variable-eulerinputnames" aria-label="Permalink to &quot;variable eulerInputNames&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinNames eulerInputNames </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;angle&quot;</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinNames eulerInputNames </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;angle&quot;</span><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-floatinput" tabindex="-1">variable floatInput <a class="header-anchor" href="#variable-floatinput" aria-label="Permalink to &quot;variable floatInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup floatInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup floatInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float};</span></span></code></pre></div><h3 id="variable-floatmatrixinput" tabindex="-1">variable floatMatrixInput <a class="header-anchor" href="#variable-floatmatrixinput" aria-label="Permalink to &quot;variable floatMatrixInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup floatMatrixInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Matrix};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup floatMatrixInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Matrix};</span></span></code></pre></div><h3 id="variable-floatquatinput" tabindex="-1">variable floatQuatInput <a class="header-anchor" href="#variable-floatquatinput" aria-label="Permalink to &quot;variable floatQuatInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup floatQuatInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Quat};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup floatQuatInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Quat};</span></span></code></pre></div><h3 id="variable-floatvector3input" tabindex="-1">variable floatVector3Input <a class="header-anchor" href="#variable-floatvector3input" aria-label="Permalink to &quot;variable floatVector3Input&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup floatVector3Input </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec3};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup floatVector3Input </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec3};</span></span></code></pre></div><h3 id="variable-floatvectorinput" tabindex="-1">variable floatVectorInput <a class="header-anchor" href="#variable-floatvectorinput" aria-label="Permalink to &quot;variable floatVectorInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup floatVectorInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec4};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup floatVectorInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec4};</span></span></code></pre></div><h3 id="variable-fourfloatinput" tabindex="-1">variable fourFloatInput <a class="header-anchor" href="#variable-fourfloatinput" aria-label="Permalink to &quot;variable fourFloatInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup fourFloatInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup fourFloatInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float};</span></span></code></pre></div><h3 id="variable-fourvector3input" tabindex="-1">variable fourVector3Input <a class="header-anchor" href="#variable-fourvector3input" aria-label="Permalink to &quot;variable fourVector3Input&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup fourVector3Input </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec3, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec3, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec3, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec3};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup fourVector3Input </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec3, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec3, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec3, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec3};</span></span></code></pre></div><h3 id="variable-fourvectorinput" tabindex="-1">variable fourVectorInput <a class="header-anchor" href="#variable-fourvectorinput" aria-label="Permalink to &quot;variable fourVectorInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup fourVectorInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec4, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec4, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec4, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec4};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup fourVectorInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec4, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec4, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec4, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec4};</span></span></code></pre></div><h3 id="variable-g-alllocked" tabindex="-1">variable g_AllLocked <a class="header-anchor" href="#variable-g-alllocked" aria-label="Permalink to &quot;variable g_AllLocked&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> TransformMask g_AllLocked </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">0b</span><span style="color:#79B8FF;">0000000000000000</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> TransformMask g_AllLocked </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0b</span><span style="color:#005CC5;">0000000000000000</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-g-allunlocked" tabindex="-1">variable g_AllUnlocked <a class="header-anchor" href="#variable-g-allunlocked" aria-label="Permalink to &quot;variable g_AllUnlocked&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> TransformMask g_AllUnlocked </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">0b</span><span style="color:#79B8FF;">1111111111111111</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> TransformMask g_AllUnlocked </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0b</span><span style="color:#005CC5;">1111111111111111</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-g-axisanglemask" tabindex="-1">variable g_AxisAngleMask <a class="header-anchor" href="#variable-g-axisanglemask" aria-label="Permalink to &quot;variable g_AxisAngleMask&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> ValueMask g_AxisAngleMask </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    VM_ANY, VM_ANY, VM_ANY, VM_ZERO, VM_ANY,  VM_ANY,  VM_ANY,  VM_ZERO,</span></span>
<span class="line"><span style="color:#E1E4E8;">    VM_ANY, VM_ANY, VM_ANY, VM_ZERO, VM_ZERO, VM_ZERO, VM_ZERO, VM_ONE,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> ValueMask g_AxisAngleMask </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    VM_ANY, VM_ANY, VM_ANY, VM_ZERO, VM_ANY,  VM_ANY,  VM_ANY,  VM_ZERO,</span></span>
<span class="line"><span style="color:#24292E;">    VM_ANY, VM_ANY, VM_ANY, VM_ZERO, VM_ZERO, VM_ZERO, VM_ZERO, VM_ONE,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-g-cameraproperties" tabindex="-1">variable g_cameraProperties <a class="header-anchor" href="#variable-g-cameraproperties" aria-label="Permalink to &quot;variable g_cameraProperties&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> Operation g_cameraProperties </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;Camera&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;camera&quot;</span><span style="color:#E1E4E8;">, {}, {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Screen, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Matrix, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::MatrixMul}};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> Operation g_cameraProperties </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;Camera&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;camera&quot;</span><span style="color:#24292E;">, {}, {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Screen, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Matrix, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::MatrixMul}};</span></span></code></pre></div><h3 id="variable-g-cycleproperties" tabindex="-1">variable g_CycleProperties <a class="header-anchor" href="#variable-g-cycleproperties" aria-label="Permalink to &quot;variable g_CycleProperties&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> Operation g_CycleProperties </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;Cycle&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;cycle&quot;</span><span style="color:#E1E4E8;">, cycleInputs, cycleOutputs,</span></span>
<span class="line"><span style="color:#E1E4E8;">    NO_TAG,</span></span>
<span class="line"><span style="color:#E1E4E8;">	{</span><span style="color:#9ECBFF;">&quot;from&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;to&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;step&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;play&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;pause&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;stop&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;prev&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;next&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;value&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;pause&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;stop&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;prev&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;next&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;begin&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;end&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> Operation g_CycleProperties </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;Cycle&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;cycle&quot;</span><span style="color:#24292E;">, cycleInputs, cycleOutputs,</span></span>
<span class="line"><span style="color:#24292E;">    NO_TAG,</span></span>
<span class="line"><span style="color:#24292E;">	{</span><span style="color:#032F62;">&quot;from&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;to&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;step&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;play&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;pause&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;stop&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;prev&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;next&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">	</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;value&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;pause&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;stop&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;prev&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;next&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;begin&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;end&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-g-frustummask" tabindex="-1">variable g_FrustumMask <a class="header-anchor" href="#variable-g-frustummask" aria-label="Permalink to &quot;variable g_FrustumMask&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> ValueMask g_FrustumMask </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    VM_ANY,  VM_ZERO, VM_ANY, VM_ZERO, VM_ZERO, VM_ANY,  VM_ANY,       VM_ZERO,</span></span>
<span class="line"><span style="color:#E1E4E8;">    VM_ZERO, VM_ZERO, VM_ANY, VM_ANY,  VM_ZERO, VM_ZERO, VM_MINUS_ONE, VM_ZERO,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> ValueMask g_FrustumMask </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    VM_ANY,  VM_ZERO, VM_ANY, VM_ZERO, VM_ZERO, VM_ANY,  VM_ANY,       VM_ZERO,</span></span>
<span class="line"><span style="color:#24292E;">    VM_ZERO, VM_ZERO, VM_ANY, VM_ANY,  VM_ZERO, VM_ZERO, VM_MINUS_ONE, VM_ZERO,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-g-lookatmask" tabindex="-1">variable g_LookAtMask <a class="header-anchor" href="#variable-g-lookatmask" aria-label="Permalink to &quot;variable g_LookAtMask&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> ValueMask g_LookAtMask </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    VM_ANY, VM_ANY, VM_ANY, VM_ANY, VM_ANY,  VM_ANY,  VM_ANY,  VM_ANY,</span></span>
<span class="line"><span style="color:#E1E4E8;">    VM_ANY, VM_ANY, VM_ANY, VM_ANY, VM_ZERO, VM_ZERO, VM_ZERO, VM_ONE,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> ValueMask g_LookAtMask </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    VM_ANY, VM_ANY, VM_ANY, VM_ANY, VM_ANY,  VM_ANY,  VM_ANY,  VM_ANY,</span></span>
<span class="line"><span style="color:#24292E;">    VM_ANY, VM_ANY, VM_ANY, VM_ANY, VM_ZERO, VM_ZERO, VM_ZERO, VM_ONE,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-g-modelproperties" tabindex="-1">variable g_modelProperties <a class="header-anchor" href="#variable-g-modelproperties" aria-label="Permalink to &quot;variable g_modelProperties&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> Operation g_modelProperties </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;Model&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;model&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    matrixMulInput,</span></span>
<span class="line"><span style="color:#E1E4E8;">    {},</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> Operation g_modelProperties </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;Model&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;model&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    matrixMulInput,</span></span>
<span class="line"><span style="color:#24292E;">    {},</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-g-orthomask" tabindex="-1">variable g_OrthoMask <a class="header-anchor" href="#variable-g-orthomask" aria-label="Permalink to &quot;variable g_OrthoMask&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> ValueMask g_OrthoMask </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    VM_ANY,  VM_ZERO, VM_ZERO, VM_ANY, VM_ZERO, VM_ANY,  VM_ZERO, VM_ANY,</span></span>
<span class="line"><span style="color:#E1E4E8;">    VM_ZERO, VM_ZERO, VM_ANY,  VM_ANY, VM_ZERO, VM_ZERO, VM_ZERO, VM_ONE,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> ValueMask g_OrthoMask </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    VM_ANY,  VM_ZERO, VM_ZERO, VM_ANY, VM_ZERO, VM_ANY,  VM_ZERO, VM_ANY,</span></span>
<span class="line"><span style="color:#24292E;">    VM_ZERO, VM_ZERO, VM_ANY,  VM_ANY, VM_ZERO, VM_ZERO, VM_ZERO, VM_ONE,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-g-perspectivemask" tabindex="-1">variable g_PerspectiveMask <a class="header-anchor" href="#variable-g-perspectivemask" aria-label="Permalink to &quot;variable g_PerspectiveMask&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> ValueMask g_PerspectiveMask </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    VM_ANY,  VM_ZERO, VM_ZERO, VM_ZERO, VM_ZERO, VM_ANY,  VM_ZERO,      VM_ZERO,</span></span>
<span class="line"><span style="color:#E1E4E8;">    VM_ZERO, VM_ZERO, VM_ANY,  VM_ANY,  VM_ZERO, VM_ZERO, VM_MINUS_ONE, VM_ZERO,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> ValueMask g_PerspectiveMask </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    VM_ANY,  VM_ZERO, VM_ZERO, VM_ZERO, VM_ZERO, VM_ANY,  VM_ZERO,      VM_ZERO,</span></span>
<span class="line"><span style="color:#24292E;">    VM_ZERO, VM_ZERO, VM_ANY,  VM_ANY,  VM_ZERO, VM_ZERO, VM_MINUS_ONE, VM_ZERO,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-g-rotatexmask" tabindex="-1">variable g_RotateXMask <a class="header-anchor" href="#variable-g-rotatexmask" aria-label="Permalink to &quot;variable g_RotateXMask&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> ValueMask g_RotateXMask </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    VM_ONE,  VM_ZERO, VM_ZERO, VM_ZERO, VM_ZERO, VM_ANY,  VM_ANY,  VM_ZERO,</span></span>
<span class="line"><span style="color:#E1E4E8;">    VM_ZERO, VM_ANY,  VM_ANY,  VM_ZERO, VM_ZERO, VM_ZERO, VM_ZERO, VM_ONE,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> ValueMask g_RotateXMask </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    VM_ONE,  VM_ZERO, VM_ZERO, VM_ZERO, VM_ZERO, VM_ANY,  VM_ANY,  VM_ZERO,</span></span>
<span class="line"><span style="color:#24292E;">    VM_ZERO, VM_ANY,  VM_ANY,  VM_ZERO, VM_ZERO, VM_ZERO, VM_ZERO, VM_ONE,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-g-rotateymask" tabindex="-1">variable g_RotateYMask <a class="header-anchor" href="#variable-g-rotateymask" aria-label="Permalink to &quot;variable g_RotateYMask&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> ValueMask g_RotateYMask </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    VM_ANY, VM_ZERO, VM_ANY, VM_ZERO, VM_ZERO, VM_ONE,  VM_ZERO, VM_ZERO,</span></span>
<span class="line"><span style="color:#E1E4E8;">    VM_ANY, VM_ZERO, VM_ANY, VM_ZERO, VM_ZERO, VM_ZERO, VM_ZERO, VM_ONE,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> ValueMask g_RotateYMask </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    VM_ANY, VM_ZERO, VM_ANY, VM_ZERO, VM_ZERO, VM_ONE,  VM_ZERO, VM_ZERO,</span></span>
<span class="line"><span style="color:#24292E;">    VM_ANY, VM_ZERO, VM_ANY, VM_ZERO, VM_ZERO, VM_ZERO, VM_ZERO, VM_ONE,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-g-rotatezmask" tabindex="-1">variable g_RotateZMask <a class="header-anchor" href="#variable-g-rotatezmask" aria-label="Permalink to &quot;variable g_RotateZMask&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> ValueMask g_RotateZMask </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    VM_ANY,  VM_ANY,  VM_ZERO, VM_ZERO, VM_ANY,  VM_ANY,  VM_ZERO, VM_ZERO,</span></span>
<span class="line"><span style="color:#E1E4E8;">    VM_ZERO, VM_ZERO, VM_ONE,  VM_ZERO, VM_ZERO, VM_ZERO, VM_ZERO, VM_ONE,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> ValueMask g_RotateZMask </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    VM_ANY,  VM_ANY,  VM_ZERO, VM_ZERO, VM_ANY,  VM_ANY,  VM_ZERO, VM_ZERO,</span></span>
<span class="line"><span style="color:#24292E;">    VM_ZERO, VM_ZERO, VM_ONE,  VM_ZERO, VM_ZERO, VM_ZERO, VM_ZERO, VM_ONE,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-g-scalemask" tabindex="-1">variable g_ScaleMask <a class="header-anchor" href="#variable-g-scalemask" aria-label="Permalink to &quot;variable g_ScaleMask&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> ValueMask g_ScaleMask </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    VM_ANY,  VM_ZERO, VM_ZERO, VM_ZERO, VM_ZERO, VM_ANY,  VM_ZERO, VM_ZERO,</span></span>
<span class="line"><span style="color:#E1E4E8;">    VM_ZERO, VM_ZERO, VM_ANY,  VM_ZERO, VM_ZERO, VM_ZERO, VM_ZERO, VM_ONE,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> ValueMask g_ScaleMask </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    VM_ANY,  VM_ZERO, VM_ZERO, VM_ZERO, VM_ZERO, VM_ANY,  VM_ZERO, VM_ZERO,</span></span>
<span class="line"><span style="color:#24292E;">    VM_ZERO, VM_ZERO, VM_ANY,  VM_ZERO, VM_ZERO, VM_ZERO, VM_ZERO, VM_ONE,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-g-sequence" tabindex="-1">variable g_sequence <a class="header-anchor" href="#variable-g-sequence" aria-label="Permalink to &quot;variable g_sequence&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> Operation g_sequence </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;Sequence&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;sequence&quot;</span><span style="color:#E1E4E8;">, matrixMulAndMatrixInput, {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::MatrixMul, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Matrix, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Matrix}};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> Operation g_sequence </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;Sequence&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;sequence&quot;</span><span style="color:#24292E;">, matrixMulAndMatrixInput, {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::MatrixMul, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Matrix, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Matrix}};</span></span></code></pre></div><h3 id="variable-g-transforms" tabindex="-1">variable g_transforms <a class="header-anchor" href="#variable-g-transforms" aria-label="Permalink to &quot;variable g_transforms&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> TransformOperation </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> g_transforms;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> TransformOperation </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> g_transforms;</span></span></code></pre></div><p>All entries must be in the same order as ETransformType enum entries.</p><h3 id="variable-g-translatemask" tabindex="-1">variable g_TranslateMask <a class="header-anchor" href="#variable-g-translatemask" aria-label="Permalink to &quot;variable g_TranslateMask&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> ValueMask g_TranslateMask </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    VM_ONE,  VM_ZERO, VM_ZERO, VM_ANY, VM_ZERO, VM_ONE,  VM_ZERO, VM_ANY,</span></span>
<span class="line"><span style="color:#E1E4E8;">    VM_ZERO, VM_ZERO, VM_ONE,  VM_ANY, VM_ZERO, VM_ZERO, VM_ZERO, VM_ONE,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> ValueMask g_TranslateMask </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    VM_ONE,  VM_ZERO, VM_ZERO, VM_ANY, VM_ZERO, VM_ONE,  VM_ZERO, VM_ANY,</span></span>
<span class="line"><span style="color:#24292E;">    VM_ZERO, VM_ZERO, VM_ONE,  VM_ANY, VM_ZERO, VM_ZERO, VM_ZERO, VM_ONE,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-generator" tabindex="-1">variable generator <a class="header-anchor" href="#variable-generator" aria-label="Permalink to &quot;variable generator&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> IdGenerator generator;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> IdGenerator generator;</span></span></code></pre></div><h3 id="variable-generator-1" tabindex="-1">variable generator <a class="header-anchor" href="#variable-generator-1" aria-label="Permalink to &quot;variable generator&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> IdGenerator generator;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> IdGenerator generator;</span></span></code></pre></div><h3 id="variable-i3t-camera-out-matrix" tabindex="-1">variable I3T_CAMERA_OUT_MATRIX <a class="header-anchor" href="#variable-i3t-camera-out-matrix" aria-label="Permalink to &quot;variable I3T_CAMERA_OUT_MATRIX&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> I3T_CAMERA_OUT_MATRIX </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> I3T_CAMERA_OUT_MATRIX </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-camera-out-mul" tabindex="-1">variable I3T_CAMERA_OUT_MUL <a class="header-anchor" href="#variable-i3t-camera-out-mul" aria-label="Permalink to &quot;variable I3T_CAMERA_OUT_MUL&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> I3T_CAMERA_OUT_MUL </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> I3T_CAMERA_OUT_MUL </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-camera-out-screen" tabindex="-1">variable I3T_CAMERA_OUT_SCREEN <a class="header-anchor" href="#variable-i3t-camera-out-screen" aria-label="Permalink to &quot;variable I3T_CAMERA_OUT_SCREEN&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> I3T_CAMERA_OUT_SCREEN </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> I3T_CAMERA_OUT_SCREEN </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-cycle-in-from" tabindex="-1">variable I3T_CYCLE_IN_FROM <a class="header-anchor" href="#variable-i3t-cycle-in-from" aria-label="Permalink to &quot;variable I3T_CYCLE_IN_FROM&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_CYCLE_IN_FROM </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_CYCLE_IN_FROM </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-cycle-in-next" tabindex="-1">variable I3T_CYCLE_IN_NEXT <a class="header-anchor" href="#variable-i3t-cycle-in-next" aria-label="Permalink to &quot;variable I3T_CYCLE_IN_NEXT&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_CYCLE_IN_NEXT </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_CYCLE_IN_NEXT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-cycle-in-pause" tabindex="-1">variable I3T_CYCLE_IN_PAUSE <a class="header-anchor" href="#variable-i3t-cycle-in-pause" aria-label="Permalink to &quot;variable I3T_CYCLE_IN_PAUSE&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_CYCLE_IN_PAUSE </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_CYCLE_IN_PAUSE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-cycle-in-play" tabindex="-1">variable I3T_CYCLE_IN_PLAY <a class="header-anchor" href="#variable-i3t-cycle-in-play" aria-label="Permalink to &quot;variable I3T_CYCLE_IN_PLAY&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_CYCLE_IN_PLAY </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_CYCLE_IN_PLAY </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-cycle-in-prev" tabindex="-1">variable I3T_CYCLE_IN_PREV <a class="header-anchor" href="#variable-i3t-cycle-in-prev" aria-label="Permalink to &quot;variable I3T_CYCLE_IN_PREV&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_CYCLE_IN_PREV </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_CYCLE_IN_PREV </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-cycle-in-step" tabindex="-1">variable I3T_CYCLE_IN_STEP <a class="header-anchor" href="#variable-i3t-cycle-in-step" aria-label="Permalink to &quot;variable I3T_CYCLE_IN_STEP&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_CYCLE_IN_STEP </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_CYCLE_IN_STEP </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-cycle-in-stop" tabindex="-1">variable I3T_CYCLE_IN_STOP <a class="header-anchor" href="#variable-i3t-cycle-in-stop" aria-label="Permalink to &quot;variable I3T_CYCLE_IN_STOP&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_CYCLE_IN_STOP </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_CYCLE_IN_STOP </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-cycle-in-to" tabindex="-1">variable I3T_CYCLE_IN_TO <a class="header-anchor" href="#variable-i3t-cycle-in-to" aria-label="Permalink to &quot;variable I3T_CYCLE_IN_TO&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_CYCLE_IN_TO </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_CYCLE_IN_TO </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-cycle-out-begin" tabindex="-1">variable I3T_CYCLE_OUT_BEGIN <a class="header-anchor" href="#variable-i3t-cycle-out-begin" aria-label="Permalink to &quot;variable I3T_CYCLE_OUT_BEGIN&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_CYCLE_OUT_BEGIN </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_CYCLE_OUT_BEGIN </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-cycle-out-end" tabindex="-1">variable I3T_CYCLE_OUT_END <a class="header-anchor" href="#variable-i3t-cycle-out-end" aria-label="Permalink to &quot;variable I3T_CYCLE_OUT_END&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_CYCLE_OUT_END </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_CYCLE_OUT_END </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-cycle-out-next" tabindex="-1">variable I3T_CYCLE_OUT_NEXT <a class="header-anchor" href="#variable-i3t-cycle-out-next" aria-label="Permalink to &quot;variable I3T_CYCLE_OUT_NEXT&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_CYCLE_OUT_NEXT </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_CYCLE_OUT_NEXT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-cycle-out-pause" tabindex="-1">variable I3T_CYCLE_OUT_PAUSE <a class="header-anchor" href="#variable-i3t-cycle-out-pause" aria-label="Permalink to &quot;variable I3T_CYCLE_OUT_PAUSE&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_CYCLE_OUT_PAUSE </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_CYCLE_OUT_PAUSE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-cycle-out-play" tabindex="-1">variable I3T_CYCLE_OUT_PLAY <a class="header-anchor" href="#variable-i3t-cycle-out-play" aria-label="Permalink to &quot;variable I3T_CYCLE_OUT_PLAY&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_CYCLE_OUT_PLAY </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_CYCLE_OUT_PLAY </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-cycle-out-prev" tabindex="-1">variable I3T_CYCLE_OUT_PREV <a class="header-anchor" href="#variable-i3t-cycle-out-prev" aria-label="Permalink to &quot;variable I3T_CYCLE_OUT_PREV&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_CYCLE_OUT_PREV </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_CYCLE_OUT_PREV </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-cycle-out-stop" tabindex="-1">variable I3T_CYCLE_OUT_STOP <a class="header-anchor" href="#variable-i3t-cycle-out-stop" aria-label="Permalink to &quot;variable I3T_CYCLE_OUT_STOP&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_CYCLE_OUT_STOP </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_CYCLE_OUT_STOP </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-cycle-out-val" tabindex="-1">variable I3T_CYCLE_OUT_VAL <a class="header-anchor" href="#variable-i3t-cycle-out-val" aria-label="Permalink to &quot;variable I3T_CYCLE_OUT_VAL&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_CYCLE_OUT_VAL </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_CYCLE_OUT_VAL </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-cycle-step-duration-minimum" tabindex="-1">variable I3T_CYCLE_STEP_DURATION_MINIMUM <a class="header-anchor" href="#variable-i3t-cycle-step-duration-minimum" aria-label="Permalink to &quot;variable I3T_CYCLE_STEP_DURATION_MINIMUM&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">auto</span><span style="color:#E1E4E8;"> I3T_CYCLE_STEP_DURATION_MINIMUM </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.01</span><span style="color:#F97583;">f</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">auto</span><span style="color:#24292E;"> I3T_CYCLE_STEP_DURATION_MINIMUM </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.01</span><span style="color:#D73A49;">f</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-cycle-step-duration-seconds" tabindex="-1">variable I3T_CYCLE_STEP_DURATION_SECONDS <a class="header-anchor" href="#variable-i3t-cycle-step-duration-seconds" aria-label="Permalink to &quot;variable I3T_CYCLE_STEP_DURATION_SECONDS&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">auto</span><span style="color:#E1E4E8;"> I3T_CYCLE_STEP_DURATION_SECONDS </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.5</span><span style="color:#F97583;">f</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">auto</span><span style="color:#24292E;"> I3T_CYCLE_STEP_DURATION_SECONDS </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.5</span><span style="color:#D73A49;">f</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-data0" tabindex="-1">variable I3T_DATA0 <a class="header-anchor" href="#variable-i3t-data0" aria-label="Permalink to &quot;variable I3T_DATA0&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_DATA0 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_DATA0 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-data1" tabindex="-1">variable I3T_DATA1 <a class="header-anchor" href="#variable-i3t-data1" aria-label="Permalink to &quot;variable I3T_DATA1&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_DATA1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_DATA1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-data2" tabindex="-1">variable I3T_DATA2 <a class="header-anchor" href="#variable-i3t-data2" aria-label="Permalink to &quot;variable I3T_DATA2&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_DATA2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_DATA2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-input0" tabindex="-1">variable I3T_INPUT0 <a class="header-anchor" href="#variable-i3t-input0" aria-label="Permalink to &quot;variable I3T_INPUT0&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_INPUT0 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_INPUT0 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-input1" tabindex="-1">variable I3T_INPUT1 <a class="header-anchor" href="#variable-i3t-input1" aria-label="Permalink to &quot;variable I3T_INPUT1&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_INPUT1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_INPUT1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-input2" tabindex="-1">variable I3T_INPUT2 <a class="header-anchor" href="#variable-i3t-input2" aria-label="Permalink to &quot;variable I3T_INPUT2&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_INPUT2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_INPUT2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-output0" tabindex="-1">variable I3T_OUTPUT0 <a class="header-anchor" href="#variable-i3t-output0" aria-label="Permalink to &quot;variable I3T_OUTPUT0&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_OUTPUT0 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_OUTPUT0 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-output1" tabindex="-1">variable I3T_OUTPUT1 <a class="header-anchor" href="#variable-i3t-output1" aria-label="Permalink to &quot;variable I3T_OUTPUT1&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_OUTPUT1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_OUTPUT1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-output2" tabindex="-1">variable I3T_OUTPUT2 <a class="header-anchor" href="#variable-i3t-output2" aria-label="Permalink to &quot;variable I3T_OUTPUT2&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_OUTPUT2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_OUTPUT2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-seq-in-mat" tabindex="-1">variable I3T_SEQ_IN_MAT <a class="header-anchor" href="#variable-i3t-seq-in-mat" aria-label="Permalink to &quot;variable I3T_SEQ_IN_MAT&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_SEQ_IN_MAT </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_SEQ_IN_MAT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-seq-in-mul" tabindex="-1">variable I3T_SEQ_IN_MUL <a class="header-anchor" href="#variable-i3t-seq-in-mul" aria-label="Permalink to &quot;variable I3T_SEQ_IN_MUL&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_SEQ_IN_MUL </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_SEQ_IN_MUL </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-seq-mat" tabindex="-1">variable I3T_SEQ_MAT <a class="header-anchor" href="#variable-i3t-seq-mat" aria-label="Permalink to &quot;variable I3T_SEQ_MAT&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_SEQ_MAT </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_SEQ_MAT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-seq-mod" tabindex="-1">variable I3T_SEQ_MOD <a class="header-anchor" href="#variable-i3t-seq-mod" aria-label="Permalink to &quot;variable I3T_SEQ_MOD&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_SEQ_MOD </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_SEQ_MOD </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-seq-mul" tabindex="-1">variable I3T_SEQ_MUL <a class="header-anchor" href="#variable-i3t-seq-mul" aria-label="Permalink to &quot;variable I3T_SEQ_MUL&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_SEQ_MUL </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_SEQ_MUL </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-seq-out-mat" tabindex="-1">variable I3T_SEQ_OUT_MAT <a class="header-anchor" href="#variable-i3t-seq-out-mat" aria-label="Permalink to &quot;variable I3T_SEQ_OUT_MAT&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_SEQ_OUT_MAT </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_SEQ_OUT_MAT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-seq-out-mod" tabindex="-1">variable I3T_SEQ_OUT_MOD <a class="header-anchor" href="#variable-i3t-seq-out-mod" aria-label="Permalink to &quot;variable I3T_SEQ_OUT_MOD&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_SEQ_OUT_MOD </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_SEQ_OUT_MOD </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-i3t-seq-out-mul" tabindex="-1">variable I3T_SEQ_OUT_MUL <a class="header-anchor" href="#variable-i3t-seq-out-mul" aria-label="Permalink to &quot;variable I3T_SEQ_OUT_MUL&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> I3T_SEQ_OUT_MUL </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> I3T_SEQ_OUT_MUL </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-lookatinputnames" tabindex="-1">variable lookAtInputNames <a class="header-anchor" href="#variable-lookatinputnames" aria-label="Permalink to &quot;variable lookAtInputNames&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinNames lookAtInputNames </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;eye&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;center&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;up&quot;</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinNames lookAtInputNames </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;eye&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;center&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;up&quot;</span><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-matrixinput" tabindex="-1">variable matrixInput <a class="header-anchor" href="#variable-matrixinput" aria-label="Permalink to &quot;variable matrixInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup matrixInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Matrix};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup matrixInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Matrix};</span></span></code></pre></div><h3 id="variable-matrixmulandmatrixinput" tabindex="-1">variable matrixMulAndMatrixInput <a class="header-anchor" href="#variable-matrixmulandmatrixinput" aria-label="Permalink to &quot;variable matrixMulAndMatrixInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup matrixMulAndMatrixInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::MatrixMul, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Matrix};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup matrixMulAndMatrixInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::MatrixMul, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Matrix};</span></span></code></pre></div><h3 id="variable-matrixmulinput" tabindex="-1">variable matrixMulInput <a class="header-anchor" href="#variable-matrixmulinput" aria-label="Permalink to &quot;variable matrixMulInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup matrixMulInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::MatrixMul};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup matrixMulInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::MatrixMul};</span></span></code></pre></div><h3 id="variable-matrixvectorinput" tabindex="-1">variable matrixVectorInput <a class="header-anchor" href="#variable-matrixvectorinput" aria-label="Permalink to &quot;variable matrixVectorInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup matrixVectorInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Matrix, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec4};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup matrixVectorInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Matrix, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec4};</span></span></code></pre></div><h3 id="variable-mixinputnames" tabindex="-1">variable mixInputNames <a class="header-anchor" href="#variable-mixinputnames" aria-label="Permalink to &quot;variable mixInputNames&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinNames mixInputNames </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;from&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;to&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;t&quot;</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinNames mixInputNames </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;from&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;to&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;t&quot;</span><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-nil-id" tabindex="-1">variable NIL_ID <a class="header-anchor" href="#variable-nil-id" aria-label="Permalink to &quot;variable NIL_ID&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> ID NIL_ID </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> ID NIL_ID </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="variable-operations" tabindex="-1">variable operations <a class="header-anchor" href="#variable-operations" aria-label="Permalink to &quot;variable operations&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::vector</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> Operation </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> operations;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::vector</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Operation </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> operations;</span></span></code></pre></div><p>Table with configuration parameters for OPERATORS.</p><p>Must be in the same order as in EOperatorType!!!</p><h3 id="variable-orthofrustruminputnames" tabindex="-1">variable orthoFrustrumInputNames <a class="header-anchor" href="#variable-orthofrustruminputnames" aria-label="Permalink to &quot;variable orthoFrustrumInputNames&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinNames orthoFrustrumInputNames </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;left&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;right&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;bottom&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;top&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;near&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;far&quot;</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinNames orthoFrustrumInputNames </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;left&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;right&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;bottom&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;top&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;near&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;far&quot;</span><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-perspectiveinputnames" tabindex="-1">variable PerspectiveInputNames <a class="header-anchor" href="#variable-perspectiveinputnames" aria-label="Permalink to &quot;variable PerspectiveInputNames&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinNames PerspectiveInputNames </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;fovy&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;aspect&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;near&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;far&quot;</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinNames PerspectiveInputNames </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;fovy&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;aspect&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;near&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;far&quot;</span><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-pulseinput" tabindex="-1">variable pulseInput <a class="header-anchor" href="#variable-pulseinput" aria-label="Permalink to &quot;variable pulseInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup pulseInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Pulse};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup pulseInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Pulse};</span></span></code></pre></div><h3 id="variable-quatinput" tabindex="-1">variable quatInput <a class="header-anchor" href="#variable-quatinput" aria-label="Permalink to &quot;variable quatInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup quatInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Quat};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup quatInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Quat};</span></span></code></pre></div><h3 id="variable-quattofloatvecinputnames" tabindex="-1">variable QuatToFloatVecInputNames <a class="header-anchor" href="#variable-quattofloatvecinputnames" aria-label="Permalink to &quot;variable QuatToFloatVecInputNames&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinNames QuatToFloatVecInputNames </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;w&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;(x,y,z)&quot;</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinNames QuatToFloatVecInputNames </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;w&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;(x,y,z)&quot;</span><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-screenfloatinput" tabindex="-1">variable screenFloatInput <a class="header-anchor" href="#variable-screenfloatinput" aria-label="Permalink to &quot;variable screenFloatInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup screenFloatInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Screen, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup screenFloatInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Screen, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float};</span></span></code></pre></div><h3 id="variable-screeninput" tabindex="-1">variable screenInput <a class="header-anchor" href="#variable-screeninput" aria-label="Permalink to &quot;variable screenInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup screenInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Screen};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup screenInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Screen};</span></span></code></pre></div><h3 id="variable-sixfloatinput" tabindex="-1">variable sixFloatInput <a class="header-anchor" href="#variable-sixfloatinput" aria-label="Permalink to &quot;variable sixFloatInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup sixFloatInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                       </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup sixFloatInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float,</span></span>
<span class="line"><span style="color:#24292E;">                                       </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float};</span></span></code></pre></div><h3 id="variable-sixteenfloatinput" tabindex="-1">variable sixteenFloatInput <a class="header-anchor" href="#variable-sixteenfloatinput" aria-label="Permalink to &quot;variable sixteenFloatInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup sixteenFloatInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                           </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                           </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                           </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup sixteenFloatInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float,</span></span>
<span class="line"><span style="color:#24292E;">                                           </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float,</span></span>
<span class="line"><span style="color:#24292E;">                                           </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float,</span></span>
<span class="line"><span style="color:#24292E;">                                           </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float};</span></span></code></pre></div><h3 id="variable-threefloatinput" tabindex="-1">variable threeFloatInput <a class="header-anchor" href="#variable-threefloatinput" aria-label="Permalink to &quot;variable threeFloatInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup threeFloatInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup threeFloatInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float};</span></span></code></pre></div><h3 id="variable-threevector3input" tabindex="-1">variable threeVector3Input <a class="header-anchor" href="#variable-threevector3input" aria-label="Permalink to &quot;variable threeVector3Input&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup threeVector3Input </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec3, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec3, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec3};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup threeVector3Input </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec3, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec3, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec3};</span></span></code></pre></div><h3 id="variable-tr" tabindex="-1">variable tr <a class="header-anchor" href="#variable-tr" aria-label="Permalink to &quot;variable tr&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinNames tr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;T&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;R&quot;</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinNames tr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;T&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;R&quot;</span><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-twofloatinput" tabindex="-1">variable twoFloatInput <a class="header-anchor" href="#variable-twofloatinput" aria-label="Permalink to &quot;variable twoFloatInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup twoFloatInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup twoFloatInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float};</span></span></code></pre></div><h3 id="variable-twofloatvector3input" tabindex="-1">variable twoFloatVector3Input <a class="header-anchor" href="#variable-twofloatvector3input" aria-label="Permalink to &quot;variable twoFloatVector3Input&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup twoFloatVector3Input </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec3};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup twoFloatVector3Input </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec3};</span></span></code></pre></div><h3 id="variable-twomatrixinput" tabindex="-1">variable twoMatrixInput <a class="header-anchor" href="#variable-twomatrixinput" aria-label="Permalink to &quot;variable twoMatrixInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup twoMatrixInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Matrix, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Matrix};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup twoMatrixInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Matrix, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Matrix};</span></span></code></pre></div><h3 id="variable-twoquatfloatinput" tabindex="-1">variable twoQuatFloatInput <a class="header-anchor" href="#variable-twoquatfloatinput" aria-label="Permalink to &quot;variable twoQuatFloatInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup twoQuatFloatInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Quat, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Quat, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup twoQuatFloatInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Quat, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Quat, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float};</span></span></code></pre></div><h3 id="variable-twoquatinput" tabindex="-1">variable twoQuatInput <a class="header-anchor" href="#variable-twoquatinput" aria-label="Permalink to &quot;variable twoQuatInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup twoQuatInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Quat, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Quat};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup twoQuatInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Quat, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Quat};</span></span></code></pre></div><h3 id="variable-twovector3floatinput" tabindex="-1">variable twoVector3FloatInput <a class="header-anchor" href="#variable-twovector3floatinput" aria-label="Permalink to &quot;variable twoVector3FloatInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup twoVector3FloatInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec3, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec3, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup twoVector3FloatInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec3, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec3, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float};</span></span></code></pre></div><h3 id="variable-twovector3input" tabindex="-1">variable twoVector3Input <a class="header-anchor" href="#variable-twovector3input" aria-label="Permalink to &quot;variable twoVector3Input&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup twoVector3Input </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec3, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec3};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup twoVector3Input </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec3, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec3};</span></span></code></pre></div><h3 id="variable-twovectorfloatinput" tabindex="-1">variable twoVectorFloatInput <a class="header-anchor" href="#variable-twovectorfloatinput" aria-label="Permalink to &quot;variable twoVectorFloatInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup twoVectorFloatInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec4, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec4, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup twoVectorFloatInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec4, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec4, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float};</span></span></code></pre></div><h3 id="variable-twovectorinput" tabindex="-1">variable twoVectorInput <a class="header-anchor" href="#variable-twovectorinput" aria-label="Permalink to &quot;variable twoVectorInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup twoVectorInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec4, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec4};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup twoVectorInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec4, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec4};</span></span></code></pre></div><h3 id="variable-vector3floatinput" tabindex="-1">variable vector3FloatInput <a class="header-anchor" href="#variable-vector3floatinput" aria-label="Permalink to &quot;variable vector3FloatInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup vector3FloatInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec3, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Float};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup vector3FloatInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec3, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Float};</span></span></code></pre></div><h3 id="variable-vector3input" tabindex="-1">variable vector3Input <a class="header-anchor" href="#variable-vector3input" aria-label="Permalink to &quot;variable vector3Input&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup vector3Input </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec3};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup vector3Input </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec3};</span></span></code></pre></div><h3 id="variable-vector3quatinput" tabindex="-1">variable vector3QuatInput <a class="header-anchor" href="#variable-vector3quatinput" aria-label="Permalink to &quot;variable vector3QuatInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup vector3QuatInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec3, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Quat};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup vector3QuatInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec3, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Quat};</span></span></code></pre></div><h3 id="variable-vectorinput" tabindex="-1">variable vectorInput <a class="header-anchor" href="#variable-vectorinput" aria-label="Permalink to &quot;variable vectorInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup vectorInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec4};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup vectorInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec4};</span></span></code></pre></div><h3 id="variable-vectormatrixinput" tabindex="-1">variable vectorMatrixInput <a class="header-anchor" href="#variable-vectormatrixinput" aria-label="Permalink to &quot;variable vectorMatrixInput&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinGroup vectorMatrixInput </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Vec4, </span><span style="color:#B392F0;">EValueType</span><span style="color:#E1E4E8;">::Matrix};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinGroup vectorMatrixInput </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Vec4, </span><span style="color:#6F42C1;">EValueType</span><span style="color:#24292E;">::Matrix};</span></span></code></pre></div><h3 id="variable-vectors3tomatrixinputnames" tabindex="-1">variable Vectors3ToMatrixInputNames <a class="header-anchor" href="#variable-vectors3tomatrixinputnames" aria-label="Permalink to &quot;variable Vectors3ToMatrixInputNames&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinNames Vectors3ToMatrixInputNames </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;vec3 X&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;vec3 Y&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;vec3 Z&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;vec3 T&quot;</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinNames Vectors3ToMatrixInputNames </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;vec3 X&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;vec3 Y&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;vec3 Z&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;vec3 T&quot;</span><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-vectorstomatrixinputnames" tabindex="-1">variable VectorsToMatrixInputNames <a class="header-anchor" href="#variable-vectorstomatrixinputnames" aria-label="Permalink to &quot;variable VectorsToMatrixInputNames&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinNames VectorsToMatrixInputNames </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;vec4 X&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;vec4 Y&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;vec4 Z&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;vec4 T&quot;</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinNames VectorsToMatrixInputNames </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;vec4 X&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;vec4 Y&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;vec4 Z&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;vec4 T&quot;</span><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-vm-any" tabindex="-1">variable VM_ANY <a class="header-anchor" href="#variable-vm-any" aria-label="Permalink to &quot;variable VM_ANY&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int8_t</span><span style="color:#E1E4E8;"> VM_ANY </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int8_t</span><span style="color:#24292E;"> VM_ANY </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span></code></pre></div><p>Editable matrix element in ValueMask - it&#39;s range of values may be limited - the limit is checked in setValue() methods.</p><h3 id="variable-vm-minus-one" tabindex="-1">variable VM_MINUS_ONE <a class="header-anchor" href="#variable-vm-minus-one" aria-label="Permalink to &quot;variable VM_MINUS_ONE&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int8_t</span><span style="color:#E1E4E8;"> VM_MINUS_ONE </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int8_t</span><span style="color:#24292E;"> VM_MINUS_ONE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span></code></pre></div><p>Fixed matrix element (-1) in ValueMask.</p><h3 id="variable-vm-one" tabindex="-1">variable VM_ONE <a class="header-anchor" href="#variable-vm-one" aria-label="Permalink to &quot;variable VM_ONE&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int8_t</span><span style="color:#E1E4E8;"> VM_ONE </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int8_t</span><span style="color:#24292E;"> VM_ONE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span></code></pre></div><p>Fixed matrix element (+1) in ValueMask.</p><h3 id="variable-vm-zero" tabindex="-1">variable VM_ZERO <a class="header-anchor" href="#variable-vm-zero" aria-label="Permalink to &quot;variable VM_ZERO&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">constexpr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int8_t</span><span style="color:#E1E4E8;"> VM_ZERO </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">constexpr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int8_t</span><span style="color:#24292E;"> VM_ZERO </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span></code></pre></div><p>Fixed matrix element (0) in ValueMask.</p><h3 id="variable-xyz" tabindex="-1">variable xyz <a class="header-anchor" href="#variable-xyz" aria-label="Permalink to &quot;variable xyz&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinNames xyz </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;x&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;y&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;z&quot;</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinNames xyz </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;x&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;y&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;z&quot;</span><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="variable-xyzw" tabindex="-1">variable xyzw <a class="header-anchor" href="#variable-xyzw" aria-label="Permalink to &quot;variable xyzw&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> PinNames xyzw </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;x&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;y&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;z&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;w&quot;</span><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> PinNames xyzw </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;x&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;y&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;z&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;w&quot;</span><span style="color:#24292E;">};</span></span></code></pre></div><hr><p>Updated on 2024-10-16 at 16:44:50 +0000</p>`,350),o=[p];function l(r,c,i,E,y,d){return a(),e("div",null,o)}const g=s(t,[["render",l]]);export{h as __pageData,g as default};
