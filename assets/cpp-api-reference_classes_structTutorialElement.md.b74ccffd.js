import{_ as e,o as a,c as t,Q as s}from"./chunks/framework.0f749972.js";const E=JSON.parse('{"title":"TutorialElement","description":"","frontmatter":{"title":"TutorialElement"},"headers":[],"relativePath":"cpp-api-reference/classes/structTutorialElement.md","filePath":"cpp-api-reference/classes/structTutorialElement.md"}'),n={name:"cpp-api-reference/classes/structTutorialElement.md"},l=s(`<h1 id="tutorialelement" tabindex="-1">TutorialElement <a class="header-anchor" href="#tutorialelement" aria-label="Permalink to &quot;TutorialElement&quot;">​</a></h1><p><code>#include &quot;Tutorial/Tutorial.h&quot;</code></p><p>Inherited by <a href="/cpp-api-reference/classes/structChoiceTask.html">ChoiceTask</a>, <a href="/cpp-api-reference/classes/structExplanation.html">Explanation</a>, <a href="/cpp-api-reference/classes/structHeadline.html">Headline</a>, <a href="/cpp-api-reference/classes/structHint.html">Hint</a>, <a href="/cpp-api-reference/classes/structInputTask.html">InputTask</a>, <a href="/cpp-api-reference/classes/structMultiChoiceTask.html">MultiChoiceTask</a>, <a href="/cpp-api-reference/classes/structTask.html">Task</a></p><h2 id="public-functions" tabindex="-1">Public Functions <a class="header-anchor" href="#public-functions" aria-label="Permalink to &quot;Public Functions&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href="/cpp-api-reference/classes/structTutorialElement.html#function-tutorialelement">TutorialElement</a></strong>()</td></tr><tr><td></td><td><strong><a href="/cpp-api-reference/classes/structTutorialElement.html#function-tutorialelement">TutorialElement</a></strong>(std::string content)</td></tr><tr><td>virtual</td><td><strong><a href="/cpp-api-reference/classes/structTutorialElement.html#function-~tutorialelement">~TutorialElement</a></strong>() =default</td></tr><tr><td>virtual void</td><td><strong><a href="/cpp-api-reference/classes/structTutorialElement.html#function-acceptrenderer">acceptRenderer</a></strong>(<a href="/cpp-api-reference/classes/classITutorialRenderer.html">ITutorialRenderer</a> * tutorialRenderer) =0</td></tr></tbody></table><h2 id="public-attributes" tabindex="-1">Public Attributes <a class="header-anchor" href="#public-attributes" aria-label="Permalink to &quot;Public Attributes&quot;">​</a></h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>std::string</td><td><strong><a href="/cpp-api-reference/classes/structTutorialElement.html#variable-m-content">m_content</a></strong></td></tr></tbody></table><h2 id="public-functions-documentation" tabindex="-1">Public Functions Documentation <a class="header-anchor" href="#public-functions-documentation" aria-label="Permalink to &quot;Public Functions Documentation&quot;">​</a></h2><h3 id="function-tutorialelement" tabindex="-1">function TutorialElement <a class="header-anchor" href="#function-tutorialelement" aria-label="Permalink to &quot;function TutorialElement&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TutorialElement</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TutorialElement</span><span style="color:#24292E;">()</span></span></code></pre></div><h3 id="function-tutorialelement-1" tabindex="-1">function TutorialElement <a class="header-anchor" href="#function-tutorialelement-1" aria-label="Permalink to &quot;function TutorialElement&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TutorialElement</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string content</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">inline</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TutorialElement</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string content</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="function-tutorialelement-2" tabindex="-1">function ~TutorialElement <a class="header-anchor" href="#function-tutorialelement-2" aria-label="Permalink to &quot;function ~TutorialElement&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">~</span><span style="color:#B392F0;">TutorialElement</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">=default</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">~</span><span style="color:#6F42C1;">TutorialElement</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">=default</span></span></code></pre></div><h3 id="function-acceptrenderer" tabindex="-1">function acceptRenderer <a class="header-anchor" href="#function-acceptrenderer" aria-label="Permalink to &quot;function acceptRenderer&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">acceptRenderer</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">ITutorialRenderer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">tutorialRenderer</span></span>
<span class="line"><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">virtual</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">acceptRenderer</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">ITutorialRenderer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">tutorialRenderer</span></span>
<span class="line"><span style="color:#24292E;">) </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span></span></code></pre></div><p><strong>Reimplemented by</strong>: <a href="/cpp-api-reference/classes/structExplanation.html#function-acceptrenderer">Explanation::acceptRenderer</a>, <a href="/cpp-api-reference/classes/structHeadline.html#function-acceptrenderer">Headline::acceptRenderer</a>, <a href="/cpp-api-reference/classes/structTask.html#function-acceptrenderer">Task::acceptRenderer</a>, <a href="/cpp-api-reference/classes/structHint.html#function-acceptrenderer">Hint::acceptRenderer</a>, <a href="/cpp-api-reference/classes/structChoiceTask.html#function-acceptrenderer">ChoiceTask::acceptRenderer</a>, <a href="/cpp-api-reference/classes/structMultiChoiceTask.html#function-acceptrenderer">MultiChoiceTask::acceptRenderer</a>, <a href="/cpp-api-reference/classes/structInputTask.html#function-acceptrenderer">InputTask::acceptRenderer</a></p><h2 id="public-attributes-documentation" tabindex="-1">Public Attributes Documentation <a class="header-anchor" href="#public-attributes-documentation" aria-label="Permalink to &quot;Public Attributes Documentation&quot;">​</a></h2><h3 id="variable-m-content" tabindex="-1">variable m_content <a class="header-anchor" href="#variable-m-content" aria-label="Permalink to &quot;variable m_content&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::string m_content;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::string m_content;</span></span></code></pre></div><hr><p>Updated on 2024-10-16 at 18:09:43 +0000</p>`,22),r=[l];function c(o,p,i,u,d,h){return a(),t("div",null,r)}const f=e(n,[["render",c]]);export{E as __pageData,f as default};
