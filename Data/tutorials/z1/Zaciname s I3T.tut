---
title: Začínáme s I3T
description: V této lekci se seznámíš se základními funkcionalitami a ovládáním I3T.
thumbnail: cube.png
language: cs
---

Vítej v I3T!

Základ programu tvoří tyto dvě okna:

![Viewport a workspace](i3tscreens.png)

*Workspace* slouží k vytváření scény za pomoci matematických bloků.

*Viewport* nám dává živý náhled na scénu z nezávislé kamery.

--

Přidání bloků se provádí kliknutím pravým tlačítkem ![pravé tlačítko myši](mouseRight.png) do workspace.

task: 
  Přidej do workspace tyto tři bloky:
    * model
    * sequence
    * transformation -> scale

![Model krychle, sekvence a matice transformace velikosti](addStuff.png)

Na scéně by se ti měl objevit model krychle.

% hint:
%   Klikni do workspace pravým tlačítkem, zobrazí se ti menu "Add block...".
%   Postupně skrze toto menu přidej zmíněné tři bloky.

--

Podívejme se na přidané bloky:

* **Model** = model krychle
* **Sequence** = blok na skládání posloupnosti transformací
* **Scale** = matice transformace velikosti

Pokud je správně poskládáme, budeme moci změnou hodnot v matici krychli transformovat.

task: Přetáhni matici do sekvence a spoj model se sekvencí

![Matice v sekvenci napojené na model](scale.png)

Zatím se ještě nic nezmění.

% Hodnoty v matici můžeš jednodušše měnit tažením ![levé tlačítko myši](mouseLeft.png).
% Tímto tlačítkem můžeš nahlédnout, jestli na to jdeš správně:
% hint: ![Kliknutím na hodnotu v matici a tažením myší vpravo zvětšíš její hodnotu a tímpádem i krychli](hintPosun.png)

--

task: Nyní zkus změnit jednu z hodnot v matici tím, že na ní klikneš a potáhneš doprava

Model by se měl zvětšit. To se děje díky tomu, že souřadnice jeho vrcholů násobíme danou maticí. 

![Násobení vektoru maticí](multiplication.png)

*Násobení* je značené tyrkysovou šipkou ![násobení matic](greenArrow.png). 
% *Sekvence* pak v našem případě slouží jako "držák" na tuto *transformační matici*.

--

Než budeme pokračovat, ukažme si ještě základní ovládání oken.

task:  
  Vyzkoušej si:
    * tažení ![pravé tlačítko myši](mouseRight.png) a ![prostřední tlačítko myši](mouseMiddle.png) ve viewportu
    * tažení ![pravé tlačítko myši](mouseRight.png) a ![levé tlačítko myši](mouseLeft.png) ve workspace
    * kolečko myši v obou oknech 
%    * šipky na klávesnici nad viewportem

--

Hodnoty v matici můžeme měnit různými způsoby - *tažením* ![levé tlačítko myši](mouseLeft.png), *dvojklikem* ![levé tlačítko myši](mouseLeft.png), nebo z výběru po *kliknutí* ![pravé tlačítko myši](mouseRight.png). V neposlední řadě můžeme použít 3D manipulátory ve viewportu - ty se zobrazí po *označení matice*.

![Manipulátory](manipulators.png)

task:  Změň velikost krychle pomocí manipulátoru velikosti
task:  Poté nastav velikost krychle přesně na jednu polovinu
hint: 
  Pro zobrazení manipulátoru vyber matici Scale (kliknutím na nadpis). 
  Pro přesné zadání dvakrát klikni na hodnotu v matici a vepiš 0.5.

--

Transformací můžeme provést i více postupným násobením více maticemi:
![násobení více sekvencí zasebou](sequences.png)

Sekvence nám umožňuje toto násobení zjednodušit:
![násobení více sekvencí zasebou](sequences2.png)

task:  Do stávající sekvence přidej matici rotace kolem osy Y a krychli pootoč
hint: 
  ![Klikni pravým do workspace](hintRotace.png) ![Přetáhni matici rotace do sekvence a změň nějakou z hodnot](sequence.png)

--

Představme si, že model potřebujeme pootočit přesně o nějakou hodnotu v radiánech. Hodnoty v matici jsou dány goniometrickými funkcemi, ty se z hlavy hůře odhadují a více k nim si povíme až v dalších lekcích. Ukážeme si proto jiný způsob, jak nastavovat hodnoty matice.

task: Klikni ![pravé tlačítko myši](mouseRight.png) na matici rotace a změň její Level of detail na Set values
hint: 
  ![menu pravého tlačítka na matici](setValues.png) ![LOD na Set values](setValues2.png)

Nyní můžeš zadat úhel přímo v radiánech a I3T hodnoty matice automaticky vypočte.

--

Pokud bychom chtěli s hodnotami více pracovat, mohou se nám dále vyplatit tzv. *operátory*. Operátory slouží k zadávání hodnot a výpočtům dalších operací. Vyzkoušíme si u nich *předávat floaty* ![předání floatu](darkGreenArrow.png) a *matice* ![předání matice](redArrow.png).

![Použití operátorů](operators.png)

Nejprve si připravme workspace.

task:  Přesuň obě matice ze sekvence a poté je smaž
task:
  Přidej do workspace:
    * operátor transformace rotace okolo osy Y
    * operátor floatu

hint:  
Matice můžeš smazat označením levým tlačítkem ![levé tlačítko myši](mouseLeft.png) a klávesou Delete.
![Stav workspace po tomto kroku. Operátory přidáš kliknutím pravým tlačítkem do workspace.](operatorsAdded.png)

--

Blok sekvence umí převzít hodnotu matice červenou šipkou ![předání matice](redArrow.png).

task:  Zapoj operátory jako na obrázku a zkus si floatem zahýbat

![ukázka zapojení](floatOp.png)

Skvěle! Nyní můžeme opět otáčet v radiánech. Co když ale budeme potřebovat otočit o hodnotu ve stupních?

--

script: append("Data/tutorials/1/degreesToRadians.c");

Pomůžeme si jednoduchým převodem. Ve workspace by se ti měly objevit nové bloky, pokud je nevidíš, zmáčkni nad workspace klávesu **S**.

task: Zapoj vložené bloky místo původního float operátoru
task: Nastav úhel na 33 stupňů

![výsledné zapojení](final.png)

hint: Původní spojení můžeš zrušit označením ![levé tlačítko myši](mouseLeft.png) a klávesou Delete

A máme to!

--

**Lekce splněna!**
![Splněno!](checkbox.png)

Shrnutí:
  * workspace a viewport
  * ovládání myší ![levé tlačítko myši](mouseLeft.png) ![prostřední tlačítko myši](mouseMiddle.png) ![pravé tlačítko myši](mouseRight.png)
  * sekvence, transformační matice a operátory
  * možnosti změny hodnot matic
  * nastavení Level of detail matice
  * tři typy šipek ![násobení matic](greenArrow.png) ![předání floatu](darkGreenArrow.png) ![předání matice](redArrow.png)

Klikni na Finish ![](down.png) pro návrat do úvodního okna.