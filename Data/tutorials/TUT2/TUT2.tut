---
title: Základy transformací a práce s nimi
description: Tady se naučíme jak funguje která transformace v I3T i obecně!
thumbnail: transform_thumb.png
language: cs
---
*Vítej ve druhém tutoriálu!*

Podíváme se jak fungují *transformace*!

Ukážeme si:
    * *Rotaci* = otočení objektu
    * *Škálování* = změna velikosti objektu
    * *Translaci* = změna pozice objektu

S operací *škálování* jsme pracovali v předchozí lekci, tentokrát se ale podíváme na to, jak vlastně *transformace* fungují.

Pojďme na to

--

*Co to je transformace?*
Když nějaký objekt *transformujeme*, změníme každý jeho bod. Změnou můžeme myslet otáčení, posunutí atd.

*Transformace* v 3D reprezentujeme maticí *4x4*.
To, jak se objekt změní po *transformaci* určují hodnoty v matici
![Identita - matice s jedničkami na diagonále](matrix.png)

Objekt transformujeme *vynásobením souřadnic* všech jeho bodů *maticí* požadované transformace.

*Problém: Matice je 4x4, ale vektor souřadnic je jen 3x1. Není je tedy možné násobit.*

--
*Řešení: Homogenní souřadnice*

Aby bylo možné souřadnice bodů násobit maticí, musíme si souřadnice převést na *homogenní souřadnice*

![Homogenní souřadnice](vec4.png)

*Homogenní souřadnice* mají oproti standardním souřadnicím jednu hodnotu navíc: *W*

Ta nám umožní na objekty použít všechny *transformace*, které potřebujeme. (Už můžeme násobit souřadnice bodů transformacemi)

--
*Transformace s převodem na homogenní souřadnice a zpět*

Postup je jednoduchý:
    * Přidej novou souřadnici *W = 1*
    * Vynásob nové souřadnice maticí transformace
    * Převeď zpět z homogenních souřadnic - souřadnicí *W* vyděl zbytek souřadnic

![Konverze z homogenních do standardních souřadnic](conversion.png)

Výsledné souřadnice jsou *nové souřadnice* transformovaného bodu!
--
*Druhy transformací*

Když už víš, jak *transformace* fungují, můžeme si ukázat ty nejčastější:
    * *Škálování* = změna velikosti
    * *Rotace* = otočení
    * *Translace* = posunutí

Nejlepší ale bude, když si *transformace* vyzkoušíš sám/sama.

--

*Názorná ukázka transformací*

task: Přidej do workspace bloky sequence a model a propoj je
hint:
    Blok přidej kliknutím pravého tlačítka do workspace a výběrem "model" a "sequence" ve Workspace menu.
    Propojíme je tažením myši ze zeleného výstupu seq do vstupu modelu.

![Bloky sekvence a modelu](sekvencemodel.png)
--

*Škálování*

Škálování využíváme ke *změně velikosti* objektu.

Matice škálování vypadá takto:
![Transformace, která objekt dvakrát zvětší](scale.png)
Tato konkrétní matice rovnoměrně *zvětší objekt dvakrát*.

task: Přidej do workplace matici scale, pak jí vlož do sekvence
hint:
      Klikni pravým tlačítkem do okna workspace. V menu najeď na "transformations" a vyber "scale".
      Matici přetáhni do sekvence myší - uchopením za její horní lištu

--
*Škálování objektu*

task: Změn hodnotu v zelených políčkách na 2
hint: Hodnoty jde upravit tažením myši, nebo dvojklikem a přepsáním

Vidíme, že se nám ve *Scene View* kostka rovnoměrně dvakrát zvětšila.
![Větší kostka](bigger_model.png)

Co kdybychom ale chtěli model "roztáhnout" jen podél jedné osy?

--
*Nerovnoměrné škálování*

Pokud chceme měnit *velikost* pro každou osu *samostatně*, tak u naší matice musíme *vypnout "synergie"*
To uděláme kliknutím pravým tlačítkem myši na lištu matice a vybráním možnosti *"disable synergies"*.
![Zrušení zámku hodnot](disable_syn.png)
*Teď už si můžeš vyzkoušet měnit hodnoty po jedné. Vyzkoušej si co to udělá s modelem!*

Až si to vyzkoušíš, pokračuj na rotace.

--
*Rotace*

Rotaci využíváme k *otáčení objektu v prostoru*.

Hodnoty v matici rotace nastavujeme v závislosti na *ose*, podél které objekt otáčíme *(pro nás X, Y, nebo Z)*:
![Matice rotací podle všech os](rotations.png)

Obyčejně v rotacích používáme *sinus* a *kosinus*, proto jsou hodnoty matice uzamčené na množinu *<-1, 1>*.

task: Přidej do workplace matici rotace podle osy X
hint: Klikni pravým tlačítkem do okna workspace myší najeď na "transformations", potom na "rotation" a vyber "eulerAngleX"

--
*Zkoušíme rotaci*

task: Myší vytáhni z bloku sekvence *matici škálování* a nahraď ji *maticí rotace*

Kostka se zase zmenší. Teď s ní ale můžeme *otáčet*.

task: Změň hodnotu v prvním poli matice rotace na 0.5

![Otočená kostka](rotated_cube.png)

Kostka se krásně natočí podle *osy Y*.
Skládáním s *ostatními rotacemi* můžeme model otáčet libovolně. *Skládání transformací se v dalším tutoriálu*.

--
*Translace*

Translací *posouváme* objekt v prostoru.

*Hodnoty posunutí* jsou u matice translace v posledním sloupci:
![Matice translace](translation.png)

Pro náš případ by se kostka posunula:
    * *O tři po ose X* (o tři "doprava")
    * *O dva po ose Y* (o dva "nahoru")
    * *O čtyři do záporu v ose Z* (o čtyři "od nás")

Jdeme si zkusit náš model posunout!
--
*Práce s translací*

task: Odeber matici rotace ze sekvence a nahraď jí novou maticí translace
hint:
    Matici ze sekvence vytáhni myší za horní lištu.
    Matici translace přidáš ve workspace menu přes "transformations/translation".

Teď pošli kostku *trucovat do rohu* našeho *Scene View*!

task: Nakonec uprav hodnoty v matici translace tak, aby kostka ležela v rohu sítě ve Scene View (jako na obrázku)
![Kostka posunutá do rohu](translated_cube.png)
--
*Ta kostka si to zaslouží!*
Super! Už víš co dělá jaká transformace!
![Splněno!](checkbox.png)

Co jsme se dozvěděli:
  * základy práce s *transformacemi*
  * ždibec *matematiky*
  * opakování základů *práce s bloky*

Klikni na Finish ![Jižně](down.png) pro návrat do úvodního okna.
