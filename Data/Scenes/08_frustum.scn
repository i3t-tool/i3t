contentFiles {
	contentFile \data\content.cnt
}
scene {
	camera {
		position 22.3258 3.74444 11.999
		lookAt 6.88929 -6.55972 -8.245
		up 0 1 0
		orbitCenter 6.88929 -6.55972 -8.245
		radians 1
	}
	desc {
The scene demonstrates the function frustum(..) that is for a construction of the perspective projection matrix.

1. Edit the input parameters and explain how they influence the positions of the clipping planes and the form of the resulting projection matrix.

2. What advantages and disadvantages have frustum function in comparison to function perspective(...).

3. Explain the order of the model, view and projection transformations.

4. Use the identity matrix to create you own projection. Explain the influence of all sixteen values of the matrix to the resulting projection.

}
		position 855 35
}
transformationSpace {
	position 3 416
	projectionPosition -32 43
	projectionScale 1
	cameraTransformationForm {
		position 410 323
		drawScreen 1
		drawFrustum 1
		drawLinks 1
		transformationForm {
			position 0 0
			inputsStorage 14 0 
			inputsMultiOut -1 
			transformations {
			}
		}
		transformationForm {
			position 155 0
			inputsStorage -1 
			inputsMultiOut 2 0 
			transformations {
				translation {
					params 0 0 0
					default 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
					matrix 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
					isLocked 1
					useSynergies 0
				}
			}
		}
	}
	transformationForm {
		position 766 335
		inputsStorage -1 
		inputsMultiOut -1 
		object objects basics cube white
		transformations {
			translation {
				params 0 0 -3
				default 1 0 0 0 0 1 0 0 0 0 1 0 0 0 -3 1
				matrix 1 0 0 0 0 1 0 0 0 0 1 0 0 0 -3 1
				isLocked 1
				useSynergies 0
			}
		}
	}
	transformations {
	}
	sceneTab {
		position 763 49
		size 364 267
		input 0 0 
	}
	operators {
		FloatSender {
		hint {
Specify the coordinates for the right vertical clipping planes.}
			position 120 108
			inputs -1  
			value 2 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
			manual 2 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
			default 2 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
		}
		FloatSender {
		hint {
Specify the coordinates for the bottom horizontal clipping planes.
}
			position 120 168
			inputs -1  
			value -1.5 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
			manual -1.5 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
			default -1.5 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
		}
		FloatSender {
		hint {
Specify the coordinates for the top horizontal clipping planes.
}
			position 120 228
			inputs -1  
			value 1.5 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
			manual 1.5 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
			default 1.5 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
		}
		FloatSender {
		hint {
Specify the distances to the near depth clipping planes. Distance must be positive.
                }
			position 120 288
			inputs -1  
			value 2 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
			manual 2 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
			default 2 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
		}
		FloatSender {
		hint {
Specify the distances to the far depth clipping planes. Distance must be positive.
                }
			position 120 348
			inputs -1  
			value 6 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
			manual 6 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
			default 6 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
		}
		FloatSender {
		hint {
Specify the coordinates for the left vertical clipping planes.}
			position 120 48
			inputs -1  
			value -2 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
			manual -2 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
			default -2 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
		}
		Frustum {
		hint {
Function glm::frustum describes a perspective matrix that produces a perspective projection. Depth buffer precision is affected by the values specified for nearVal and farVal.            The greater the ratio of farVal to nearVal is, the less effective the depth buffer will be at distinguishing between surfaces that are near each other.}
			position 271 147
			inputs 13 0 8 0 9 0 10 0 11 0 12 0  
		}
	}
}
