# Run pipeline only on master branch, tags and merge requests
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH == "develop"

.i3t_source_changes:
  rules:
    - changes:
      - CMakeLists.txt
      - .clang-format
      - .clang-tidy
      - "*.{cpp|h}"

image: cvutdcgi/i3t-ci

stages:
  - pre-lint  # linting without building
  - build
  - lint
  - test
  - release

# Linting phase
check-format:
  stage: pre-lint
  script:
    - bash Scripts/CheckFormat.sh
  extends: .i3t_source_changes

###

build-app:
  stage: build
  script:
    - mkdir out && cd out
    - cmake ..
    - cmake --build . -j 8 --target I3T
  artifacts:
    paths:
      - Binaries
    expire_in: 1 week
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  dependencies:
    - check-format
  # Run only when Source/*cpp or Source/*h files change
  extends: .i3t_source_changes

build-tests:
  stage: build
  script:
    - mkdir out && cd out
    - cmake -DCMAKE_BUILD_TYPE=Debug ..
    - cmake --build . -j 8 --target I3TTest
  artifacts:
    paths:
      - Binaries
    expire_in: 1 week
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  dependencies:
    - check-format
  extends: .i3t_source_changes

###

# run tests using the binary built before
test:
  stage: test
  script:
    - bash Scripts/RunTests.sh
  dependencies:
    - build-tests
  extends: .i3t_source_changes

###

release:
  stage: release
  only:
    - master
  script:
    - mkdir relase-out && cd release-out
    - cmake -DCMAKE_BUILD_TYPE=Release ..
    - cmake --build . -j 8 --target I3T
    - bash Scripts/CreateBundle.sh
  artifacts:
    paths:
      - I3T*.zip
  dependencies:
    - test

pass:
  script:
    - echo "Pipeline passed"
