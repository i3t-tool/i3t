contentFiles {
	contentFile \data\content.cnt
}
scene {
	camera {
		position 3.07065 4.43654 8.96107
		lookAt 1.15202 -0.62654 3.82328
		up 0 1 0
		orbitCenter 0.380873 -2.66151 1.75828
		radians 1
	}
	desc {
Quaternion construction
================

1. manually - compute x,y,z,w  (white cube)
2. using a module (yellow cube)
For comparison, rotate matrix is used (red cube)

Note - the vector must be normalizaed (a unit vector)

Task 
- try different vectors and angles
- reconnect the vector directly (without normalization) and try to rotate using non-unit vectros }
		position 837 258
}
transformationSpace {
	position 3 284
	projectionPosition -104.002 -80.6354
	projectionScale 1.30451
	transformationForm {
		position 1260 204
		inputsStorage 20 0 
		inputsMultiOut 3 0 
		object objects basics cube white
		objectVisible 1
		transformations {
		}
	}
	transformationForm {
		position 1056 204
		inputsStorage -1 
		inputsMultiOut -1 
		transformations {
			translation {
				params 0 0 0
				default 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
				matrix 1 0 0 0 0 1 0 0 0 0 1 0 -2.4 0 0 1
				isLocked 1
				useSynergies 0
			}
		}
	}
	transformationForm {
		position 424.425 501.413
		inputsStorage -1 
		inputsMultiOut -1 
		transformations {
			translation {
				params 0 0 0
				default 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
				matrix 1 0 0 0 0 1 0 0 0 0 1 0 2.22 0 0 1
				isLocked 1
				useSynergies 0
			}
		}
	}
	transformationForm {
		position 640.425 501.413
		inputsStorage 21 0 
		inputsMultiOut 5 0 
		object objects basics cube red
		objectVisible 1
		transformations {
		}
	}
	transformationForm {
		position 1260.65 453.812
		inputsStorage 26 0 
		inputsMultiOut 11 0 
		object objects basics cube yellow
		objectVisible 1
		transformations {
		}
	}
	transformationForm {
		position 1056.65 453.812
		inputsStorage -1 
		inputsMultiOut -1 
		transformations {
			translation {
				params 0 0 0
				default 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
				matrix 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
				isLocked 1
				useSynergies 0
			}
		}
	}
	transformations {
	}
	operators {
		FloatSender {
			position -84.0149 88.4323
			inputs -1  
			value -0.769296 0 0 1 0 1 0 0 0 0 1 0 0 0 0 1
			manual -0.769296 0 0 1 0 1 0 0 0 0 1 0 0 0 0 1
			default 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
		}
		Vector3Sender {
			position -14.8759 231.684
			inputs 29 0  
			value 0.00327474 0.218316 0.975873 1 0 1 0 0 0 0 1 0 0 0 0 1
			manual 0 1 2.7 1 0 1 0 0 0 0 1 0 0 0 0 1
			default 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
		}
		FloatSinCos {
			position 372 108
			inputs 23 0  
		}
		Vector3ToFloats {
			position 372 -24
			inputs 13 0  
		}
		FloatsToQuat {
			position 780 72
			inputs 19 0 18 0 17 0 14 1  
		}
		FloatMulFloat {
			position 588 60
			inputs 15 2 14 0  
		}
		FloatMulFloat {
			position 588 -24
			inputs 15 1 14 0  
		}
		FloatMulFloat {
			position 588 -108
			inputs 15 0 14 0  
		}
		QuatToMatrix {
			position 1260 72
			inputs 22 0  
		}
		AxisAngle {
			position 154.588 501.867
			inputs 12 0 13 0  
		}
		NormalizeQuat {
			position 1008 72
			inputs 16 0  
		}
		FloatDivFloat {
			position 216 108
			inputs 12 0 24 0  
		}
		FloatSender {
			position 216 192
			inputs -1  
			value 2 0 0 1 0 1 0 0 0 0 1 0 0 0 0 1
			manual 2 0 0 1 0 1 0 0 0 0 1 0 0 0 0 1
			default 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
		}
		FloatVecToQuat {
			position 212.603 383.379
			inputs 12 0 -1  
		}
		QuatToMatrix {
			position 1260.65 321.812
			inputs -1  
		}
		FloatVecToQuat {
			position 214.558 271.842
			inputs -1 -1  
		}
		Vector3Sender {
		hint {
}
			position -84 -12
			inputs -1  
			value 0.015 1 4.47 1 0 1 0 0 0 0 1 0 0 0 0 1
			manual 0.015 1 4.47 1 0 1 0 0 0 0 1 0 0 0 0 1
			default 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
		}
		NormalizeVector3 {
			position 51.6541 -12
			inputs 28 0  
		}
	}
}
